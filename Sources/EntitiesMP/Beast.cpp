/*
 * This file is generated by Entity Class Compiler, (c) CroTeam 1997-98
 */

#line 5 "D:/SE1_GPL/Sources/EntitiesMP/Beast.es"

#include "StdH.h"
#include "Models/Enemies/Beast/Beast.h"
#include "EntitiesMP/WorldSettingsController.h"
#include "EntitiesMP/BackgroundViewer.h"

#include <EntitiesMP/Beast.h>
#include <EntitiesMP/Beast_tables.h>
#line 21 "D:/SE1_GPL/Sources/EntitiesMP/Beast.es"

static FLOAT _tmLastStandingAnim =0.0f;  
#define BEAST_STRETCH 2.0f
#define BIG_BEAST_STRETCH 12.0f
#define HUGE_BEAST_STRETCH 30.0f

// info structure
static EntityInfo eiBeastHuge = {
  EIBT_FLESH, 10000.0f,
  0.0f, 2.0f*HUGE_BEAST_STRETCH, 0.0f,     // source (eyes)
  0.0f, 1.5f*HUGE_BEAST_STRETCH, 0.0f,     // target (body)
};
static EntityInfo eiBeastNormal = {
  EIBT_FLESH, 1500.0f,
  0.0f, 2.0f*BEAST_STRETCH, 0.0f,     // source (eyes)
  0.0f, 1.5f*BEAST_STRETCH, 0.0f,     // target (body)
};
static EntityInfo eiBeastBig = {
  EIBT_FLESH, 5000.0f,
  0.0f, 2.0f*BIG_BEAST_STRETCH, 0.0f,     // source (eyes)
  0.0f, 1.5f*BIG_BEAST_STRETCH, 0.0f,     // target (body)
};

void CBeast::SetDefaultProperties(void) {
  m_bcType = BT_NORMAL ;
  m_iCounter = 0;
  m_bBeBoss = FALSE ;
  CEnemyBase::SetDefaultProperties();
}
  CTString CBeast::GetPlayerKillDescription(const CTString & strPlayerName,const EDeath & eDeath) 
#line 77 "D:/SE1_GPL/Sources/EntitiesMP/Beast.es"
{
#line 78 "D:/SE1_GPL/Sources/EntitiesMP/Beast.es"
CTString str ;
#line 79 "D:/SE1_GPL/Sources/EntitiesMP/Beast.es"
str  . PrintF  (TRANS  ("A Reptiloid killed %s") , strPlayerName );
#line 80 "D:/SE1_GPL/Sources/EntitiesMP/Beast.es"
return str ;
#line 81 "D:/SE1_GPL/Sources/EntitiesMP/Beast.es"
}
  const CTFileName & CBeast::GetComputerMessageName(void)const {
#line 83 "D:/SE1_GPL/Sources/EntitiesMP/Beast.es"
static DECLARE_CTFILENAME  (fnmNormal  , "Data\\Messages\\Enemies\\BeastNormal.txt");
#line 84 "D:/SE1_GPL/Sources/EntitiesMP/Beast.es"
static DECLARE_CTFILENAME  (fnmBig  , "Data\\Messages\\Enemies\\BeastBig.txt");
#line 85 "D:/SE1_GPL/Sources/EntitiesMP/Beast.es"
static DECLARE_CTFILENAME  (fnmHuge  , "DataMP\\Messages\\Enemies\\BeastBiggest.txt");
#line 86 "D:/SE1_GPL/Sources/EntitiesMP/Beast.es"
switch(m_bcType ){
#line 87 "D:/SE1_GPL/Sources/EntitiesMP/Beast.es"
default  : ASSERT  (FALSE );
#line 88 "D:/SE1_GPL/Sources/EntitiesMP/Beast.es"
case BT_NORMAL : return fnmNormal ;
#line 89 "D:/SE1_GPL/Sources/EntitiesMP/Beast.es"
case BT_BIG : return fnmBig ;
#line 90 "D:/SE1_GPL/Sources/EntitiesMP/Beast.es"
case BT_HUGE : return fnmHuge ;
#line 91 "D:/SE1_GPL/Sources/EntitiesMP/Beast.es"
}
#line 92 "D:/SE1_GPL/Sources/EntitiesMP/Beast.es"
}
  
#line 93 "D:/SE1_GPL/Sources/EntitiesMP/Beast.es"
void CBeast::Precache(void) {
#line 94 "D:/SE1_GPL/Sources/EntitiesMP/Beast.es"
CEnemyBase  :: Precache  ();
#line 95 "D:/SE1_GPL/Sources/EntitiesMP/Beast.es"
PrecacheSound  (SOUND_IDLE );
#line 96 "D:/SE1_GPL/Sources/EntitiesMP/Beast.es"
PrecacheSound  (SOUND_SIGHT );
#line 97 "D:/SE1_GPL/Sources/EntitiesMP/Beast.es"
PrecacheSound  (SOUND_WOUND );
#line 98 "D:/SE1_GPL/Sources/EntitiesMP/Beast.es"
PrecacheSound  (SOUND_ANGER );
#line 99 "D:/SE1_GPL/Sources/EntitiesMP/Beast.es"
PrecacheSound  (SOUND_FIRE );
#line 100 "D:/SE1_GPL/Sources/EntitiesMP/Beast.es"
PrecacheSound  (SOUND_KICK );
#line 101 "D:/SE1_GPL/Sources/EntitiesMP/Beast.es"
PrecacheModel  (MODEL_BEAST );
#line 102 "D:/SE1_GPL/Sources/EntitiesMP/Beast.es"
PrecacheTexture  (TEXTURE_BEAST_NORMAL );
#line 103 "D:/SE1_GPL/Sources/EntitiesMP/Beast.es"
PrecacheTexture  (TEXTURE_BEAST_BIG );
#line 104 "D:/SE1_GPL/Sources/EntitiesMP/Beast.es"
if(m_bcType  == BT_NORMAL ){
#line 105 "D:/SE1_GPL/Sources/EntitiesMP/Beast.es"
PrecacheSound  (SOUND_DEATH );
#line 106 "D:/SE1_GPL/Sources/EntitiesMP/Beast.es"
PrecacheClass  (CLASS_PROJECTILE  , PRT_BEAST_PROJECTILE );
#line 107 "D:/SE1_GPL/Sources/EntitiesMP/Beast.es"
}else {
#line 108 "D:/SE1_GPL/Sources/EntitiesMP/Beast.es"
PrecacheSound  (SOUND_DEATHBIG );
#line 109 "D:/SE1_GPL/Sources/EntitiesMP/Beast.es"
PrecacheClass  (CLASS_PROJECTILE  , PRT_BEAST_BIG_PROJECTILE );
#line 110 "D:/SE1_GPL/Sources/EntitiesMP/Beast.es"
}
#line 111 "D:/SE1_GPL/Sources/EntitiesMP/Beast.es"
}
  
#line 114 "D:/SE1_GPL/Sources/EntitiesMP/Beast.es"
void * CBeast::GetEntityInfo(void) {
#line 115 "D:/SE1_GPL/Sources/EntitiesMP/Beast.es"
if(m_bcType  == BT_NORMAL ){
#line 116 "D:/SE1_GPL/Sources/EntitiesMP/Beast.es"
return & eiBeastNormal ;
#line 117 "D:/SE1_GPL/Sources/EntitiesMP/Beast.es"
}else if(m_bcType  == BT_HUGE ){
#line 118 "D:/SE1_GPL/Sources/EntitiesMP/Beast.es"
return & eiBeastHuge ;
#line 119 "D:/SE1_GPL/Sources/EntitiesMP/Beast.es"
}else {
#line 120 "D:/SE1_GPL/Sources/EntitiesMP/Beast.es"
return & eiBeastBig ;
#line 121 "D:/SE1_GPL/Sources/EntitiesMP/Beast.es"
}
#line 122 "D:/SE1_GPL/Sources/EntitiesMP/Beast.es"
}
  
#line 124 "D:/SE1_GPL/Sources/EntitiesMP/Beast.es"
void CBeast::ShakeItBaby(FLOAT tmShaketime,FLOAT fPower) 
#line 125 "D:/SE1_GPL/Sources/EntitiesMP/Beast.es"
{
#line 126 "D:/SE1_GPL/Sources/EntitiesMP/Beast.es"
CWorldSettingsController  * pwsc  = GetWSC  (this );
#line 127 "D:/SE1_GPL/Sources/EntitiesMP/Beast.es"
if(pwsc  != NULL ){
#line 128 "D:/SE1_GPL/Sources/EntitiesMP/Beast.es"
pwsc  -> m_tmShakeStarted  = tmShaketime ;
#line 129 "D:/SE1_GPL/Sources/EntitiesMP/Beast.es"
pwsc  -> m_vShakePos  = GetPlacement  () . pl_PositionVector ;
#line 130 "D:/SE1_GPL/Sources/EntitiesMP/Beast.es"
pwsc  -> m_fShakeFalloff  = 400.0f;
#line 131 "D:/SE1_GPL/Sources/EntitiesMP/Beast.es"
pwsc  -> m_fShakeFade  = 3.0f;
#line 133 "D:/SE1_GPL/Sources/EntitiesMP/Beast.es"
pwsc  -> m_fShakeIntensityZ  = 0.0f;
#line 134 "D:/SE1_GPL/Sources/EntitiesMP/Beast.es"
pwsc  -> m_tmShakeFrequencyZ  = 5.0f;
#line 135 "D:/SE1_GPL/Sources/EntitiesMP/Beast.es"
pwsc  -> m_fShakeIntensityY  = 0.1f * fPower ;
#line 136 "D:/SE1_GPL/Sources/EntitiesMP/Beast.es"
pwsc  -> m_tmShakeFrequencyY  = 5.0f;
#line 137 "D:/SE1_GPL/Sources/EntitiesMP/Beast.es"
pwsc  -> m_fShakeIntensityB  = 2.5f * fPower ;
#line 138 "D:/SE1_GPL/Sources/EntitiesMP/Beast.es"
pwsc  -> m_tmShakeFrequencyB  = 7.2f;
#line 140 "D:/SE1_GPL/Sources/EntitiesMP/Beast.es"
pwsc  -> m_bShakeFadeIn  = FALSE ;
#line 141 "D:/SE1_GPL/Sources/EntitiesMP/Beast.es"
}
#line 142 "D:/SE1_GPL/Sources/EntitiesMP/Beast.es"
}
  
#line 144 "D:/SE1_GPL/Sources/EntitiesMP/Beast.es"
FLOAT CBeast::GetCrushHealth(void) 
#line 145 "D:/SE1_GPL/Sources/EntitiesMP/Beast.es"
{
#line 146 "D:/SE1_GPL/Sources/EntitiesMP/Beast.es"
if(m_bcType  == BT_BIG ){
#line 147 "D:/SE1_GPL/Sources/EntitiesMP/Beast.es"
return 100.0f;
#line 148 "D:/SE1_GPL/Sources/EntitiesMP/Beast.es"
}else if(m_bcType  == BT_HUGE ){
#line 149 "D:/SE1_GPL/Sources/EntitiesMP/Beast.es"
return 200.0f;
#line 150 "D:/SE1_GPL/Sources/EntitiesMP/Beast.es"
}
#line 151 "D:/SE1_GPL/Sources/EntitiesMP/Beast.es"
return 0.0f;
#line 152 "D:/SE1_GPL/Sources/EntitiesMP/Beast.es"
}
  
#line 154 "D:/SE1_GPL/Sources/EntitiesMP/Beast.es"
BOOL CBeast::ForcesCannonballToExplode(void) 
#line 155 "D:/SE1_GPL/Sources/EntitiesMP/Beast.es"
{
#line 156 "D:/SE1_GPL/Sources/EntitiesMP/Beast.es"
return TRUE ;
#line 157 "D:/SE1_GPL/Sources/EntitiesMP/Beast.es"
}
  
#line 160 "D:/SE1_GPL/Sources/EntitiesMP/Beast.es"
void CBeast::ReceiveDamage(CEntity * penInflictor,enum DamageType dmtType,
#line 161 "D:/SE1_GPL/Sources/EntitiesMP/Beast.es"
FLOAT fDamageAmmount,const FLOAT3D & vHitPoint,const FLOAT3D & vDirection) 
#line 162 "D:/SE1_GPL/Sources/EntitiesMP/Beast.es"
{
#line 165 "D:/SE1_GPL/Sources/EntitiesMP/Beast.es"
if(dmtType  == DMT_BULLET  && fDamageAmmount  > 100.0f)
#line 166 "D:/SE1_GPL/Sources/EntitiesMP/Beast.es"
{
#line 167 "D:/SE1_GPL/Sources/EntitiesMP/Beast.es"
fDamageAmmount  *= 0.5f;
#line 168 "D:/SE1_GPL/Sources/EntitiesMP/Beast.es"
}
#line 171 "D:/SE1_GPL/Sources/EntitiesMP/Beast.es"
if(m_bcType  == BT_BIG  && dmtType  == DMT_CANNONBALL )
#line 172 "D:/SE1_GPL/Sources/EntitiesMP/Beast.es"
{
#line 173 "D:/SE1_GPL/Sources/EntitiesMP/Beast.es"
fDamageAmmount  *= 0.3333f;
#line 174 "D:/SE1_GPL/Sources/EntitiesMP/Beast.es"
}
#line 177 "D:/SE1_GPL/Sources/EntitiesMP/Beast.es"
if(! IsOfClass  (penInflictor  , "Beast")){
#line 178 "D:/SE1_GPL/Sources/EntitiesMP/Beast.es"
CEnemyBase  :: ReceiveDamage  (penInflictor  , dmtType  , fDamageAmmount  , vHitPoint  , vDirection );
#line 179 "D:/SE1_GPL/Sources/EntitiesMP/Beast.es"
}
#line 180 "D:/SE1_GPL/Sources/EntitiesMP/Beast.es"
}
  
#line 184 "D:/SE1_GPL/Sources/EntitiesMP/Beast.es"
INDEX CBeast::AnimForDamage(FLOAT fDamage) {
#line 185 "D:/SE1_GPL/Sources/EntitiesMP/Beast.es"
INDEX iAnim ;
#line 186 "D:/SE1_GPL/Sources/EntitiesMP/Beast.es"
if((m_bcType  == BT_BIG  || m_bcType  == BT_HUGE ) && GetHealth  () <= m_fMaxHealth  / 2){
#line 187 "D:/SE1_GPL/Sources/EntitiesMP/Beast.es"
iAnim  = BEAST_ANIM_ANGER ;
#line 188 "D:/SE1_GPL/Sources/EntitiesMP/Beast.es"
}else {
#line 189 "D:/SE1_GPL/Sources/EntitiesMP/Beast.es"
iAnim  = BEAST_ANIM_WOUND ;
#line 190 "D:/SE1_GPL/Sources/EntitiesMP/Beast.es"
}
#line 191 "D:/SE1_GPL/Sources/EntitiesMP/Beast.es"
StartModelAnim  (iAnim  , 0);
#line 192 "D:/SE1_GPL/Sources/EntitiesMP/Beast.es"
return iAnim ;
#line 193 "D:/SE1_GPL/Sources/EntitiesMP/Beast.es"
}
  
#line 196 "D:/SE1_GPL/Sources/EntitiesMP/Beast.es"
INDEX CBeast::AnimForDeath(void) {
#line 197 "D:/SE1_GPL/Sources/EntitiesMP/Beast.es"
INDEX iAnim ;
#line 198 "D:/SE1_GPL/Sources/EntitiesMP/Beast.es"
if(m_bcType  == BT_BIG  || m_bcType  == BT_HUGE ){
#line 199 "D:/SE1_GPL/Sources/EntitiesMP/Beast.es"
iAnim  = BEAST_ANIM_DEATHBIG ;
#line 200 "D:/SE1_GPL/Sources/EntitiesMP/Beast.es"
}else {
#line 201 "D:/SE1_GPL/Sources/EntitiesMP/Beast.es"
iAnim  = BEAST_ANIM_DEATH ;
#line 202 "D:/SE1_GPL/Sources/EntitiesMP/Beast.es"
}
#line 204 "D:/SE1_GPL/Sources/EntitiesMP/Beast.es"
StartModelAnim  (iAnim  , 0);
#line 205 "D:/SE1_GPL/Sources/EntitiesMP/Beast.es"
return iAnim ;
#line 206 "D:/SE1_GPL/Sources/EntitiesMP/Beast.es"
}
  
#line 208 "D:/SE1_GPL/Sources/EntitiesMP/Beast.es"
FLOAT CBeast::WaitForDust(FLOAT3D & vStretch) {
#line 209 "D:/SE1_GPL/Sources/EntitiesMP/Beast.es"
if(GetModelObject  () -> GetAnim  () == BEAST_ANIM_DEATH )
#line 210 "D:/SE1_GPL/Sources/EntitiesMP/Beast.es"
{
#line 211 "D:/SE1_GPL/Sources/EntitiesMP/Beast.es"
vStretch  = FLOAT3D (1 , 1 , 2) * 2.0f;
#line 212 "D:/SE1_GPL/Sources/EntitiesMP/Beast.es"
return 0.3f;
#line 213 "D:/SE1_GPL/Sources/EntitiesMP/Beast.es"
}
#line 214 "D:/SE1_GPL/Sources/EntitiesMP/Beast.es"
return - 1.0f;
#line 215 "D:/SE1_GPL/Sources/EntitiesMP/Beast.es"
}
  
#line 217 "D:/SE1_GPL/Sources/EntitiesMP/Beast.es"
void CBeast::DeathNotify(void) {
#line 218 "D:/SE1_GPL/Sources/EntitiesMP/Beast.es"
ChangeCollisionBoxIndexWhenPossible  (BEAST_COLLISION_BOX_DEATH );
#line 219 "D:/SE1_GPL/Sources/EntitiesMP/Beast.es"
en_fDensity  = 500.0f;
#line 220 "D:/SE1_GPL/Sources/EntitiesMP/Beast.es"
}
  
#line 223 "D:/SE1_GPL/Sources/EntitiesMP/Beast.es"
void CBeast::StandingAnim(void) {
#line 224 "D:/SE1_GPL/Sources/EntitiesMP/Beast.es"
_tmLastStandingAnim  = _pTimer  -> CurrentTick  ();
#line 225 "D:/SE1_GPL/Sources/EntitiesMP/Beast.es"
StartModelAnim  (BEAST_ANIM_IDLE  , AOF_LOOPING  | AOF_NORESTART );
#line 226 "D:/SE1_GPL/Sources/EntitiesMP/Beast.es"
}
  
#line 228 "D:/SE1_GPL/Sources/EntitiesMP/Beast.es"
void CBeast::WalkingAnim(void) {
#line 229 "D:/SE1_GPL/Sources/EntitiesMP/Beast.es"
if(_pTimer  -> CurrentTick  () >= _tmLastStandingAnim  - _pTimer  -> TickQuantum  && 
#line 230 "D:/SE1_GPL/Sources/EntitiesMP/Beast.es"
_pTimer  -> CurrentTick  () <= _tmLastStandingAnim  + _pTimer  -> TickQuantum )
#line 231 "D:/SE1_GPL/Sources/EntitiesMP/Beast.es"
{
#line 233 "D:/SE1_GPL/Sources/EntitiesMP/Beast.es"
}
#line 235 "D:/SE1_GPL/Sources/EntitiesMP/Beast.es"
if(m_bcType  == BT_BIG  || m_bcType  == BT_HUGE ){
#line 236 "D:/SE1_GPL/Sources/EntitiesMP/Beast.es"
StartModelAnim  (BEAST_ANIM_WALKBIG  , AOF_LOOPING  | AOF_NORESTART );
#line 237 "D:/SE1_GPL/Sources/EntitiesMP/Beast.es"
}else {
#line 238 "D:/SE1_GPL/Sources/EntitiesMP/Beast.es"
StartModelAnim  (BEAST_ANIM_WALK  , AOF_LOOPING  | AOF_NORESTART );
#line 239 "D:/SE1_GPL/Sources/EntitiesMP/Beast.es"
}
#line 240 "D:/SE1_GPL/Sources/EntitiesMP/Beast.es"
}
  
#line 242 "D:/SE1_GPL/Sources/EntitiesMP/Beast.es"
void CBeast::RunningAnim(void) {
#line 243 "D:/SE1_GPL/Sources/EntitiesMP/Beast.es"
WalkingAnim  ();
#line 244 "D:/SE1_GPL/Sources/EntitiesMP/Beast.es"
}
  
#line 245 "D:/SE1_GPL/Sources/EntitiesMP/Beast.es"
void CBeast::RotatingAnim(void) {
#line 246 "D:/SE1_GPL/Sources/EntitiesMP/Beast.es"
WalkingAnim  ();
#line 247 "D:/SE1_GPL/Sources/EntitiesMP/Beast.es"
}
  
#line 250 "D:/SE1_GPL/Sources/EntitiesMP/Beast.es"
void CBeast::IdleSound(void) {
#line 251 "D:/SE1_GPL/Sources/EntitiesMP/Beast.es"
PlaySound  (m_soSound  , SOUND_IDLE  , SOF_3D );
#line 252 "D:/SE1_GPL/Sources/EntitiesMP/Beast.es"
}
  
#line 253 "D:/SE1_GPL/Sources/EntitiesMP/Beast.es"
void CBeast::SightSound(void) {
#line 254 "D:/SE1_GPL/Sources/EntitiesMP/Beast.es"
PlaySound  (m_soSound  , SOUND_SIGHT  , SOF_3D );
#line 255 "D:/SE1_GPL/Sources/EntitiesMP/Beast.es"
}
  
#line 256 "D:/SE1_GPL/Sources/EntitiesMP/Beast.es"
void CBeast::WoundSound(void) {
#line 257 "D:/SE1_GPL/Sources/EntitiesMP/Beast.es"
if((m_bcType  == BT_BIG  || m_bcType  == BT_HUGE ) && GetHealth  () <= m_fMaxHealth  / 2){
#line 258 "D:/SE1_GPL/Sources/EntitiesMP/Beast.es"
PlaySound  (m_soSound  , SOUND_ANGER  , SOF_3D );
#line 259 "D:/SE1_GPL/Sources/EntitiesMP/Beast.es"
}else {
#line 260 "D:/SE1_GPL/Sources/EntitiesMP/Beast.es"
PlaySound  (m_soSound  , SOUND_WOUND  , SOF_3D );
#line 261 "D:/SE1_GPL/Sources/EntitiesMP/Beast.es"
}
#line 262 "D:/SE1_GPL/Sources/EntitiesMP/Beast.es"
}
  
#line 263 "D:/SE1_GPL/Sources/EntitiesMP/Beast.es"
void CBeast::DeathSound(void) {
#line 264 "D:/SE1_GPL/Sources/EntitiesMP/Beast.es"
if(m_bcType  == BT_NORMAL ){
#line 265 "D:/SE1_GPL/Sources/EntitiesMP/Beast.es"
PlaySound  (m_soSound  , SOUND_DEATH  , SOF_3D );
#line 266 "D:/SE1_GPL/Sources/EntitiesMP/Beast.es"
}else {
#line 267 "D:/SE1_GPL/Sources/EntitiesMP/Beast.es"
PlaySound  (m_soSound  , SOUND_DEATHBIG  , SOF_3D );
#line 268 "D:/SE1_GPL/Sources/EntitiesMP/Beast.es"
}
#line 269 "D:/SE1_GPL/Sources/EntitiesMP/Beast.es"
}
  
#line 273 "D:/SE1_GPL/Sources/EntitiesMP/Beast.es"
void CBeast::EnemyPostInit(void) 
#line 274 "D:/SE1_GPL/Sources/EntitiesMP/Beast.es"
{
#line 275 "D:/SE1_GPL/Sources/EntitiesMP/Beast.es"
m_soSound  . Set3DParameters  (160.0f , 50.0f , 2.0f , 1.0f);
#line 276 "D:/SE1_GPL/Sources/EntitiesMP/Beast.es"
}
BOOL CBeast::
#line 282 "D:/SE1_GPL/Sources/EntitiesMP/Beast.es"
Death(const CEntityEvent &__eeInput) {
#undef STATE_CURRENT
#define STATE_CURRENT STATE_CBeast_Death
  ASSERTMSG(__eeInput.ee_slEvent==EVENTCODE_EVoid, "CBeast::Death expects 'EVoid' as input!");  const EVoid &e = (const EVoid &)__eeInput;
#line 283 "D:/SE1_GPL/Sources/EntitiesMP/Beast.es"
if(m_bcType  == BT_NORMAL ){
#line 284 "D:/SE1_GPL/Sources/EntitiesMP/Beast.es"
Jump(STATE_CURRENT, STATE_CEnemyBase_Death, FALSE, EVoid());return TRUE;
#line 285 "D:/SE1_GPL/Sources/EntitiesMP/Beast.es"
}
#line 288 "D:/SE1_GPL/Sources/EntitiesMP/Beast.es"
StopMoving  ();
#line 289 "D:/SE1_GPL/Sources/EntitiesMP/Beast.es"
DeathSound  ();
#line 290 "D:/SE1_GPL/Sources/EntitiesMP/Beast.es"
LeaveStain  (TRUE );
#line 292 "D:/SE1_GPL/Sources/EntitiesMP/Beast.es"
SetPhysicsFlags  (EPF_MODEL_CORPSE );
#line 293 "D:/SE1_GPL/Sources/EntitiesMP/Beast.es"
SetCollisionFlags  (ECF_CORPSE );
#line 294 "D:/SE1_GPL/Sources/EntitiesMP/Beast.es"
SetFlags  (GetFlags  () | ENF_SEETHROUGH );
#line 296 "D:/SE1_GPL/Sources/EntitiesMP/Beast.es"
RemoveFromFuss  ();
#line 298 "D:/SE1_GPL/Sources/EntitiesMP/Beast.es"
DeathNotify  ();
#line 300 "D:/SE1_GPL/Sources/EntitiesMP/Beast.es"
AnimForDeath  ();
#line 301 "D:/SE1_GPL/Sources/EntitiesMP/Beast.es"
SetTimerAfter(0.9f);
Jump(STATE_CURRENT, 0x01500001, FALSE, EBegin());return TRUE;}BOOL CBeast::H0x01500001_Death_01(const CEntityEvent &__eeInput) {
#undef STATE_CURRENT
#define STATE_CURRENT 0x01500001
switch(__eeInput.ee_slEvent) {case EVENTCODE_EBegin: return TRUE;case EVENTCODE_ETimer: Jump(STATE_CURRENT,0x01500002, FALSE, EInternal()); return TRUE;default: return FALSE; }}BOOL CBeast::H0x01500002_Death_02(const CEntityEvent &__eeInput){
ASSERT(__eeInput.ee_slEvent==EVENTCODE_EInternal);
#undef STATE_CURRENT
#define STATE_CURRENT 0x01500002
;
#line 302 "D:/SE1_GPL/Sources/EntitiesMP/Beast.es"
if(m_bcType  == BT_BIG ){
#line 303 "D:/SE1_GPL/Sources/EntitiesMP/Beast.es"
ShakeItBaby  (_pTimer  -> CurrentTick  () , 2.0f);
#line 304 "D:/SE1_GPL/Sources/EntitiesMP/Beast.es"
}else {
#line 305 "D:/SE1_GPL/Sources/EntitiesMP/Beast.es"
ShakeItBaby  (_pTimer  -> CurrentTick  () , 3.0f);
#line 306 "D:/SE1_GPL/Sources/EntitiesMP/Beast.es"
}
#line 307 "D:/SE1_GPL/Sources/EntitiesMP/Beast.es"
SetTimerAfter(2.3f - 0.9f);
Jump(STATE_CURRENT, 0x01500003, FALSE, EBegin());return TRUE;}BOOL CBeast::H0x01500003_Death_03(const CEntityEvent &__eeInput) {
#undef STATE_CURRENT
#define STATE_CURRENT 0x01500003
switch(__eeInput.ee_slEvent) {case EVENTCODE_EBegin: return TRUE;case EVENTCODE_ETimer: Jump(STATE_CURRENT,0x01500004, FALSE, EInternal()); return TRUE;default: return FALSE; }}BOOL CBeast::H0x01500004_Death_04(const CEntityEvent &__eeInput){
ASSERT(__eeInput.ee_slEvent==EVENTCODE_EInternal);
#undef STATE_CURRENT
#define STATE_CURRENT 0x01500004
;
#line 308 "D:/SE1_GPL/Sources/EntitiesMP/Beast.es"
if(m_bcType  == BT_BIG ){
#line 309 "D:/SE1_GPL/Sources/EntitiesMP/Beast.es"
ShakeItBaby  (_pTimer  -> CurrentTick  () , 5.0f);
#line 310 "D:/SE1_GPL/Sources/EntitiesMP/Beast.es"
}else {
#line 311 "D:/SE1_GPL/Sources/EntitiesMP/Beast.es"
ShakeItBaby  (_pTimer  -> CurrentTick  () , 7.0f);
#line 312 "D:/SE1_GPL/Sources/EntitiesMP/Beast.es"
}
#line 315 "D:/SE1_GPL/Sources/EntitiesMP/Beast.es"
CPlacement3D plFX  = GetPlacement  ();
#line 316 "D:/SE1_GPL/Sources/EntitiesMP/Beast.es"
ESpawnEffect  ese ;
#line 317 "D:/SE1_GPL/Sources/EntitiesMP/Beast.es"
ese  . colMuliplier  = C_WHITE  | CT_OPAQUE ;
#line 318 "D:/SE1_GPL/Sources/EntitiesMP/Beast.es"
ese  . vStretch  = FLOAT3D (1 , 1 , 2) * 15.0f;
#line 319 "D:/SE1_GPL/Sources/EntitiesMP/Beast.es"
ese  . vNormal  = FLOAT3D (0 , 1 , 0);
#line 320 "D:/SE1_GPL/Sources/EntitiesMP/Beast.es"
ese  . betType  = BET_DUST_FALL ;
#line 321 "D:/SE1_GPL/Sources/EntitiesMP/Beast.es"
CPlacement3D plSmoke  = plFX ;
#line 322 "D:/SE1_GPL/Sources/EntitiesMP/Beast.es"
plSmoke  . pl_PositionVector  += FLOAT3D (0 , 0.35f * ese  . vStretch  (2) , 0);
#line 323 "D:/SE1_GPL/Sources/EntitiesMP/Beast.es"
CEntityPointer penFX  = CreateEntity  (plSmoke  , CLASS_BASIC_EFFECT );
#line 324 "D:/SE1_GPL/Sources/EntitiesMP/Beast.es"
penFX  -> Initialize  (ese );
#line 326 "D:/SE1_GPL/Sources/EntitiesMP/Beast.es"
SetTimerAfter(GetModelObject  () -> GetAnimLength  (BEAST_ANIM_DEATHBIG ) - 2.3f);
Jump(STATE_CURRENT, 0x01500005, FALSE, EBegin());return TRUE;}BOOL CBeast::H0x01500005_Death_05(const CEntityEvent &__eeInput) {
#undef STATE_CURRENT
#define STATE_CURRENT 0x01500005
switch(__eeInput.ee_slEvent) {case EVENTCODE_EBegin: return TRUE;case EVENTCODE_ETimer: Jump(STATE_CURRENT,0x01500006, FALSE, EInternal()); return TRUE;default: return FALSE; }}BOOL CBeast::H0x01500006_Death_06(const CEntityEvent &__eeInput){
ASSERT(__eeInput.ee_slEvent==EVENTCODE_EInternal);
#undef STATE_CURRENT
#define STATE_CURRENT 0x01500006
;
#line 327 "D:/SE1_GPL/Sources/EntitiesMP/Beast.es"
Return(STATE_CURRENT,EEnd  ());
#line 327 "D:/SE1_GPL/Sources/EntitiesMP/Beast.es"
return TRUE; ASSERT(FALSE); return TRUE;};BOOL CBeast::
#line 333 "D:/SE1_GPL/Sources/EntitiesMP/Beast.es"
Fire(const CEntityEvent &__eeInput) {
#undef STATE_CURRENT
#define STATE_CURRENT STATE_CBeast_Fire
  ASSERTMSG(__eeInput.ee_slEvent==EVENTCODE_EVoid, "CBeast::Fire expects 'EVoid' as input!");  const EVoid &e = (const EVoid &)__eeInput;
#line 336 "D:/SE1_GPL/Sources/EntitiesMP/Beast.es"
StartModelAnim  (BEAST_ANIM_WALKTOIDLE  , AOF_SMOOTHCHANGE );
#line 337 "D:/SE1_GPL/Sources/EntitiesMP/Beast.es"
STATE_CMovableModelEntity_WaitUntilScheduledAnimStarts, FALSE;
Jump(STATE_CURRENT, 0x01500008, FALSE, EBegin());return TRUE;}BOOL CBeast::H0x01500008_Fire_01(const CEntityEvent &__eeInput) {
#undef STATE_CURRENT
#define STATE_CURRENT 0x01500008
switch(__eeInput.ee_slEvent) {case EVENTCODE_EBegin: Call(STATE_CURRENT, STATE_CMovableModelEntity_WaitUntilScheduledAnimStarts, FALSE, EVoid());return TRUE;case EVENTCODE_EReturn: Jump(STATE_CURRENT,0x01500009, FALSE, __eeInput); return TRUE;default: return FALSE; }}BOOL CBeast::H0x01500009_Fire_02(const CEntityEvent &__eeInput){
#undef STATE_CURRENT
#define STATE_CURRENT 0x01500009
const EReturn&__e= (EReturn&)__eeInput;
;
#line 339 "D:/SE1_GPL/Sources/EntitiesMP/Beast.es"
if(!(m_bcType  == BT_NORMAL )){ Jump(STATE_CURRENT,0x01500010, FALSE, EInternal());return TRUE;}
#line 341 "D:/SE1_GPL/Sources/EntitiesMP/Beast.es"
StartModelAnim  (BEAST_ANIM_ATTACK  , AOF_SMOOTHCHANGE );
#line 342 "D:/SE1_GPL/Sources/EntitiesMP/Beast.es"
STATE_CMovableModelEntity_WaitUntilScheduledAnimStarts, FALSE;
Jump(STATE_CURRENT, 0x0150000a, FALSE, EBegin());return TRUE;}BOOL CBeast::H0x0150000a_Fire_03(const CEntityEvent &__eeInput) {
#undef STATE_CURRENT
#define STATE_CURRENT 0x0150000a
switch(__eeInput.ee_slEvent) {case EVENTCODE_EBegin: Call(STATE_CURRENT, STATE_CMovableModelEntity_WaitUntilScheduledAnimStarts, FALSE, EVoid());return TRUE;case EVENTCODE_EReturn: Jump(STATE_CURRENT,0x0150000b, FALSE, __eeInput); return TRUE;default: return FALSE; }}BOOL CBeast::H0x0150000b_Fire_04(const CEntityEvent &__eeInput){
#undef STATE_CURRENT
#define STATE_CURRENT 0x0150000b
const EReturn&__e= (EReturn&)__eeInput;
;
#line 343 "D:/SE1_GPL/Sources/EntitiesMP/Beast.es"
PlaySound  (m_soSound  , SOUND_FIRE  , SOF_3D );
#line 344 "D:/SE1_GPL/Sources/EntitiesMP/Beast.es"
SetTimerAfter(0.51f);
Jump(STATE_CURRENT, 0x0150000c, FALSE, EBegin());return TRUE;}BOOL CBeast::H0x0150000c_Fire_05(const CEntityEvent &__eeInput) {
#undef STATE_CURRENT
#define STATE_CURRENT 0x0150000c
switch(__eeInput.ee_slEvent) {case EVENTCODE_EBegin: return TRUE;case EVENTCODE_ETimer: Jump(STATE_CURRENT,0x0150000d, FALSE, EInternal()); return TRUE;default: return FALSE; }}BOOL CBeast::H0x0150000d_Fire_06(const CEntityEvent &__eeInput){
ASSERT(__eeInput.ee_slEvent==EVENTCODE_EInternal);
#undef STATE_CURRENT
#define STATE_CURRENT 0x0150000d
;
#line 346 "D:/SE1_GPL/Sources/EntitiesMP/Beast.es"
ShootProjectile  (PRT_BEAST_PROJECTILE  , FLOAT3D (0.0f , 1.5f * BEAST_STRETCH  , 0.0f) , 
#line 347 "D:/SE1_GPL/Sources/EntitiesMP/Beast.es"
ANGLE3D (AngleDeg  ((FRnd  () - 0.5) * 30.0f) , AngleDeg  (FRnd  () * 10.0f) , 0));
#line 348 "D:/SE1_GPL/Sources/EntitiesMP/Beast.es"
SetTimerAfter(0.3f);
Jump(STATE_CURRENT, 0x0150000e, FALSE, EBegin());return TRUE;}BOOL CBeast::H0x0150000e_Fire_07(const CEntityEvent &__eeInput) {
#undef STATE_CURRENT
#define STATE_CURRENT 0x0150000e
switch(__eeInput.ee_slEvent) {case EVENTCODE_EBegin: return TRUE;case EVENTCODE_ETimer: Jump(STATE_CURRENT,0x0150000f, FALSE, EInternal()); return TRUE;default: return FALSE; }}BOOL CBeast::H0x0150000f_Fire_08(const CEntityEvent &__eeInput){
ASSERT(__eeInput.ee_slEvent==EVENTCODE_EInternal);
#undef STATE_CURRENT
#define STATE_CURRENT 0x0150000f
;Jump(STATE_CURRENT,0x01500010, FALSE, EInternal());return TRUE;}BOOL CBeast::H0x01500010_Fire_09(const CEntityEvent &__eeInput){
ASSERT(__eeInput.ee_slEvent==EVENTCODE_EInternal);
#undef STATE_CURRENT
#define STATE_CURRENT 0x01500010

#line 351 "D:/SE1_GPL/Sources/EntitiesMP/Beast.es"
if(!(m_bcType  == BT_BIG )){ Jump(STATE_CURRENT,0x0150001f, FALSE, EInternal());return TRUE;}
#line 353 "D:/SE1_GPL/Sources/EntitiesMP/Beast.es"
if(!(GetHealth  () <= m_fMaxHealth  / 2)){ Jump(STATE_CURRENT,0x01500017, FALSE, EInternal());return TRUE;}
#line 355 "D:/SE1_GPL/Sources/EntitiesMP/Beast.es"
m_iCounter  = 0;
#line 356 "D:/SE1_GPL/Sources/EntitiesMP/Beast.es"
Jump(STATE_CURRENT,0x01500015, FALSE, EInternal());return TRUE;}BOOL CBeast::H0x01500015_Fire_14(const CEntityEvent &__eeInput)
#line 357 "D:/SE1_GPL/Sources/EntitiesMP/Beast.es"
{
ASSERT(__eeInput.ee_slEvent==EVENTCODE_EInternal);
#undef STATE_CURRENT
#define STATE_CURRENT 0x01500015
if(!(m_iCounter  < 6)){ Jump(STATE_CURRENT,0x01500016, FALSE, EInternal());return TRUE;}
#line 358 "D:/SE1_GPL/Sources/EntitiesMP/Beast.es"
StartModelAnim  (BEAST_ANIM_ATTACKFAST  , AOF_SMOOTHCHANGE );
#line 359 "D:/SE1_GPL/Sources/EntitiesMP/Beast.es"
STATE_CMovableModelEntity_WaitUntilScheduledAnimStarts, FALSE;
Jump(STATE_CURRENT, 0x01500011, FALSE, EBegin());return TRUE;}BOOL CBeast::H0x01500011_Fire_10(const CEntityEvent &__eeInput) {
#undef STATE_CURRENT
#define STATE_CURRENT 0x01500011
switch(__eeInput.ee_slEvent) {case EVENTCODE_EBegin: Call(STATE_CURRENT, STATE_CMovableModelEntity_WaitUntilScheduledAnimStarts, FALSE, EVoid());return TRUE;case EVENTCODE_EReturn: Jump(STATE_CURRENT,0x01500012, FALSE, __eeInput); return TRUE;default: return FALSE; }}BOOL CBeast::H0x01500012_Fire_11(const CEntityEvent &__eeInput){
#undef STATE_CURRENT
#define STATE_CURRENT 0x01500012
const EReturn&__e= (EReturn&)__eeInput;
;
#line 361 "D:/SE1_GPL/Sources/EntitiesMP/Beast.es"
PlaySound  (m_soSound  , SOUND_FIRE  , SOF_3D );
#line 362 "D:/SE1_GPL/Sources/EntitiesMP/Beast.es"
SetTimerAfter(0.34f);
Jump(STATE_CURRENT, 0x01500013, FALSE, EBegin());return TRUE;}BOOL CBeast::H0x01500013_Fire_12(const CEntityEvent &__eeInput) {
#undef STATE_CURRENT
#define STATE_CURRENT 0x01500013
switch(__eeInput.ee_slEvent) {case EVENTCODE_EBegin: return TRUE;case EVENTCODE_ETimer: Jump(STATE_CURRENT,0x01500014, FALSE, EInternal()); return TRUE;default: return FALSE; }}BOOL CBeast::H0x01500014_Fire_13(const CEntityEvent &__eeInput){
ASSERT(__eeInput.ee_slEvent==EVENTCODE_EInternal);
#undef STATE_CURRENT
#define STATE_CURRENT 0x01500014
;
#line 363 "D:/SE1_GPL/Sources/EntitiesMP/Beast.es"
ShootProjectile  (PRT_BEAST_BIG_PROJECTILE  , FLOAT3D (0.0f , 1.5f * BIG_BEAST_STRETCH  , 0.0f) , 
#line 364 "D:/SE1_GPL/Sources/EntitiesMP/Beast.es"
ANGLE3D (0.0f , 0.0f , 0.0f));
#line 367 "D:/SE1_GPL/Sources/EntitiesMP/Beast.es"
m_iCounter  ++;Jump(STATE_CURRENT,0x01500015, FALSE, EInternal());return TRUE;
#line 368 "D:/SE1_GPL/Sources/EntitiesMP/Beast.es"
}BOOL CBeast::H0x01500016_Fire_15(const CEntityEvent &__eeInput) {
ASSERT(__eeInput.ee_slEvent==EVENTCODE_EInternal);
#undef STATE_CURRENT
#define STATE_CURRENT 0x01500016

#line 369 "D:/SE1_GPL/Sources/EntitiesMP/Beast.es"
m_fAttackFireTime  = 7.0f;Jump(STATE_CURRENT,0x01500017, FALSE, EInternal());return TRUE;}BOOL CBeast::H0x01500017_Fire_16(const CEntityEvent &__eeInput){
ASSERT(__eeInput.ee_slEvent==EVENTCODE_EInternal);
#undef STATE_CURRENT
#define STATE_CURRENT 0x01500017

#line 372 "D:/SE1_GPL/Sources/EntitiesMP/Beast.es"
if(!(GetHealth  () > m_fMaxHealth  / 2)){ Jump(STATE_CURRENT,0x0150001e, FALSE, EInternal());return TRUE;}
#line 374 "D:/SE1_GPL/Sources/EntitiesMP/Beast.es"
m_iCounter  = 0;
#line 375 "D:/SE1_GPL/Sources/EntitiesMP/Beast.es"
Jump(STATE_CURRENT,0x0150001c, FALSE, EInternal());return TRUE;}BOOL CBeast::H0x0150001c_Fire_21(const CEntityEvent &__eeInput)
#line 376 "D:/SE1_GPL/Sources/EntitiesMP/Beast.es"
{
ASSERT(__eeInput.ee_slEvent==EVENTCODE_EInternal);
#undef STATE_CURRENT
#define STATE_CURRENT 0x0150001c
if(!(m_iCounter  < 3)){ Jump(STATE_CURRENT,0x0150001d, FALSE, EInternal());return TRUE;}
#line 377 "D:/SE1_GPL/Sources/EntitiesMP/Beast.es"
StartModelAnim  (BEAST_ANIM_ATTACK  , AOF_SMOOTHCHANGE );
#line 378 "D:/SE1_GPL/Sources/EntitiesMP/Beast.es"
STATE_CMovableModelEntity_WaitUntilScheduledAnimStarts, FALSE;
Jump(STATE_CURRENT, 0x01500018, FALSE, EBegin());return TRUE;}BOOL CBeast::H0x01500018_Fire_17(const CEntityEvent &__eeInput) {
#undef STATE_CURRENT
#define STATE_CURRENT 0x01500018
switch(__eeInput.ee_slEvent) {case EVENTCODE_EBegin: Call(STATE_CURRENT, STATE_CMovableModelEntity_WaitUntilScheduledAnimStarts, FALSE, EVoid());return TRUE;case EVENTCODE_EReturn: Jump(STATE_CURRENT,0x01500019, FALSE, __eeInput); return TRUE;default: return FALSE; }}BOOL CBeast::H0x01500019_Fire_18(const CEntityEvent &__eeInput){
#undef STATE_CURRENT
#define STATE_CURRENT 0x01500019
const EReturn&__e= (EReturn&)__eeInput;
;
#line 380 "D:/SE1_GPL/Sources/EntitiesMP/Beast.es"
PlaySound  (m_soSound  , SOUND_FIRE  , SOF_3D );
#line 381 "D:/SE1_GPL/Sources/EntitiesMP/Beast.es"
SetTimerAfter(0.5f);
Jump(STATE_CURRENT, 0x0150001a, FALSE, EBegin());return TRUE;}BOOL CBeast::H0x0150001a_Fire_19(const CEntityEvent &__eeInput) {
#undef STATE_CURRENT
#define STATE_CURRENT 0x0150001a
switch(__eeInput.ee_slEvent) {case EVENTCODE_EBegin: return TRUE;case EVENTCODE_ETimer: Jump(STATE_CURRENT,0x0150001b, FALSE, EInternal()); return TRUE;default: return FALSE; }}BOOL CBeast::H0x0150001b_Fire_20(const CEntityEvent &__eeInput){
ASSERT(__eeInput.ee_slEvent==EVENTCODE_EInternal);
#undef STATE_CURRENT
#define STATE_CURRENT 0x0150001b
;
#line 382 "D:/SE1_GPL/Sources/EntitiesMP/Beast.es"
ShootProjectile  (PRT_BEAST_BIG_PROJECTILE  , FLOAT3D (0.0f , 1.5f * BIG_BEAST_STRETCH  , 0.0f) , 
#line 383 "D:/SE1_GPL/Sources/EntitiesMP/Beast.es"
ANGLE3D (0.0f , 0.0f , 0.0f));
#line 387 "D:/SE1_GPL/Sources/EntitiesMP/Beast.es"
m_iCounter  ++;Jump(STATE_CURRENT,0x0150001c, FALSE, EInternal());return TRUE;
#line 388 "D:/SE1_GPL/Sources/EntitiesMP/Beast.es"
}BOOL CBeast::H0x0150001d_Fire_22(const CEntityEvent &__eeInput) {
ASSERT(__eeInput.ee_slEvent==EVENTCODE_EInternal);
#undef STATE_CURRENT
#define STATE_CURRENT 0x0150001d
Jump(STATE_CURRENT,0x0150001e, FALSE, EInternal());return TRUE;}BOOL CBeast::H0x0150001e_Fire_23(const CEntityEvent &__eeInput){
ASSERT(__eeInput.ee_slEvent==EVENTCODE_EInternal);
#undef STATE_CURRENT
#define STATE_CURRENT 0x0150001e
Jump(STATE_CURRENT,0x0150001f, FALSE, EInternal());return TRUE;}BOOL CBeast::H0x0150001f_Fire_24(const CEntityEvent &__eeInput){
ASSERT(__eeInput.ee_slEvent==EVENTCODE_EInternal);
#undef STATE_CURRENT
#define STATE_CURRENT 0x0150001f

#line 392 "D:/SE1_GPL/Sources/EntitiesMP/Beast.es"
if(!(m_bcType  == BT_HUGE )){ Jump(STATE_CURRENT,0x0150002e, FALSE, EInternal());return TRUE;}
#line 394 "D:/SE1_GPL/Sources/EntitiesMP/Beast.es"
if(!(GetHealth  () <= m_fMaxHealth  / 2)){ Jump(STATE_CURRENT,0x01500026, FALSE, EInternal());return TRUE;}
#line 396 "D:/SE1_GPL/Sources/EntitiesMP/Beast.es"
m_iCounter  = 0;
#line 397 "D:/SE1_GPL/Sources/EntitiesMP/Beast.es"
Jump(STATE_CURRENT,0x01500024, FALSE, EInternal());return TRUE;}BOOL CBeast::H0x01500024_Fire_29(const CEntityEvent &__eeInput)
#line 398 "D:/SE1_GPL/Sources/EntitiesMP/Beast.es"
{
ASSERT(__eeInput.ee_slEvent==EVENTCODE_EInternal);
#undef STATE_CURRENT
#define STATE_CURRENT 0x01500024
if(!(m_iCounter  < 6)){ Jump(STATE_CURRENT,0x01500025, FALSE, EInternal());return TRUE;}
#line 399 "D:/SE1_GPL/Sources/EntitiesMP/Beast.es"
StartModelAnim  (BEAST_ANIM_ATTACKFAST  , AOF_SMOOTHCHANGE );
#line 400 "D:/SE1_GPL/Sources/EntitiesMP/Beast.es"
STATE_CMovableModelEntity_WaitUntilScheduledAnimStarts, FALSE;
Jump(STATE_CURRENT, 0x01500020, FALSE, EBegin());return TRUE;}BOOL CBeast::H0x01500020_Fire_25(const CEntityEvent &__eeInput) {
#undef STATE_CURRENT
#define STATE_CURRENT 0x01500020
switch(__eeInput.ee_slEvent) {case EVENTCODE_EBegin: Call(STATE_CURRENT, STATE_CMovableModelEntity_WaitUntilScheduledAnimStarts, FALSE, EVoid());return TRUE;case EVENTCODE_EReturn: Jump(STATE_CURRENT,0x01500021, FALSE, __eeInput); return TRUE;default: return FALSE; }}BOOL CBeast::H0x01500021_Fire_26(const CEntityEvent &__eeInput){
#undef STATE_CURRENT
#define STATE_CURRENT 0x01500021
const EReturn&__e= (EReturn&)__eeInput;
;
#line 402 "D:/SE1_GPL/Sources/EntitiesMP/Beast.es"
PlaySound  (m_soSound  , SOUND_FIRE  , SOF_3D );
#line 403 "D:/SE1_GPL/Sources/EntitiesMP/Beast.es"
SetTimerAfter(0.34f);
Jump(STATE_CURRENT, 0x01500022, FALSE, EBegin());return TRUE;}BOOL CBeast::H0x01500022_Fire_27(const CEntityEvent &__eeInput) {
#undef STATE_CURRENT
#define STATE_CURRENT 0x01500022
switch(__eeInput.ee_slEvent) {case EVENTCODE_EBegin: return TRUE;case EVENTCODE_ETimer: Jump(STATE_CURRENT,0x01500023, FALSE, EInternal()); return TRUE;default: return FALSE; }}BOOL CBeast::H0x01500023_Fire_28(const CEntityEvent &__eeInput){
ASSERT(__eeInput.ee_slEvent==EVENTCODE_EInternal);
#undef STATE_CURRENT
#define STATE_CURRENT 0x01500023
;
#line 404 "D:/SE1_GPL/Sources/EntitiesMP/Beast.es"
ShootProjectile  (PRT_BEAST_BIG_PROJECTILE  , FLOAT3D (0.0f , 1.5f * HUGE_BEAST_STRETCH  , 0.0f) , 
#line 405 "D:/SE1_GPL/Sources/EntitiesMP/Beast.es"
ANGLE3D (0.0f , 0.0f , 0.0f));
#line 408 "D:/SE1_GPL/Sources/EntitiesMP/Beast.es"
m_iCounter  ++;Jump(STATE_CURRENT,0x01500024, FALSE, EInternal());return TRUE;
#line 409 "D:/SE1_GPL/Sources/EntitiesMP/Beast.es"
}BOOL CBeast::H0x01500025_Fire_30(const CEntityEvent &__eeInput) {
ASSERT(__eeInput.ee_slEvent==EVENTCODE_EInternal);
#undef STATE_CURRENT
#define STATE_CURRENT 0x01500025

#line 410 "D:/SE1_GPL/Sources/EntitiesMP/Beast.es"
m_fAttackFireTime  = 7.0f;Jump(STATE_CURRENT,0x01500026, FALSE, EInternal());return TRUE;}BOOL CBeast::H0x01500026_Fire_31(const CEntityEvent &__eeInput){
ASSERT(__eeInput.ee_slEvent==EVENTCODE_EInternal);
#undef STATE_CURRENT
#define STATE_CURRENT 0x01500026

#line 413 "D:/SE1_GPL/Sources/EntitiesMP/Beast.es"
if(!(GetHealth  () > m_fMaxHealth  / 2)){ Jump(STATE_CURRENT,0x0150002d, FALSE, EInternal());return TRUE;}
#line 415 "D:/SE1_GPL/Sources/EntitiesMP/Beast.es"
m_iCounter  = 0;
#line 416 "D:/SE1_GPL/Sources/EntitiesMP/Beast.es"
Jump(STATE_CURRENT,0x0150002b, FALSE, EInternal());return TRUE;}BOOL CBeast::H0x0150002b_Fire_36(const CEntityEvent &__eeInput)
#line 417 "D:/SE1_GPL/Sources/EntitiesMP/Beast.es"
{
ASSERT(__eeInput.ee_slEvent==EVENTCODE_EInternal);
#undef STATE_CURRENT
#define STATE_CURRENT 0x0150002b
if(!(m_iCounter  < 3)){ Jump(STATE_CURRENT,0x0150002c, FALSE, EInternal());return TRUE;}
#line 418 "D:/SE1_GPL/Sources/EntitiesMP/Beast.es"
StartModelAnim  (BEAST_ANIM_ATTACK  , AOF_SMOOTHCHANGE );
#line 419 "D:/SE1_GPL/Sources/EntitiesMP/Beast.es"
STATE_CMovableModelEntity_WaitUntilScheduledAnimStarts, FALSE;
Jump(STATE_CURRENT, 0x01500027, FALSE, EBegin());return TRUE;}BOOL CBeast::H0x01500027_Fire_32(const CEntityEvent &__eeInput) {
#undef STATE_CURRENT
#define STATE_CURRENT 0x01500027
switch(__eeInput.ee_slEvent) {case EVENTCODE_EBegin: Call(STATE_CURRENT, STATE_CMovableModelEntity_WaitUntilScheduledAnimStarts, FALSE, EVoid());return TRUE;case EVENTCODE_EReturn: Jump(STATE_CURRENT,0x01500028, FALSE, __eeInput); return TRUE;default: return FALSE; }}BOOL CBeast::H0x01500028_Fire_33(const CEntityEvent &__eeInput){
#undef STATE_CURRENT
#define STATE_CURRENT 0x01500028
const EReturn&__e= (EReturn&)__eeInput;
;
#line 421 "D:/SE1_GPL/Sources/EntitiesMP/Beast.es"
PlaySound  (m_soSound  , SOUND_FIRE  , SOF_3D );
#line 422 "D:/SE1_GPL/Sources/EntitiesMP/Beast.es"
SetTimerAfter(0.5f);
Jump(STATE_CURRENT, 0x01500029, FALSE, EBegin());return TRUE;}BOOL CBeast::H0x01500029_Fire_34(const CEntityEvent &__eeInput) {
#undef STATE_CURRENT
#define STATE_CURRENT 0x01500029
switch(__eeInput.ee_slEvent) {case EVENTCODE_EBegin: return TRUE;case EVENTCODE_ETimer: Jump(STATE_CURRENT,0x0150002a, FALSE, EInternal()); return TRUE;default: return FALSE; }}BOOL CBeast::H0x0150002a_Fire_35(const CEntityEvent &__eeInput){
ASSERT(__eeInput.ee_slEvent==EVENTCODE_EInternal);
#undef STATE_CURRENT
#define STATE_CURRENT 0x0150002a
;
#line 423 "D:/SE1_GPL/Sources/EntitiesMP/Beast.es"
ShootProjectile  (PRT_BEAST_BIG_PROJECTILE  , FLOAT3D (0.0f , 1.5f * HUGE_BEAST_STRETCH  , 0.0f) , 
#line 424 "D:/SE1_GPL/Sources/EntitiesMP/Beast.es"
ANGLE3D (0.0f , 0.0f , 0.0f));
#line 428 "D:/SE1_GPL/Sources/EntitiesMP/Beast.es"
m_iCounter  ++;Jump(STATE_CURRENT,0x0150002b, FALSE, EInternal());return TRUE;
#line 429 "D:/SE1_GPL/Sources/EntitiesMP/Beast.es"
}BOOL CBeast::H0x0150002c_Fire_37(const CEntityEvent &__eeInput) {
ASSERT(__eeInput.ee_slEvent==EVENTCODE_EInternal);
#undef STATE_CURRENT
#define STATE_CURRENT 0x0150002c
Jump(STATE_CURRENT,0x0150002d, FALSE, EInternal());return TRUE;}BOOL CBeast::H0x0150002d_Fire_38(const CEntityEvent &__eeInput){
ASSERT(__eeInput.ee_slEvent==EVENTCODE_EInternal);
#undef STATE_CURRENT
#define STATE_CURRENT 0x0150002d
Jump(STATE_CURRENT,0x0150002e, FALSE, EInternal());return TRUE;}BOOL CBeast::H0x0150002e_Fire_39(const CEntityEvent &__eeInput){
ASSERT(__eeInput.ee_slEvent==EVENTCODE_EInternal);
#undef STATE_CURRENT
#define STATE_CURRENT 0x0150002e

#line 433 "D:/SE1_GPL/Sources/EntitiesMP/Beast.es"
MaybeSwitchToAnotherPlayer  ();
#line 435 "D:/SE1_GPL/Sources/EntitiesMP/Beast.es"
SetTimerAfter(FRnd  () / 2 + _pTimer  -> TickQuantum );
Jump(STATE_CURRENT, 0x0150002f, FALSE, EBegin());return TRUE;}BOOL CBeast::H0x0150002f_Fire_40(const CEntityEvent &__eeInput) {
#undef STATE_CURRENT
#define STATE_CURRENT 0x0150002f
switch(__eeInput.ee_slEvent) {case EVENTCODE_EBegin: return TRUE;case EVENTCODE_ETimer: Jump(STATE_CURRENT,0x01500030, FALSE, EInternal()); return TRUE;default: return FALSE; }}BOOL CBeast::H0x01500030_Fire_41(const CEntityEvent &__eeInput){
ASSERT(__eeInput.ee_slEvent==EVENTCODE_EInternal);
#undef STATE_CURRENT
#define STATE_CURRENT 0x01500030
;
#line 437 "D:/SE1_GPL/Sources/EntitiesMP/Beast.es"
if(!(m_penEnemy  != NULL )){ Jump(STATE_CURRENT,0x01500036, FALSE, EInternal());return TRUE;}
#line 439 "D:/SE1_GPL/Sources/EntitiesMP/Beast.es"
FLOAT fEnemyDistance  = CalcDist  (m_penEnemy );
#line 440 "D:/SE1_GPL/Sources/EntitiesMP/Beast.es"
if(!(fEnemyDistance  > m_fCloseDistance  * 1.25f)){ Jump(STATE_CURRENT,0x01500035, FALSE, EInternal());return TRUE;}
#line 442 "D:/SE1_GPL/Sources/EntitiesMP/Beast.es"
StartModelAnim  (BEAST_ANIM_IDLETOWALK  , AOF_SMOOTHCHANGE );
#line 443 "D:/SE1_GPL/Sources/EntitiesMP/Beast.es"
STATE_CMovableModelEntity_WaitUntilScheduledAnimStarts, FALSE;
Jump(STATE_CURRENT, 0x01500031, FALSE, EBegin());return TRUE;}BOOL CBeast::H0x01500031_Fire_42(const CEntityEvent &__eeInput) {
#undef STATE_CURRENT
#define STATE_CURRENT 0x01500031
switch(__eeInput.ee_slEvent) {case EVENTCODE_EBegin: Call(STATE_CURRENT, STATE_CMovableModelEntity_WaitUntilScheduledAnimStarts, FALSE, EVoid());return TRUE;case EVENTCODE_EReturn: Jump(STATE_CURRENT,0x01500032, FALSE, __eeInput); return TRUE;default: return FALSE; }}BOOL CBeast::H0x01500032_Fire_43(const CEntityEvent &__eeInput){
#undef STATE_CURRENT
#define STATE_CURRENT 0x01500032
const EReturn&__e= (EReturn&)__eeInput;
;
#line 444 "D:/SE1_GPL/Sources/EntitiesMP/Beast.es"
SetTimerAfter(GetModelObject  () -> GetAnimLength  (BEAST_ANIM_IDLETOWALK ) / 2.0f - _pTimer  -> TickQuantum );
Jump(STATE_CURRENT, 0x01500033, FALSE, EBegin());return TRUE;}BOOL CBeast::H0x01500033_Fire_44(const CEntityEvent &__eeInput) {
#undef STATE_CURRENT
#define STATE_CURRENT 0x01500033
switch(__eeInput.ee_slEvent) {case EVENTCODE_EBegin: return TRUE;case EVENTCODE_ETimer: Jump(STATE_CURRENT,0x01500034, FALSE, EInternal()); return TRUE;default: return FALSE; }}BOOL CBeast::H0x01500034_Fire_45(const CEntityEvent &__eeInput){
ASSERT(__eeInput.ee_slEvent==EVENTCODE_EInternal);
#undef STATE_CURRENT
#define STATE_CURRENT 0x01500034
;Jump(STATE_CURRENT,0x01500035, FALSE, EInternal());return TRUE;}BOOL CBeast::H0x01500035_Fire_46(const CEntityEvent &__eeInput){
ASSERT(__eeInput.ee_slEvent==EVENTCODE_EInternal);
#undef STATE_CURRENT
#define STATE_CURRENT 0x01500035
Jump(STATE_CURRENT,0x01500036, FALSE, EInternal());return TRUE;}BOOL CBeast::H0x01500036_Fire_47(const CEntityEvent &__eeInput){
ASSERT(__eeInput.ee_slEvent==EVENTCODE_EInternal);
#undef STATE_CURRENT
#define STATE_CURRENT 0x01500036

#line 449 "D:/SE1_GPL/Sources/EntitiesMP/Beast.es"
Return(STATE_CURRENT,EReturn  ());
#line 449 "D:/SE1_GPL/Sources/EntitiesMP/Beast.es"
return TRUE; ASSERT(FALSE); return TRUE;};BOOL CBeast::
#line 453 "D:/SE1_GPL/Sources/EntitiesMP/Beast.es"
Hit(const CEntityEvent &__eeInput) {
#undef STATE_CURRENT
#define STATE_CURRENT STATE_CBeast_Hit
  ASSERTMSG(__eeInput.ee_slEvent==EVENTCODE_EVoid, "CBeast::Hit expects 'EVoid' as input!");  const EVoid &e = (const EVoid &)__eeInput;
#line 455 "D:/SE1_GPL/Sources/EntitiesMP/Beast.es"
StartModelAnim  (BEAST_ANIM_KICK  , 0);
#line 456 "D:/SE1_GPL/Sources/EntitiesMP/Beast.es"
SetTimerAfter(0.45f);
Jump(STATE_CURRENT, 0x01500038, FALSE, EBegin());return TRUE;}BOOL CBeast::H0x01500038_Hit_01(const CEntityEvent &__eeInput) {
#undef STATE_CURRENT
#define STATE_CURRENT 0x01500038
switch(__eeInput.ee_slEvent) {case EVENTCODE_EBegin: return TRUE;case EVENTCODE_ETimer: Jump(STATE_CURRENT,0x01500039, FALSE, EInternal()); return TRUE;default: return FALSE; }}BOOL CBeast::H0x01500039_Hit_02(const CEntityEvent &__eeInput){
ASSERT(__eeInput.ee_slEvent==EVENTCODE_EInternal);
#undef STATE_CURRENT
#define STATE_CURRENT 0x01500039
;
#line 461 "D:/SE1_GPL/Sources/EntitiesMP/Beast.es"
PlaySound  (m_soSound  , SOUND_KICK  , SOF_3D );
#line 462 "D:/SE1_GPL/Sources/EntitiesMP/Beast.es"
if(CalcDist  (m_penEnemy ) < m_fCloseDistance ){
#line 463 "D:/SE1_GPL/Sources/EntitiesMP/Beast.es"
FLOAT3D vDirection  = m_penEnemy  -> GetPlacement  () . pl_PositionVector  - GetPlacement  () . pl_PositionVector ;
#line 464 "D:/SE1_GPL/Sources/EntitiesMP/Beast.es"
vDirection  . Normalize  ();
#line 465 "D:/SE1_GPL/Sources/EntitiesMP/Beast.es"
if(m_bcType  == BT_BIG ){
#line 466 "D:/SE1_GPL/Sources/EntitiesMP/Beast.es"
InflictDirectDamage  (m_penEnemy  , this  , DMT_CLOSERANGE  , 80.0f , FLOAT3D (0 , 0 , 0) , vDirection );
#line 467 "D:/SE1_GPL/Sources/EntitiesMP/Beast.es"
}else if(m_bcType  == BT_HUGE ){
#line 468 "D:/SE1_GPL/Sources/EntitiesMP/Beast.es"
InflictDirectDamage  (m_penEnemy  , this  , DMT_CLOSERANGE  , 120.0f , FLOAT3D (0 , 0 , 0) , vDirection );
#line 469 "D:/SE1_GPL/Sources/EntitiesMP/Beast.es"
}else {
#line 470 "D:/SE1_GPL/Sources/EntitiesMP/Beast.es"
InflictDirectDamage  (m_penEnemy  , this  , DMT_CLOSERANGE  , 40.0f , FLOAT3D (0 , 0 , 0) , vDirection );
#line 471 "D:/SE1_GPL/Sources/EntitiesMP/Beast.es"
}
#line 472 "D:/SE1_GPL/Sources/EntitiesMP/Beast.es"
}
#line 478 "D:/SE1_GPL/Sources/EntitiesMP/Beast.es"
SetTimerAfter(0.45f);
Jump(STATE_CURRENT, 0x0150003a, FALSE, EBegin());return TRUE;}BOOL CBeast::H0x0150003a_Hit_03(const CEntityEvent &__eeInput) {
#undef STATE_CURRENT
#define STATE_CURRENT 0x0150003a
switch(__eeInput.ee_slEvent) {case EVENTCODE_EBegin: return TRUE;case EVENTCODE_ETimer: Jump(STATE_CURRENT,0x0150003b, FALSE, EInternal()); return TRUE;default: return FALSE; }}BOOL CBeast::H0x0150003b_Hit_04(const CEntityEvent &__eeInput){
ASSERT(__eeInput.ee_slEvent==EVENTCODE_EInternal);
#undef STATE_CURRENT
#define STATE_CURRENT 0x0150003b
;
#line 479 "D:/SE1_GPL/Sources/EntitiesMP/Beast.es"
MaybeSwitchToAnotherPlayer  ();
#line 480 "D:/SE1_GPL/Sources/EntitiesMP/Beast.es"
Return(STATE_CURRENT,EReturn  ());
#line 480 "D:/SE1_GPL/Sources/EntitiesMP/Beast.es"
return TRUE; ASSERT(FALSE); return TRUE;};BOOL CBeast::
#line 486 "D:/SE1_GPL/Sources/EntitiesMP/Beast.es"
Main(const CEntityEvent &__eeInput) {
#undef STATE_CURRENT
#define STATE_CURRENT STATE_CBeast_Main
  ASSERTMSG(__eeInput.ee_slEvent==EVENTCODE_EVoid, "CBeast::Main expects 'EVoid' as input!");  const EVoid &e = (const EVoid &)__eeInput;
#line 488 "D:/SE1_GPL/Sources/EntitiesMP/Beast.es"
InitAsModel  ();
#line 489 "D:/SE1_GPL/Sources/EntitiesMP/Beast.es"
SetPhysicsFlags  (EPF_MODEL_WALKING );
#line 490 "D:/SE1_GPL/Sources/EntitiesMP/Beast.es"
SetCollisionFlags  (ECF_MODEL );
#line 491 "D:/SE1_GPL/Sources/EntitiesMP/Beast.es"
SetFlags  (GetFlags  () | ENF_ALIVE );
#line 493 "D:/SE1_GPL/Sources/EntitiesMP/Beast.es"
en_fDensity  = 1100.0f;
#line 495 "D:/SE1_GPL/Sources/EntitiesMP/Beast.es"
SetModel  (MODEL_BEAST );
#line 496 "D:/SE1_GPL/Sources/EntitiesMP/Beast.es"
StandingAnim  ();
#line 498 "D:/SE1_GPL/Sources/EntitiesMP/Beast.es"
m_fWalkSpeed  = FRnd  () * 2 + 5.0f;
#line 499 "D:/SE1_GPL/Sources/EntitiesMP/Beast.es"
m_aWalkRotateSpeed  = AngleDeg  (FRnd  () * 20.0f + 50.0f);
#line 500 "D:/SE1_GPL/Sources/EntitiesMP/Beast.es"
m_fCloseRunSpeed  = FRnd  () + 10.0f;
#line 501 "D:/SE1_GPL/Sources/EntitiesMP/Beast.es"
m_aCloseRotateSpeed  = AngleDeg  (FRnd  () * 100 + 900.0f);
#line 503 "D:/SE1_GPL/Sources/EntitiesMP/Beast.es"
m_fAttackDistance  = 500.0f;
#line 504 "D:/SE1_GPL/Sources/EntitiesMP/Beast.es"
m_fCloseDistance  = 0.0f;
#line 505 "D:/SE1_GPL/Sources/EntitiesMP/Beast.es"
m_fStopDistance  = 0.0f;
#line 506 "D:/SE1_GPL/Sources/EntitiesMP/Beast.es"
m_fCloseFireTime  = 1.0f;
#line 507 "D:/SE1_GPL/Sources/EntitiesMP/Beast.es"
m_fIgnoreRange  = 750.0f;
#line 508 "D:/SE1_GPL/Sources/EntitiesMP/Beast.es"
m_bBoss  = m_bBeBoss ;
#line 509 "D:/SE1_GPL/Sources/EntitiesMP/Beast.es"
m_fStopDistance  = 5.0f;
#line 510 "D:/SE1_GPL/Sources/EntitiesMP/Beast.es"
m_fCloseDistance  = 7.0f;
#line 511 "D:/SE1_GPL/Sources/EntitiesMP/Beast.es"
m_tmGiveUp  = Max  (m_tmGiveUp  , 10.0f);
#line 514 "D:/SE1_GPL/Sources/EntitiesMP/Beast.es"
if(m_bcType  == BT_NORMAL )
#line 515 "D:/SE1_GPL/Sources/EntitiesMP/Beast.es"
{
#line 516 "D:/SE1_GPL/Sources/EntitiesMP/Beast.es"
m_fAttackRunSpeed  = 6.0f;
#line 517 "D:/SE1_GPL/Sources/EntitiesMP/Beast.es"
m_aAttackRotateSpeed  = AngleDeg  (3600.0f);
#line 518 "D:/SE1_GPL/Sources/EntitiesMP/Beast.es"
SetHealth  (400.0f);
#line 519 "D:/SE1_GPL/Sources/EntitiesMP/Beast.es"
SetModelMainTexture  (TEXTURE_BEAST_NORMAL );
#line 520 "D:/SE1_GPL/Sources/EntitiesMP/Beast.es"
m_fBlowUpAmount  = 10000.0f;
#line 521 "D:/SE1_GPL/Sources/EntitiesMP/Beast.es"
m_fBodyParts  = 4;
#line 522 "D:/SE1_GPL/Sources/EntitiesMP/Beast.es"
m_fDamageWounded  = 250.0f;
#line 523 "D:/SE1_GPL/Sources/EntitiesMP/Beast.es"
m_iScore  = 5000;
#line 525 "D:/SE1_GPL/Sources/EntitiesMP/Beast.es"
GetModelObject  () -> StretchModel  (FLOAT3D (BEAST_STRETCH  , BEAST_STRETCH  , BEAST_STRETCH ));
#line 526 "D:/SE1_GPL/Sources/EntitiesMP/Beast.es"
ModelChangeNotify  ();
#line 527 "D:/SE1_GPL/Sources/EntitiesMP/Beast.es"
m_sptType  = SPT_SLIME ;
#line 528 "D:/SE1_GPL/Sources/EntitiesMP/Beast.es"
m_fAttackFireTime  = 3.0f;
#line 529 "D:/SE1_GPL/Sources/EntitiesMP/Beast.es"
}
#line 530 "D:/SE1_GPL/Sources/EntitiesMP/Beast.es"
else if(m_bcType  == BT_BIG )
#line 531 "D:/SE1_GPL/Sources/EntitiesMP/Beast.es"
{
#line 532 "D:/SE1_GPL/Sources/EntitiesMP/Beast.es"
m_fAttackRunSpeed  = 25.0f;
#line 533 "D:/SE1_GPL/Sources/EntitiesMP/Beast.es"
m_aAttackRotateSpeed  = AngleDeg  (600.0f);
#line 534 "D:/SE1_GPL/Sources/EntitiesMP/Beast.es"
SetHealth  (3000.0f);
#line 535 "D:/SE1_GPL/Sources/EntitiesMP/Beast.es"
SetModelMainTexture  (TEXTURE_BEAST_BIG );
#line 536 "D:/SE1_GPL/Sources/EntitiesMP/Beast.es"
m_fBlowUpAmount  = 10000.0f;
#line 537 "D:/SE1_GPL/Sources/EntitiesMP/Beast.es"
m_fBodyParts  = 6;
#line 538 "D:/SE1_GPL/Sources/EntitiesMP/Beast.es"
m_fDamageWounded  = 650.0f;
#line 539 "D:/SE1_GPL/Sources/EntitiesMP/Beast.es"
m_iScore  = 25000;
#line 540 "D:/SE1_GPL/Sources/EntitiesMP/Beast.es"
m_fStopDistance  = 15;
#line 541 "D:/SE1_GPL/Sources/EntitiesMP/Beast.es"
m_fCloseDistance  = 20;
#line 543 "D:/SE1_GPL/Sources/EntitiesMP/Beast.es"
GetModelObject  () -> StretchModel  (FLOAT3D (BIG_BEAST_STRETCH  , BIG_BEAST_STRETCH  , BIG_BEAST_STRETCH ));
#line 544 "D:/SE1_GPL/Sources/EntitiesMP/Beast.es"
ModelChangeNotify  ();
#line 545 "D:/SE1_GPL/Sources/EntitiesMP/Beast.es"
m_sptType  = SPT_BLOOD ;
#line 546 "D:/SE1_GPL/Sources/EntitiesMP/Beast.es"
m_fAttackFireTime  = 5.0f;
#line 547 "D:/SE1_GPL/Sources/EntitiesMP/Beast.es"
}
#line 548 "D:/SE1_GPL/Sources/EntitiesMP/Beast.es"
else 
#line 549 "D:/SE1_GPL/Sources/EntitiesMP/Beast.es"
{
#line 550 "D:/SE1_GPL/Sources/EntitiesMP/Beast.es"
m_fAttackRunSpeed  = 35.0f;
#line 551 "D:/SE1_GPL/Sources/EntitiesMP/Beast.es"
m_aAttackRotateSpeed  = AngleDeg  (600.0f);
#line 552 "D:/SE1_GPL/Sources/EntitiesMP/Beast.es"
SetHealth  (6000.0f);
#line 553 "D:/SE1_GPL/Sources/EntitiesMP/Beast.es"
SetModelMainTexture  (TEXTURE_BEAST_HUGE );
#line 554 "D:/SE1_GPL/Sources/EntitiesMP/Beast.es"
m_fBlowUpAmount  = 100000.0f;
#line 555 "D:/SE1_GPL/Sources/EntitiesMP/Beast.es"
m_fBodyParts  = 6;
#line 556 "D:/SE1_GPL/Sources/EntitiesMP/Beast.es"
m_fDamageWounded  = 1650.0f;
#line 557 "D:/SE1_GPL/Sources/EntitiesMP/Beast.es"
m_iScore  = 40000;
#line 558 "D:/SE1_GPL/Sources/EntitiesMP/Beast.es"
m_fStopDistance  = 75;
#line 559 "D:/SE1_GPL/Sources/EntitiesMP/Beast.es"
m_fCloseDistance  = 80;
#line 560 "D:/SE1_GPL/Sources/EntitiesMP/Beast.es"
m_fAttackDistance  = 1000.0f;
#line 561 "D:/SE1_GPL/Sources/EntitiesMP/Beast.es"
m_fIgnoreRange  = 1200.0f;
#line 563 "D:/SE1_GPL/Sources/EntitiesMP/Beast.es"
GetModelObject  () -> StretchModel  (FLOAT3D (HUGE_BEAST_STRETCH  , HUGE_BEAST_STRETCH  , HUGE_BEAST_STRETCH ));
#line 564 "D:/SE1_GPL/Sources/EntitiesMP/Beast.es"
ModelChangeNotify  ();
#line 565 "D:/SE1_GPL/Sources/EntitiesMP/Beast.es"
m_sptType  = SPT_BLOOD ;
#line 566 "D:/SE1_GPL/Sources/EntitiesMP/Beast.es"
m_fAttackFireTime  = 5.0f;
#line 567 "D:/SE1_GPL/Sources/EntitiesMP/Beast.es"
}
#line 569 "D:/SE1_GPL/Sources/EntitiesMP/Beast.es"
m_fMaxHealth  = GetHealth  ();
#line 572 "D:/SE1_GPL/Sources/EntitiesMP/Beast.es"
Jump(STATE_CURRENT, STATE_CEnemyBase_MainLoop, FALSE, EVoid());return TRUE; ASSERT(FALSE); return TRUE;};