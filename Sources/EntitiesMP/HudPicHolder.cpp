/*
 * This file is generated by Entity Class Compiler, (c) CroTeam 1997-98
 */

#line 4 "D:/SE1_GPL/Sources/EntitiesMP/HudPicHolder.es"

#include "StdH.h"
#include "EntitiesMP/WorldSettingsController.h"
#include "EntitiesMP/BackgroundViewer.h"

#include <EntitiesMP/HudPicHolder.h>
#include <EntitiesMP/HudPicHolder_tables.h>
#line 11 "D:/SE1_GPL/Sources/EntitiesMP/HudPicHolder.es"

BOOL _bDataLoaded = FALSE;
BOOL _bDataError = FALSE;
CTextureObject _toTexture;

void CHudPicHolder::SetDefaultProperties(void) {
  m_strName = "Hud pic holder";
  m_strDescription = "";
  m_fnmPicture = CTString("");
  m_tmFadeInStart = 1e6;
  m_tmFadeOutStart = 1e6;
  m_tmFadeInLen = 0.5f;
  m_tmFadeOutLen = 0.5f;
  m_tmAutoFadeOut = -1.0f;
  m_fYRatio = 0.5f;
  m_fXRatio = 0.5f;
  m_fPictureStretch = 1.0f;
  CRationalEntity::SetDefaultProperties();
}
  
#line 41 "D:/SE1_GPL/Sources/EntitiesMP/HudPicHolder.es"
const CTString & CHudPicHolder::GetDescription(void)const {
#line 42 "D:/SE1_GPL/Sources/EntitiesMP/HudPicHolder.es"
((CTString &) m_strDescription ) . PrintF  ("%s" , m_fnmPicture  . FileName  ());
#line 43 "D:/SE1_GPL/Sources/EntitiesMP/HudPicHolder.es"
return m_strDescription ;
#line 44 "D:/SE1_GPL/Sources/EntitiesMP/HudPicHolder.es"
}
  
#line 46 "D:/SE1_GPL/Sources/EntitiesMP/HudPicHolder.es"
BOOL CHudPicHolder::ReloadData(void) 
#line 47 "D:/SE1_GPL/Sources/EntitiesMP/HudPicHolder.es"
{
#line 48 "D:/SE1_GPL/Sources/EntitiesMP/HudPicHolder.es"
_bDataError  = FALSE ;
#line 49 "D:/SE1_GPL/Sources/EntitiesMP/HudPicHolder.es"
if(! Picture_On  (m_fnmPicture ))
#line 50 "D:/SE1_GPL/Sources/EntitiesMP/HudPicHolder.es"
{
#line 51 "D:/SE1_GPL/Sources/EntitiesMP/HudPicHolder.es"
Picture_Off  ();
#line 52 "D:/SE1_GPL/Sources/EntitiesMP/HudPicHolder.es"
return FALSE ;
#line 53 "D:/SE1_GPL/Sources/EntitiesMP/HudPicHolder.es"
}
#line 54 "D:/SE1_GPL/Sources/EntitiesMP/HudPicHolder.es"
return TRUE ;
#line 55 "D:/SE1_GPL/Sources/EntitiesMP/HudPicHolder.es"
}
  
#line 57 "D:/SE1_GPL/Sources/EntitiesMP/HudPicHolder.es"
BOOL CHudPicHolder::LoadOneFile(const CTFileName & fnm) 
#line 58 "D:/SE1_GPL/Sources/EntitiesMP/HudPicHolder.es"
{
#line 59 "D:/SE1_GPL/Sources/EntitiesMP/HudPicHolder.es"
if(fnm  == ""){return FALSE ;}
#line 60 "D:/SE1_GPL/Sources/EntitiesMP/HudPicHolder.es"
try 
#line 61 "D:/SE1_GPL/Sources/EntitiesMP/HudPicHolder.es"
{
#line 62 "D:/SE1_GPL/Sources/EntitiesMP/HudPicHolder.es"
_toTexture  . SetData_t  (fnm );
#line 63 "D:/SE1_GPL/Sources/EntitiesMP/HudPicHolder.es"
return TRUE ;
#line 64 "D:/SE1_GPL/Sources/EntitiesMP/HudPicHolder.es"
}
#line 65 "D:/SE1_GPL/Sources/EntitiesMP/HudPicHolder.es"
catch  (char  * strError )
#line 66 "D:/SE1_GPL/Sources/EntitiesMP/HudPicHolder.es"
{
#line 67 "D:/SE1_GPL/Sources/EntitiesMP/HudPicHolder.es"
CPrintF  ("%s\n" , strError );
#line 68 "D:/SE1_GPL/Sources/EntitiesMP/HudPicHolder.es"
return FALSE ;
#line 69 "D:/SE1_GPL/Sources/EntitiesMP/HudPicHolder.es"
}
#line 70 "D:/SE1_GPL/Sources/EntitiesMP/HudPicHolder.es"
}
  
#line 73 "D:/SE1_GPL/Sources/EntitiesMP/HudPicHolder.es"
BOOL CHudPicHolder::Picture_On(CTFileName fnPic) 
#line 74 "D:/SE1_GPL/Sources/EntitiesMP/HudPicHolder.es"
{
#line 75 "D:/SE1_GPL/Sources/EntitiesMP/HudPicHolder.es"
return LoadOneFile  (fnPic );
#line 76 "D:/SE1_GPL/Sources/EntitiesMP/HudPicHolder.es"
}
  
#line 79 "D:/SE1_GPL/Sources/EntitiesMP/HudPicHolder.es"
void CHudPicHolder::Picture_Off(void) 
#line 80 "D:/SE1_GPL/Sources/EntitiesMP/HudPicHolder.es"
{
#line 81 "D:/SE1_GPL/Sources/EntitiesMP/HudPicHolder.es"
_toTexture  . SetData  (NULL );
#line 82 "D:/SE1_GPL/Sources/EntitiesMP/HudPicHolder.es"
}
  
#line 85 "D:/SE1_GPL/Sources/EntitiesMP/HudPicHolder.es"
FLOAT CHudPicHolder::HudPic_Render(CHudPicHolder * penThis,CDrawPort * pdp) 
#line 86 "D:/SE1_GPL/Sources/EntitiesMP/HudPicHolder.es"
{
#line 87 "D:/SE1_GPL/Sources/EntitiesMP/HudPicHolder.es"
if(_bDataError ){return 0;}
#line 89 "D:/SE1_GPL/Sources/EntitiesMP/HudPicHolder.es"
if(! _bDataLoaded ){
#line 90 "D:/SE1_GPL/Sources/EntitiesMP/HudPicHolder.es"
if(! ReloadData  ()){
#line 91 "D:/SE1_GPL/Sources/EntitiesMP/HudPicHolder.es"
_bDataError  = TRUE ;
#line 92 "D:/SE1_GPL/Sources/EntitiesMP/HudPicHolder.es"
return 0;
#line 93 "D:/SE1_GPL/Sources/EntitiesMP/HudPicHolder.es"
}
#line 94 "D:/SE1_GPL/Sources/EntitiesMP/HudPicHolder.es"
_bDataLoaded  = TRUE ;
#line 95 "D:/SE1_GPL/Sources/EntitiesMP/HudPicHolder.es"
return 1;
#line 96 "D:/SE1_GPL/Sources/EntitiesMP/HudPicHolder.es"
}
#line 98 "D:/SE1_GPL/Sources/EntitiesMP/HudPicHolder.es"
FLOAT fNow  = _pTimer  -> CurrentTick  ();
#line 99 "D:/SE1_GPL/Sources/EntitiesMP/HudPicHolder.es"
if(fNow  < m_tmFadeInStart ){return 0;}
#line 100 "D:/SE1_GPL/Sources/EntitiesMP/HudPicHolder.es"
if(fNow  > m_tmFadeOutStart  + m_tmFadeOutLen ){return 0;}
#line 102 "D:/SE1_GPL/Sources/EntitiesMP/HudPicHolder.es"
CDrawPort  * pdpCurr  = pdp ;
#line 103 "D:/SE1_GPL/Sources/EntitiesMP/HudPicHolder.es"
pdp  -> Unlock  ();
#line 104 "D:/SE1_GPL/Sources/EntitiesMP/HudPicHolder.es"
pdpCurr  -> Lock  ();
#line 106 "D:/SE1_GPL/Sources/EntitiesMP/HudPicHolder.es"
FLOAT fRatio  = 1.0f;
#line 107 "D:/SE1_GPL/Sources/EntitiesMP/HudPicHolder.es"
if(fNow  > m_tmFadeOutStart )
#line 108 "D:/SE1_GPL/Sources/EntitiesMP/HudPicHolder.es"
{
#line 109 "D:/SE1_GPL/Sources/EntitiesMP/HudPicHolder.es"
fRatio  = CalculateRatio  (fNow  , m_tmFadeOutStart  , m_tmFadeOutStart  + m_tmFadeOutLen  , 0 , 1);
#line 110 "D:/SE1_GPL/Sources/EntitiesMP/HudPicHolder.es"
}
#line 111 "D:/SE1_GPL/Sources/EntitiesMP/HudPicHolder.es"
if(fNow  < m_tmFadeInStart  + m_tmFadeInLen )
#line 112 "D:/SE1_GPL/Sources/EntitiesMP/HudPicHolder.es"
{
#line 113 "D:/SE1_GPL/Sources/EntitiesMP/HudPicHolder.es"
fRatio  = CalculateRatio  (fNow  , m_tmFadeInStart  , m_tmFadeInStart  + m_tmFadeInLen  , 1 , 0);
#line 114 "D:/SE1_GPL/Sources/EntitiesMP/HudPicHolder.es"
}
#line 115 "D:/SE1_GPL/Sources/EntitiesMP/HudPicHolder.es"
UBYTE  ubA  = ClampUp  (UBYTE  (fRatio  * 255.0f) , UBYTE  (255));
#line 117 "D:/SE1_GPL/Sources/EntitiesMP/HudPicHolder.es"
CTextureData  * ptd  = (CTextureData  *) _toTexture  . GetData  ();
#line 119 "D:/SE1_GPL/Sources/EntitiesMP/HudPicHolder.es"
FLOAT fResScale  = (FLOAT) pdpCurr  -> GetHeight  () / 480.0f;
#line 120 "D:/SE1_GPL/Sources/EntitiesMP/HudPicHolder.es"
const MEX  mexTexW  = ptd  -> GetWidth  ();
#line 121 "D:/SE1_GPL/Sources/EntitiesMP/HudPicHolder.es"
const MEX  mexTexH  = ptd  -> GetHeight  ();
#line 122 "D:/SE1_GPL/Sources/EntitiesMP/HudPicHolder.es"
FLOAT fPicRatioW  , fPicRatioH ;
#line 123 "D:/SE1_GPL/Sources/EntitiesMP/HudPicHolder.es"
if(mexTexW  > mexTexH ){
#line 124 "D:/SE1_GPL/Sources/EntitiesMP/HudPicHolder.es"
fPicRatioW  = mexTexW  / mexTexH ;
#line 125 "D:/SE1_GPL/Sources/EntitiesMP/HudPicHolder.es"
fPicRatioH  = 1.0f;
#line 126 "D:/SE1_GPL/Sources/EntitiesMP/HudPicHolder.es"
}else {
#line 127 "D:/SE1_GPL/Sources/EntitiesMP/HudPicHolder.es"
fPicRatioW  = 1.0f;
#line 128 "D:/SE1_GPL/Sources/EntitiesMP/HudPicHolder.es"
fPicRatioH  = mexTexH  / mexTexW ;
#line 129 "D:/SE1_GPL/Sources/EntitiesMP/HudPicHolder.es"
}
#line 130 "D:/SE1_GPL/Sources/EntitiesMP/HudPicHolder.es"
PIX  picW  = 128 * m_fPictureStretch  * fResScale  * fPicRatioW ;
#line 131 "D:/SE1_GPL/Sources/EntitiesMP/HudPicHolder.es"
PIX  picH  = 128 * m_fPictureStretch  * fResScale  * fPicRatioH ;
#line 133 "D:/SE1_GPL/Sources/EntitiesMP/HudPicHolder.es"
FLOAT fXCenter  = m_fXRatio  * pdpCurr  -> GetWidth  ();
#line 134 "D:/SE1_GPL/Sources/EntitiesMP/HudPicHolder.es"
FLOAT fYCenter  = m_fYRatio  * pdpCurr  -> GetHeight  ();
#line 135 "D:/SE1_GPL/Sources/EntitiesMP/HudPicHolder.es"
PIXaabbox2D  boxScr  = PIXaabbox2D  (
#line 136 "D:/SE1_GPL/Sources/EntitiesMP/HudPicHolder.es"
PIX2D  (fXCenter  - picW  / 2 , fYCenter  - picH  / 2) , 
#line 137 "D:/SE1_GPL/Sources/EntitiesMP/HudPicHolder.es"
PIX2D  (fXCenter  + picW  / 2 , fYCenter  + picH  / 2));
#line 138 "D:/SE1_GPL/Sources/EntitiesMP/HudPicHolder.es"
pdpCurr  -> PutTexture  (& _toTexture  , boxScr  , C_WHITE  | ubA );
#line 140 "D:/SE1_GPL/Sources/EntitiesMP/HudPicHolder.es"
pdpCurr  -> Unlock  ();
#line 141 "D:/SE1_GPL/Sources/EntitiesMP/HudPicHolder.es"
pdp  -> Lock  ();
#line 143 "D:/SE1_GPL/Sources/EntitiesMP/HudPicHolder.es"
return 1;
#line 144 "D:/SE1_GPL/Sources/EntitiesMP/HudPicHolder.es"
}
BOOL CHudPicHolder::
#line 149 "D:/SE1_GPL/Sources/EntitiesMP/HudPicHolder.es"
WaitAndFadeOut(const CEntityEvent &__eeInput) {
#undef STATE_CURRENT
#define STATE_CURRENT STATE_CHudPicHolder_WaitAndFadeOut
  ASSERTMSG(__eeInput.ee_slEvent==EVENTCODE_EVoid, "CHudPicHolder::WaitAndFadeOut expects 'EVoid' as input!");  const EVoid &e = (const EVoid &)__eeInput;
#line 151 "D:/SE1_GPL/Sources/EntitiesMP/HudPicHolder.es"
SetTimerAfter(m_tmAutoFadeOut );
Jump(STATE_CURRENT, 0x00f10001, FALSE, EBegin());return TRUE;}BOOL CHudPicHolder::H0x00f10001_WaitAndFadeOut_01(const CEntityEvent &__eeInput) {
#undef STATE_CURRENT
#define STATE_CURRENT 0x00f10001
switch(__eeInput.ee_slEvent) {case EVENTCODE_EBegin: return TRUE;case EVENTCODE_ETimer: Jump(STATE_CURRENT,0x00f10002, FALSE, EInternal()); return TRUE;default: return FALSE; }}BOOL CHudPicHolder::H0x00f10002_WaitAndFadeOut_02(const CEntityEvent &__eeInput){
ASSERT(__eeInput.ee_slEvent==EVENTCODE_EInternal);
#undef STATE_CURRENT
#define STATE_CURRENT 0x00f10002
;
#line 152 "D:/SE1_GPL/Sources/EntitiesMP/HudPicHolder.es"
Jump(STATE_CURRENT, STATE_CHudPicHolder_ApplyFadeOut, TRUE, EVoid());return TRUE; ASSERT(FALSE); return TRUE;};BOOL CHudPicHolder::
#line 155 "D:/SE1_GPL/Sources/EntitiesMP/HudPicHolder.es"
ApplyFadeOut(const CEntityEvent &__eeInput) {
#undef STATE_CURRENT
#define STATE_CURRENT STATE_CHudPicHolder_ApplyFadeOut
  ASSERTMSG(__eeInput.ee_slEvent==EVENTCODE_EVoid, "CHudPicHolder::ApplyFadeOut expects 'EVoid' as input!");  const EVoid &e = (const EVoid &)__eeInput;
#line 157 "D:/SE1_GPL/Sources/EntitiesMP/HudPicHolder.es"
m_tmFadeOutStart  = _pTimer  -> CurrentTick  ();
#line 158 "D:/SE1_GPL/Sources/EntitiesMP/HudPicHolder.es"
CWorldSettingsController  * pwsc  = GetWSC  (this );
#line 159 "D:/SE1_GPL/Sources/EntitiesMP/HudPicHolder.es"
if(!(pwsc  != NULL )){ Jump(STATE_CURRENT,0x00f10006, FALSE, EInternal());return TRUE;}
#line 161 "D:/SE1_GPL/Sources/EntitiesMP/HudPicHolder.es"
SetTimerAfter(m_tmFadeOutLen );
Jump(STATE_CURRENT, 0x00f10004, FALSE, EBegin());return TRUE;}BOOL CHudPicHolder::H0x00f10004_ApplyFadeOut_01(const CEntityEvent &__eeInput) {
#undef STATE_CURRENT
#define STATE_CURRENT 0x00f10004
switch(__eeInput.ee_slEvent) {case EVENTCODE_EBegin: return TRUE;case EVENTCODE_ETimer: Jump(STATE_CURRENT,0x00f10005, FALSE, EInternal()); return TRUE;default: return FALSE; }}BOOL CHudPicHolder::H0x00f10005_ApplyFadeOut_02(const CEntityEvent &__eeInput){
ASSERT(__eeInput.ee_slEvent==EVENTCODE_EInternal);
#undef STATE_CURRENT
#define STATE_CURRENT 0x00f10005
;
#line 162 "D:/SE1_GPL/Sources/EntitiesMP/HudPicHolder.es"
CWorldSettingsController  * pwsc  = GetWSC  (this );
#line 163 "D:/SE1_GPL/Sources/EntitiesMP/HudPicHolder.es"
ETextFX  etfx ;
#line 164 "D:/SE1_GPL/Sources/EntitiesMP/HudPicHolder.es"
etfx  . bStart  = FALSE ;
#line 165 "D:/SE1_GPL/Sources/EntitiesMP/HudPicHolder.es"
etfx  . penSender  = this ;
#line 166 "D:/SE1_GPL/Sources/EntitiesMP/HudPicHolder.es"
pwsc  -> SendEvent  (etfx );Jump(STATE_CURRENT,0x00f10006, FALSE, EInternal());return TRUE;}BOOL CHudPicHolder::H0x00f10006_ApplyFadeOut_03(const CEntityEvent &__eeInput){
ASSERT(__eeInput.ee_slEvent==EVENTCODE_EInternal);
#undef STATE_CURRENT
#define STATE_CURRENT 0x00f10006

#line 168 "D:/SE1_GPL/Sources/EntitiesMP/HudPicHolder.es"
Return(STATE_CURRENT,EReturn  ());
#line 168 "D:/SE1_GPL/Sources/EntitiesMP/HudPicHolder.es"
return TRUE; ASSERT(FALSE); return TRUE;};BOOL CHudPicHolder::
#line 171 "D:/SE1_GPL/Sources/EntitiesMP/HudPicHolder.es"
Main(const CEntityEvent &__eeInput) {
#undef STATE_CURRENT
#define STATE_CURRENT STATE_CHudPicHolder_Main
  ASSERTMSG(__eeInput.ee_slEvent==EVENTCODE_EVoid, "CHudPicHolder::Main expects 'EVoid' as input!");  const EVoid &e = (const EVoid &)__eeInput;
#line 173 "D:/SE1_GPL/Sources/EntitiesMP/HudPicHolder.es"
InitAsEditorModel  ();
#line 174 "D:/SE1_GPL/Sources/EntitiesMP/HudPicHolder.es"
SetPhysicsFlags  (EPF_MODEL_IMMATERIAL );
#line 175 "D:/SE1_GPL/Sources/EntitiesMP/HudPicHolder.es"
SetCollisionFlags  (ECF_IMMATERIAL );
#line 178 "D:/SE1_GPL/Sources/EntitiesMP/HudPicHolder.es"
SetModel  (MODEL_MARKER );
#line 179 "D:/SE1_GPL/Sources/EntitiesMP/HudPicHolder.es"
SetModelMainTexture  (TEXTURE_MARKER );
#line 181 "D:/SE1_GPL/Sources/EntitiesMP/HudPicHolder.es"
SetTimerAfter(0.05f);
Jump(STATE_CURRENT, 0x00f10007, FALSE, EBegin());return TRUE;}BOOL CHudPicHolder::H0x00f10007_Main_01(const CEntityEvent &__eeInput) {
#undef STATE_CURRENT
#define STATE_CURRENT 0x00f10007
switch(__eeInput.ee_slEvent) {case EVENTCODE_EBegin: return TRUE;case EVENTCODE_ETimer: Jump(STATE_CURRENT,0x00f10008, FALSE, EInternal()); return TRUE;default: return FALSE; }}BOOL CHudPicHolder::H0x00f10008_Main_02(const CEntityEvent &__eeInput){
ASSERT(__eeInput.ee_slEvent==EVENTCODE_EInternal);
#undef STATE_CURRENT
#define STATE_CURRENT 0x00f10008
;
#line 183 "D:/SE1_GPL/Sources/EntitiesMP/HudPicHolder.es"
if(! Picture_On  (m_fnmPicture ))
#line 184 "D:/SE1_GPL/Sources/EntitiesMP/HudPicHolder.es"
{
#line 185 "D:/SE1_GPL/Sources/EntitiesMP/HudPicHolder.es"
Picture_Off  ();
#line 186 "D:/SE1_GPL/Sources/EntitiesMP/HudPicHolder.es"
Return(STATE_CURRENT,EVoid());
#line 186 "D:/SE1_GPL/Sources/EntitiesMP/HudPicHolder.es"
return TRUE;
#line 187 "D:/SE1_GPL/Sources/EntitiesMP/HudPicHolder.es"
}
#line 188 "D:/SE1_GPL/Sources/EntitiesMP/HudPicHolder.es"
_bDataError  = FALSE ;
#line 190 "D:/SE1_GPL/Sources/EntitiesMP/HudPicHolder.es"
SetTimerAt(THINKTIME_NEVER);
Jump(STATE_CURRENT, 0x00f10009, FALSE, EBegin());return TRUE;}BOOL CHudPicHolder::H0x00f10009_Main_03(const CEntityEvent &__eeInput) {
#undef STATE_CURRENT
#define STATE_CURRENT 0x00f10009
switch(__eeInput.ee_slEvent){case(EVENTCODE_EBegin):
#line 192 "D:/SE1_GPL/Sources/EntitiesMP/HudPicHolder.es"
{const EBegin&e= (EBegin&)__eeInput;

#line 193 "D:/SE1_GPL/Sources/EntitiesMP/HudPicHolder.es"
return TRUE;
#line 194 "D:/SE1_GPL/Sources/EntitiesMP/HudPicHolder.es"
}ASSERT(FALSE);break;case(EVENTCODE_EStart):
#line 196 "D:/SE1_GPL/Sources/EntitiesMP/HudPicHolder.es"
{const EStart&eStart= (EStart&)__eeInput;

#line 197 "D:/SE1_GPL/Sources/EntitiesMP/HudPicHolder.es"
CWorldSettingsController  * pwsc  = GetWSC  (this );
#line 198 "D:/SE1_GPL/Sources/EntitiesMP/HudPicHolder.es"
if(pwsc  != NULL )
#line 199 "D:/SE1_GPL/Sources/EntitiesMP/HudPicHolder.es"
{
#line 200 "D:/SE1_GPL/Sources/EntitiesMP/HudPicHolder.es"
m_tmFadeInStart  = _pTimer  -> CurrentTick  ();
#line 201 "D:/SE1_GPL/Sources/EntitiesMP/HudPicHolder.es"
EHudPicFX  etfx ;
#line 202 "D:/SE1_GPL/Sources/EntitiesMP/HudPicHolder.es"
etfx  . bStart  = TRUE ;
#line 203 "D:/SE1_GPL/Sources/EntitiesMP/HudPicHolder.es"
etfx  . penSender  = this ;
#line 204 "D:/SE1_GPL/Sources/EntitiesMP/HudPicHolder.es"
pwsc  -> SendEvent  (etfx );
#line 205 "D:/SE1_GPL/Sources/EntitiesMP/HudPicHolder.es"
if(m_tmAutoFadeOut  != - 1)
#line 206 "D:/SE1_GPL/Sources/EntitiesMP/HudPicHolder.es"
{
#line 207 "D:/SE1_GPL/Sources/EntitiesMP/HudPicHolder.es"
Call(STATE_CURRENT, STATE_CHudPicHolder_WaitAndFadeOut, TRUE, EVoid());return TRUE;
#line 208 "D:/SE1_GPL/Sources/EntitiesMP/HudPicHolder.es"
}
#line 209 "D:/SE1_GPL/Sources/EntitiesMP/HudPicHolder.es"
}
#line 210 "D:/SE1_GPL/Sources/EntitiesMP/HudPicHolder.es"
return TRUE;
#line 211 "D:/SE1_GPL/Sources/EntitiesMP/HudPicHolder.es"
}ASSERT(FALSE);break;case(EVENTCODE_EStop):
#line 213 "D:/SE1_GPL/Sources/EntitiesMP/HudPicHolder.es"
{const EStop&eStop= (EStop&)__eeInput;

#line 214 "D:/SE1_GPL/Sources/EntitiesMP/HudPicHolder.es"
Call(STATE_CURRENT, STATE_CHudPicHolder_ApplyFadeOut, TRUE, EVoid());return TRUE;
#line 215 "D:/SE1_GPL/Sources/EntitiesMP/HudPicHolder.es"
return TRUE;
#line 216 "D:/SE1_GPL/Sources/EntitiesMP/HudPicHolder.es"
}ASSERT(FALSE);break;case(EVENTCODE_EReturn):
#line 218 "D:/SE1_GPL/Sources/EntitiesMP/HudPicHolder.es"
{const EReturn&e= (EReturn&)__eeInput;

#line 219 "D:/SE1_GPL/Sources/EntitiesMP/HudPicHolder.es"
return TRUE;
#line 220 "D:/SE1_GPL/Sources/EntitiesMP/HudPicHolder.es"
}ASSERT(FALSE);break;default: return FALSE; break;
#line 221 "D:/SE1_GPL/Sources/EntitiesMP/HudPicHolder.es"
}return TRUE;}BOOL CHudPicHolder::H0x00f1000a_Main_04(const CEntityEvent &__eeInput){
ASSERT(__eeInput.ee_slEvent==EVENTCODE_EInternal);
#undef STATE_CURRENT
#define STATE_CURRENT 0x00f1000a

#line 222 "D:/SE1_GPL/Sources/EntitiesMP/HudPicHolder.es"
Picture_Off  ();
#line 223 "D:/SE1_GPL/Sources/EntitiesMP/HudPicHolder.es"
Return(STATE_CURRENT,EVoid());
#line 223 "D:/SE1_GPL/Sources/EntitiesMP/HudPicHolder.es"
return TRUE; ASSERT(FALSE); return TRUE;};