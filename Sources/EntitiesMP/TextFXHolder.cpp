/*
 * This file is generated by Entity Class Compiler, (c) CroTeam 1997-98
 */

#line 4 "D:/SE1_GPL/Sources/EntitiesMP/TextFXHolder.es"

#include "StdH.h"
#include "EntitiesMP/WorldSettingsController.h"
#include "EntitiesMP/BackgroundViewer.h"

#include <EntitiesMP/TextFXHolder.h>
#include <EntitiesMP/TextFXHolder_tables.h>
#line 10 "D:/SE1_GPL/Sources/EntitiesMP/TextFXHolder.es"

static CStaticStackArray<CTString> _astrLines;
static CTFileName _fnLastLoaded;

void CTextFXHolder::SetDefaultProperties(void) {
  m_strName = "Text FX holder";
  m_strDescription = "";
  m_fnmMessage = CTString("");
  m_tmFadeInStart = 1e6;
  m_tmFadeOutStart = 1e6;
  m_tmFadeInLen = 0.5f;
  m_tmFadeOutLen = 0.5f;
  m_tmAutoFadeOut = -1.0f;
  m_bDataError = FALSE ;
  CRationalEntity::SetDefaultProperties();
}
  
#line 41 "D:/SE1_GPL/Sources/EntitiesMP/TextFXHolder.es"
const CTString & CTextFXHolder::GetDescription(void)const {
#line 42 "D:/SE1_GPL/Sources/EntitiesMP/TextFXHolder.es"
((CTString &) m_strDescription ) . PrintF  ("%s" , m_fnmMessage  . FileName  ());
#line 43 "D:/SE1_GPL/Sources/EntitiesMP/TextFXHolder.es"
return m_strDescription ;
#line 44 "D:/SE1_GPL/Sources/EntitiesMP/TextFXHolder.es"
}
   CTextFXHolder::CTextFXHolder(void) 
#line 47 "D:/SE1_GPL/Sources/EntitiesMP/TextFXHolder.es"
{
#line 48 "D:/SE1_GPL/Sources/EntitiesMP/TextFXHolder.es"
bDataLoaded  = FALSE ;
#line 49 "D:/SE1_GPL/Sources/EntitiesMP/TextFXHolder.es"
}
  
#line 51 "D:/SE1_GPL/Sources/EntitiesMP/TextFXHolder.es"
BOOL CTextFXHolder::ReloadData(void) 
#line 52 "D:/SE1_GPL/Sources/EntitiesMP/TextFXHolder.es"
{
#line 53 "D:/SE1_GPL/Sources/EntitiesMP/TextFXHolder.es"
m_bDataError  = FALSE ;
#line 54 "D:/SE1_GPL/Sources/EntitiesMP/TextFXHolder.es"
if(! Text_On  (m_fnmMessage ))
#line 55 "D:/SE1_GPL/Sources/EntitiesMP/TextFXHolder.es"
{
#line 56 "D:/SE1_GPL/Sources/EntitiesMP/TextFXHolder.es"
Text_Off  ();
#line 57 "D:/SE1_GPL/Sources/EntitiesMP/TextFXHolder.es"
return FALSE ;
#line 58 "D:/SE1_GPL/Sources/EntitiesMP/TextFXHolder.es"
}
#line 59 "D:/SE1_GPL/Sources/EntitiesMP/TextFXHolder.es"
return TRUE ;
#line 60 "D:/SE1_GPL/Sources/EntitiesMP/TextFXHolder.es"
}
  
#line 62 "D:/SE1_GPL/Sources/EntitiesMP/TextFXHolder.es"
BOOL CTextFXHolder::LoadOneFile(const CTFileName & fnm) 
#line 63 "D:/SE1_GPL/Sources/EntitiesMP/TextFXHolder.es"
{
#line 64 "D:/SE1_GPL/Sources/EntitiesMP/TextFXHolder.es"
if(fnm  == ""){return FALSE ;}
#line 65 "D:/SE1_GPL/Sources/EntitiesMP/TextFXHolder.es"
try 
#line 66 "D:/SE1_GPL/Sources/EntitiesMP/TextFXHolder.es"
{
#line 68 "D:/SE1_GPL/Sources/EntitiesMP/TextFXHolder.es"
CTFileStream  strm ;
#line 69 "D:/SE1_GPL/Sources/EntitiesMP/TextFXHolder.es"
strm  . Open_t  (fnm );
#line 72 "D:/SE1_GPL/Sources/EntitiesMP/TextFXHolder.es"
INDEX ctLines  = 0;
#line 73 "D:/SE1_GPL/Sources/EntitiesMP/TextFXHolder.es"
while(! strm  . AtEOF  ())
#line 74 "D:/SE1_GPL/Sources/EntitiesMP/TextFXHolder.es"
{
#line 75 "D:/SE1_GPL/Sources/EntitiesMP/TextFXHolder.es"
CTString strLine ;
#line 76 "D:/SE1_GPL/Sources/EntitiesMP/TextFXHolder.es"
strm  . GetLine_t  (strLine );
#line 77 "D:/SE1_GPL/Sources/EntitiesMP/TextFXHolder.es"
ctLines  ++;
#line 78 "D:/SE1_GPL/Sources/EntitiesMP/TextFXHolder.es"
}
#line 79 "D:/SE1_GPL/Sources/EntitiesMP/TextFXHolder.es"
strm  . SetPos_t  (0);
#line 82 "D:/SE1_GPL/Sources/EntitiesMP/TextFXHolder.es"
CTString * astr  = _astrLines  . Push  (ctLines );
#line 84 "D:/SE1_GPL/Sources/EntitiesMP/TextFXHolder.es"
for(INDEX iLine  = 0;iLine  < ctLines  && ! strm  . AtEOF  ();iLine  ++)
#line 85 "D:/SE1_GPL/Sources/EntitiesMP/TextFXHolder.es"
{
#line 86 "D:/SE1_GPL/Sources/EntitiesMP/TextFXHolder.es"
strm  . GetLine_t  (astr  [ iLine  ]);
#line 87 "D:/SE1_GPL/Sources/EntitiesMP/TextFXHolder.es"
}
#line 88 "D:/SE1_GPL/Sources/EntitiesMP/TextFXHolder.es"
strm  . Close  ();
#line 89 "D:/SE1_GPL/Sources/EntitiesMP/TextFXHolder.es"
return TRUE ;
#line 90 "D:/SE1_GPL/Sources/EntitiesMP/TextFXHolder.es"
}
#line 91 "D:/SE1_GPL/Sources/EntitiesMP/TextFXHolder.es"
catch  (char  * strError )
#line 92 "D:/SE1_GPL/Sources/EntitiesMP/TextFXHolder.es"
{
#line 93 "D:/SE1_GPL/Sources/EntitiesMP/TextFXHolder.es"
CPrintF  ("%s\n" , strError );
#line 94 "D:/SE1_GPL/Sources/EntitiesMP/TextFXHolder.es"
return FALSE ;
#line 95 "D:/SE1_GPL/Sources/EntitiesMP/TextFXHolder.es"
}
#line 96 "D:/SE1_GPL/Sources/EntitiesMP/TextFXHolder.es"
_fnLastLoaded  = fnm ;
#line 97 "D:/SE1_GPL/Sources/EntitiesMP/TextFXHolder.es"
}
  
#line 100 "D:/SE1_GPL/Sources/EntitiesMP/TextFXHolder.es"
BOOL CTextFXHolder::Text_On(CTFileName fnText) 
#line 101 "D:/SE1_GPL/Sources/EntitiesMP/TextFXHolder.es"
{
#line 102 "D:/SE1_GPL/Sources/EntitiesMP/TextFXHolder.es"
_astrLines  . PopAll  ();
#line 103 "D:/SE1_GPL/Sources/EntitiesMP/TextFXHolder.es"
return LoadOneFile  (fnText );
#line 104 "D:/SE1_GPL/Sources/EntitiesMP/TextFXHolder.es"
}
  
#line 107 "D:/SE1_GPL/Sources/EntitiesMP/TextFXHolder.es"
void CTextFXHolder::Text_Off(void) 
#line 108 "D:/SE1_GPL/Sources/EntitiesMP/TextFXHolder.es"
{
#line 109 "D:/SE1_GPL/Sources/EntitiesMP/TextFXHolder.es"
_astrLines  . Clear  ();
#line 110 "D:/SE1_GPL/Sources/EntitiesMP/TextFXHolder.es"
}
  
#line 113 "D:/SE1_GPL/Sources/EntitiesMP/TextFXHolder.es"
FLOAT CTextFXHolder::TextFX_Render(CTextFXHolder * penThis,CDrawPort * pdp) 
#line 114 "D:/SE1_GPL/Sources/EntitiesMP/TextFXHolder.es"
{
#line 115 "D:/SE1_GPL/Sources/EntitiesMP/TextFXHolder.es"
if(m_bDataError ){return 0;}
#line 117 "D:/SE1_GPL/Sources/EntitiesMP/TextFXHolder.es"
if(! bDataLoaded ){
#line 118 "D:/SE1_GPL/Sources/EntitiesMP/TextFXHolder.es"
if(! ReloadData  ()){
#line 119 "D:/SE1_GPL/Sources/EntitiesMP/TextFXHolder.es"
m_bDataError  = TRUE ;
#line 120 "D:/SE1_GPL/Sources/EntitiesMP/TextFXHolder.es"
return 0;
#line 121 "D:/SE1_GPL/Sources/EntitiesMP/TextFXHolder.es"
}
#line 122 "D:/SE1_GPL/Sources/EntitiesMP/TextFXHolder.es"
bDataLoaded  = TRUE ;
#line 123 "D:/SE1_GPL/Sources/EntitiesMP/TextFXHolder.es"
return 1;
#line 124 "D:/SE1_GPL/Sources/EntitiesMP/TextFXHolder.es"
}
#line 126 "D:/SE1_GPL/Sources/EntitiesMP/TextFXHolder.es"
FLOAT fNow  = _pTimer  -> CurrentTick  ();
#line 127 "D:/SE1_GPL/Sources/EntitiesMP/TextFXHolder.es"
if(fNow  < m_tmFadeInStart ){return 0;}
#line 128 "D:/SE1_GPL/Sources/EntitiesMP/TextFXHolder.es"
if(fNow  > m_tmFadeOutStart  + m_tmFadeOutLen ){return 0;}
#line 130 "D:/SE1_GPL/Sources/EntitiesMP/TextFXHolder.es"
PIX  pixW  = 0;
#line 131 "D:/SE1_GPL/Sources/EntitiesMP/TextFXHolder.es"
PIX  pixH  = 0;
#line 132 "D:/SE1_GPL/Sources/EntitiesMP/TextFXHolder.es"
PIX  pixJ  = 0;
#line 133 "D:/SE1_GPL/Sources/EntitiesMP/TextFXHolder.es"
FLOAT fResolutionScaling ;
#line 134 "D:/SE1_GPL/Sources/EntitiesMP/TextFXHolder.es"
PIX  pixLineHeight ;
#line 135 "D:/SE1_GPL/Sources/EntitiesMP/TextFXHolder.es"
CTString strEmpty ;
#line 137 "D:/SE1_GPL/Sources/EntitiesMP/TextFXHolder.es"
CDrawPort  * pdpCurr  = pdp ;
#line 138 "D:/SE1_GPL/Sources/EntitiesMP/TextFXHolder.es"
pdp  -> Unlock  ();
#line 139 "D:/SE1_GPL/Sources/EntitiesMP/TextFXHolder.es"
pdpCurr  -> Lock  ();
#line 141 "D:/SE1_GPL/Sources/EntitiesMP/TextFXHolder.es"
pixW  = pdpCurr  -> GetWidth  ();
#line 142 "D:/SE1_GPL/Sources/EntitiesMP/TextFXHolder.es"
pixH  = pdpCurr  -> GetHeight  ();
#line 143 "D:/SE1_GPL/Sources/EntitiesMP/TextFXHolder.es"
fResolutionScaling  = (FLOAT) pixH  / 360.0f;
#line 144 "D:/SE1_GPL/Sources/EntitiesMP/TextFXHolder.es"
pdpCurr  -> SetFont  (_pfdDisplayFont );
#line 145 "D:/SE1_GPL/Sources/EntitiesMP/TextFXHolder.es"
pixLineHeight  = floor  (20 * fResolutionScaling );
#line 147 "D:/SE1_GPL/Sources/EntitiesMP/TextFXHolder.es"
INDEX ctMaxLinesOnScreen  = pixH  / pixLineHeight ;
#line 148 "D:/SE1_GPL/Sources/EntitiesMP/TextFXHolder.es"
INDEX ctLines  = ClampUp  (_astrLines  . Count  () , ctMaxLinesOnScreen );
#line 150 "D:/SE1_GPL/Sources/EntitiesMP/TextFXHolder.es"
pixJ  = PIX  (pixH  / 2 - ctLines  / 2.0f * pixLineHeight );
#line 151 "D:/SE1_GPL/Sources/EntitiesMP/TextFXHolder.es"
for(INDEX iLine  = 0;iLine  < ctLines ;iLine  ++)
#line 152 "D:/SE1_GPL/Sources/EntitiesMP/TextFXHolder.es"
{
#line 153 "D:/SE1_GPL/Sources/EntitiesMP/TextFXHolder.es"
CTString * pstr  = & _astrLines  [ iLine  ];
#line 154 "D:/SE1_GPL/Sources/EntitiesMP/TextFXHolder.es"
pdp  -> SetFont  (_pfdDisplayFont );
#line 155 "D:/SE1_GPL/Sources/EntitiesMP/TextFXHolder.es"
pdp  -> SetTextScaling  (fResolutionScaling );
#line 156 "D:/SE1_GPL/Sources/EntitiesMP/TextFXHolder.es"
pdp  -> SetTextAspect  (1.0f);
#line 157 "D:/SE1_GPL/Sources/EntitiesMP/TextFXHolder.es"
FLOAT fRatio  = 1.0f;
#line 158 "D:/SE1_GPL/Sources/EntitiesMP/TextFXHolder.es"
if(fNow  > m_tmFadeOutStart )
#line 159 "D:/SE1_GPL/Sources/EntitiesMP/TextFXHolder.es"
{
#line 160 "D:/SE1_GPL/Sources/EntitiesMP/TextFXHolder.es"
fRatio  = CalculateRatio  (fNow  , m_tmFadeOutStart  , m_tmFadeOutStart  + m_tmFadeOutLen  , 0 , 1);
#line 161 "D:/SE1_GPL/Sources/EntitiesMP/TextFXHolder.es"
}
#line 162 "D:/SE1_GPL/Sources/EntitiesMP/TextFXHolder.es"
if(fNow  < m_tmFadeInStart  + m_tmFadeInLen )
#line 163 "D:/SE1_GPL/Sources/EntitiesMP/TextFXHolder.es"
{
#line 164 "D:/SE1_GPL/Sources/EntitiesMP/TextFXHolder.es"
fRatio  = CalculateRatio  (fNow  , m_tmFadeInStart  , m_tmFadeInStart  + m_tmFadeInLen  , 1 , 0);
#line 165 "D:/SE1_GPL/Sources/EntitiesMP/TextFXHolder.es"
}
#line 166 "D:/SE1_GPL/Sources/EntitiesMP/TextFXHolder.es"
UBYTE  ubA  = ClampUp  (UBYTE  (fRatio  * 255.0f) , UBYTE  (255));
#line 167 "D:/SE1_GPL/Sources/EntitiesMP/TextFXHolder.es"
pdp  -> PutTextC  (* pstr  , pixW  / 2 , pixJ  , C_WHITE  | ubA );
#line 168 "D:/SE1_GPL/Sources/EntitiesMP/TextFXHolder.es"
pixJ  += pixLineHeight ;
#line 169 "D:/SE1_GPL/Sources/EntitiesMP/TextFXHolder.es"
}
#line 171 "D:/SE1_GPL/Sources/EntitiesMP/TextFXHolder.es"
pdpCurr  -> Unlock  ();
#line 172 "D:/SE1_GPL/Sources/EntitiesMP/TextFXHolder.es"
pdp  -> Lock  ();
#line 174 "D:/SE1_GPL/Sources/EntitiesMP/TextFXHolder.es"
return 1;
#line 175 "D:/SE1_GPL/Sources/EntitiesMP/TextFXHolder.es"
}
BOOL CTextFXHolder::
#line 180 "D:/SE1_GPL/Sources/EntitiesMP/TextFXHolder.es"
WaitAndFadeOut(const CEntityEvent &__eeInput) {
#undef STATE_CURRENT
#define STATE_CURRENT STATE_CTextFXHolder_WaitAndFadeOut
  ASSERTMSG(__eeInput.ee_slEvent==EVENTCODE_EVoid, "CTextFXHolder::WaitAndFadeOut expects 'EVoid' as input!");  const EVoid &e = (const EVoid &)__eeInput;
#line 182 "D:/SE1_GPL/Sources/EntitiesMP/TextFXHolder.es"
SetTimerAfter(m_tmAutoFadeOut );
Jump(STATE_CURRENT, 0x00ef0001, FALSE, EBegin());return TRUE;}BOOL CTextFXHolder::H0x00ef0001_WaitAndFadeOut_01(const CEntityEvent &__eeInput) {
#undef STATE_CURRENT
#define STATE_CURRENT 0x00ef0001
switch(__eeInput.ee_slEvent) {case EVENTCODE_EBegin: return TRUE;case EVENTCODE_ETimer: Jump(STATE_CURRENT,0x00ef0002, FALSE, EInternal()); return TRUE;default: return FALSE; }}BOOL CTextFXHolder::H0x00ef0002_WaitAndFadeOut_02(const CEntityEvent &__eeInput){
ASSERT(__eeInput.ee_slEvent==EVENTCODE_EInternal);
#undef STATE_CURRENT
#define STATE_CURRENT 0x00ef0002
;
#line 183 "D:/SE1_GPL/Sources/EntitiesMP/TextFXHolder.es"
Jump(STATE_CURRENT, STATE_CTextFXHolder_ApplyFadeOut, TRUE, EVoid());return TRUE; ASSERT(FALSE); return TRUE;};BOOL CTextFXHolder::
#line 186 "D:/SE1_GPL/Sources/EntitiesMP/TextFXHolder.es"
ApplyFadeOut(const CEntityEvent &__eeInput) {
#undef STATE_CURRENT
#define STATE_CURRENT STATE_CTextFXHolder_ApplyFadeOut
  ASSERTMSG(__eeInput.ee_slEvent==EVENTCODE_EVoid, "CTextFXHolder::ApplyFadeOut expects 'EVoid' as input!");  const EVoid &e = (const EVoid &)__eeInput;
#line 188 "D:/SE1_GPL/Sources/EntitiesMP/TextFXHolder.es"
m_tmFadeOutStart  = _pTimer  -> CurrentTick  ();
#line 189 "D:/SE1_GPL/Sources/EntitiesMP/TextFXHolder.es"
CWorldSettingsController  * pwsc  = GetWSC  (this );
#line 190 "D:/SE1_GPL/Sources/EntitiesMP/TextFXHolder.es"
if(!(pwsc  != NULL )){ Jump(STATE_CURRENT,0x00ef0006, FALSE, EInternal());return TRUE;}
#line 192 "D:/SE1_GPL/Sources/EntitiesMP/TextFXHolder.es"
SetTimerAfter(m_tmFadeOutLen );
Jump(STATE_CURRENT, 0x00ef0004, FALSE, EBegin());return TRUE;}BOOL CTextFXHolder::H0x00ef0004_ApplyFadeOut_01(const CEntityEvent &__eeInput) {
#undef STATE_CURRENT
#define STATE_CURRENT 0x00ef0004
switch(__eeInput.ee_slEvent) {case EVENTCODE_EBegin: return TRUE;case EVENTCODE_ETimer: Jump(STATE_CURRENT,0x00ef0005, FALSE, EInternal()); return TRUE;default: return FALSE; }}BOOL CTextFXHolder::H0x00ef0005_ApplyFadeOut_02(const CEntityEvent &__eeInput){
ASSERT(__eeInput.ee_slEvent==EVENTCODE_EInternal);
#undef STATE_CURRENT
#define STATE_CURRENT 0x00ef0005
;
#line 193 "D:/SE1_GPL/Sources/EntitiesMP/TextFXHolder.es"
CWorldSettingsController  * pwsc  = GetWSC  (this );
#line 194 "D:/SE1_GPL/Sources/EntitiesMP/TextFXHolder.es"
ETextFX  etfx ;
#line 195 "D:/SE1_GPL/Sources/EntitiesMP/TextFXHolder.es"
etfx  . bStart  = FALSE ;
#line 196 "D:/SE1_GPL/Sources/EntitiesMP/TextFXHolder.es"
etfx  . penSender  = this ;
#line 197 "D:/SE1_GPL/Sources/EntitiesMP/TextFXHolder.es"
pwsc  -> SendEvent  (etfx );Jump(STATE_CURRENT,0x00ef0006, FALSE, EInternal());return TRUE;}BOOL CTextFXHolder::H0x00ef0006_ApplyFadeOut_03(const CEntityEvent &__eeInput){
ASSERT(__eeInput.ee_slEvent==EVENTCODE_EInternal);
#undef STATE_CURRENT
#define STATE_CURRENT 0x00ef0006

#line 199 "D:/SE1_GPL/Sources/EntitiesMP/TextFXHolder.es"
Return(STATE_CURRENT,EReturn  ());
#line 199 "D:/SE1_GPL/Sources/EntitiesMP/TextFXHolder.es"
return TRUE; ASSERT(FALSE); return TRUE;};BOOL CTextFXHolder::
#line 202 "D:/SE1_GPL/Sources/EntitiesMP/TextFXHolder.es"
Main(const CEntityEvent &__eeInput) {
#undef STATE_CURRENT
#define STATE_CURRENT STATE_CTextFXHolder_Main
  ASSERTMSG(__eeInput.ee_slEvent==EVENTCODE_EVoid, "CTextFXHolder::Main expects 'EVoid' as input!");  const EVoid &e = (const EVoid &)__eeInput;
#line 204 "D:/SE1_GPL/Sources/EntitiesMP/TextFXHolder.es"
InitAsEditorModel  ();
#line 205 "D:/SE1_GPL/Sources/EntitiesMP/TextFXHolder.es"
SetPhysicsFlags  (EPF_MODEL_IMMATERIAL );
#line 206 "D:/SE1_GPL/Sources/EntitiesMP/TextFXHolder.es"
SetCollisionFlags  (ECF_IMMATERIAL );
#line 209 "D:/SE1_GPL/Sources/EntitiesMP/TextFXHolder.es"
SetModel  (MODEL_MARKER );
#line 210 "D:/SE1_GPL/Sources/EntitiesMP/TextFXHolder.es"
SetModelMainTexture  (TEXTURE_MARKER );
#line 212 "D:/SE1_GPL/Sources/EntitiesMP/TextFXHolder.es"
SetTimerAfter(0.05f);
Jump(STATE_CURRENT, 0x00ef0007, FALSE, EBegin());return TRUE;}BOOL CTextFXHolder::H0x00ef0007_Main_01(const CEntityEvent &__eeInput) {
#undef STATE_CURRENT
#define STATE_CURRENT 0x00ef0007
switch(__eeInput.ee_slEvent) {case EVENTCODE_EBegin: return TRUE;case EVENTCODE_ETimer: Jump(STATE_CURRENT,0x00ef0008, FALSE, EInternal()); return TRUE;default: return FALSE; }}BOOL CTextFXHolder::H0x00ef0008_Main_02(const CEntityEvent &__eeInput){
ASSERT(__eeInput.ee_slEvent==EVENTCODE_EInternal);
#undef STATE_CURRENT
#define STATE_CURRENT 0x00ef0008
;
#line 214 "D:/SE1_GPL/Sources/EntitiesMP/TextFXHolder.es"
if(! Text_On  (m_fnmMessage ))
#line 215 "D:/SE1_GPL/Sources/EntitiesMP/TextFXHolder.es"
{
#line 216 "D:/SE1_GPL/Sources/EntitiesMP/TextFXHolder.es"
Text_Off  ();
#line 217 "D:/SE1_GPL/Sources/EntitiesMP/TextFXHolder.es"
Return(STATE_CURRENT,EVoid());
#line 217 "D:/SE1_GPL/Sources/EntitiesMP/TextFXHolder.es"
return TRUE;
#line 218 "D:/SE1_GPL/Sources/EntitiesMP/TextFXHolder.es"
}
#line 219 "D:/SE1_GPL/Sources/EntitiesMP/TextFXHolder.es"
m_bDataError  = FALSE ;
#line 221 "D:/SE1_GPL/Sources/EntitiesMP/TextFXHolder.es"
SetTimerAt(THINKTIME_NEVER);
Jump(STATE_CURRENT, 0x00ef0009, FALSE, EBegin());return TRUE;}BOOL CTextFXHolder::H0x00ef0009_Main_03(const CEntityEvent &__eeInput) {
#undef STATE_CURRENT
#define STATE_CURRENT 0x00ef0009
switch(__eeInput.ee_slEvent){case(EVENTCODE_EBegin):
#line 223 "D:/SE1_GPL/Sources/EntitiesMP/TextFXHolder.es"
{const EBegin&e= (EBegin&)__eeInput;

#line 224 "D:/SE1_GPL/Sources/EntitiesMP/TextFXHolder.es"
return TRUE;
#line 225 "D:/SE1_GPL/Sources/EntitiesMP/TextFXHolder.es"
}ASSERT(FALSE);break;case(EVENTCODE_EStart):
#line 227 "D:/SE1_GPL/Sources/EntitiesMP/TextFXHolder.es"
{const EStart&eStart= (EStart&)__eeInput;

#line 228 "D:/SE1_GPL/Sources/EntitiesMP/TextFXHolder.es"
CWorldSettingsController  * pwsc  = GetWSC  (this );
#line 229 "D:/SE1_GPL/Sources/EntitiesMP/TextFXHolder.es"
if(pwsc  != NULL )
#line 230 "D:/SE1_GPL/Sources/EntitiesMP/TextFXHolder.es"
{
#line 231 "D:/SE1_GPL/Sources/EntitiesMP/TextFXHolder.es"
m_tmFadeInStart  = _pTimer  -> CurrentTick  ();
#line 232 "D:/SE1_GPL/Sources/EntitiesMP/TextFXHolder.es"
ETextFX  etfx ;
#line 233 "D:/SE1_GPL/Sources/EntitiesMP/TextFXHolder.es"
etfx  . bStart  = TRUE ;
#line 234 "D:/SE1_GPL/Sources/EntitiesMP/TextFXHolder.es"
etfx  . penSender  = this ;
#line 235 "D:/SE1_GPL/Sources/EntitiesMP/TextFXHolder.es"
pwsc  -> SendEvent  (etfx );
#line 236 "D:/SE1_GPL/Sources/EntitiesMP/TextFXHolder.es"
if(m_tmAutoFadeOut  != - 1)
#line 237 "D:/SE1_GPL/Sources/EntitiesMP/TextFXHolder.es"
{
#line 238 "D:/SE1_GPL/Sources/EntitiesMP/TextFXHolder.es"
Call(STATE_CURRENT, STATE_CTextFXHolder_WaitAndFadeOut, TRUE, EVoid());return TRUE;
#line 239 "D:/SE1_GPL/Sources/EntitiesMP/TextFXHolder.es"
}
#line 240 "D:/SE1_GPL/Sources/EntitiesMP/TextFXHolder.es"
}
#line 241 "D:/SE1_GPL/Sources/EntitiesMP/TextFXHolder.es"
return TRUE;
#line 242 "D:/SE1_GPL/Sources/EntitiesMP/TextFXHolder.es"
}ASSERT(FALSE);break;case(EVENTCODE_EStop):
#line 244 "D:/SE1_GPL/Sources/EntitiesMP/TextFXHolder.es"
{const EStop&eStop= (EStop&)__eeInput;

#line 245 "D:/SE1_GPL/Sources/EntitiesMP/TextFXHolder.es"
Call(STATE_CURRENT, STATE_CTextFXHolder_ApplyFadeOut, TRUE, EVoid());return TRUE;
#line 246 "D:/SE1_GPL/Sources/EntitiesMP/TextFXHolder.es"
return TRUE;
#line 247 "D:/SE1_GPL/Sources/EntitiesMP/TextFXHolder.es"
}ASSERT(FALSE);break;case(EVENTCODE_EReturn):
#line 249 "D:/SE1_GPL/Sources/EntitiesMP/TextFXHolder.es"
{const EReturn&e= (EReturn&)__eeInput;

#line 250 "D:/SE1_GPL/Sources/EntitiesMP/TextFXHolder.es"
return TRUE;
#line 251 "D:/SE1_GPL/Sources/EntitiesMP/TextFXHolder.es"
}ASSERT(FALSE);break;default: return FALSE; break;
#line 252 "D:/SE1_GPL/Sources/EntitiesMP/TextFXHolder.es"
}return TRUE;}BOOL CTextFXHolder::H0x00ef000a_Main_04(const CEntityEvent &__eeInput){
ASSERT(__eeInput.ee_slEvent==EVENTCODE_EInternal);
#undef STATE_CURRENT
#define STATE_CURRENT 0x00ef000a

#line 253 "D:/SE1_GPL/Sources/EntitiesMP/TextFXHolder.es"
Text_Off  ();
#line 254 "D:/SE1_GPL/Sources/EntitiesMP/TextFXHolder.es"
Return(STATE_CURRENT,EVoid());
#line 254 "D:/SE1_GPL/Sources/EntitiesMP/TextFXHolder.es"
return TRUE; ASSERT(FALSE); return TRUE;};