/*
 * This file is generated by Entity Class Compiler, (c) CroTeam 1997-98
 */

#line 4 "D:/SE1_GPL/Sources/EntitiesMP/Headman.es"

#include "StdH.h"
#include "Models/Enemies/Headman/Headman.h"

#include <EntitiesMP/Headman.h>
#include <EntitiesMP/Headman_tables.h>
#line 20 "D:/SE1_GPL/Sources/EntitiesMP/Headman.es"

// info structure
static EntityInfo eiHeadman = {
  EIBT_FLESH, 100.0f,
  0.0f, 1.9f, 0.0f,     // source (eyes)
  0.0f, 1.0f, 0.0f,     // target (body)
};

#define EXPLODE_KAMIKAZE   2.5f
#define BOMBERMAN_ANGLE (45.0f)
#define BOMBERMAN_LAUNCH (FLOAT3D(0.0f, 1.5f, 0.0f))

void CHeadman::SetDefaultProperties(void) {
  m_hdtType = HDT_FIRECRACKER ;
  m_bExploded = FALSE ;
  m_bAttackSound = FALSE ;
  CEnemyBase::SetDefaultProperties();
}
  CTString CHeadman::GetPlayerKillDescription(const CTString & strPlayerName,const EDeath & eDeath) 
#line 87 "D:/SE1_GPL/Sources/EntitiesMP/Headman.es"
{
#line 88 "D:/SE1_GPL/Sources/EntitiesMP/Headman.es"
CTString str ;
#line 89 "D:/SE1_GPL/Sources/EntitiesMP/Headman.es"
if(eDeath  . eLastDamage  . dmtType  == DMT_EXPLOSION ){
#line 90 "D:/SE1_GPL/Sources/EntitiesMP/Headman.es"
if(m_hdtType  == HDT_BOMBERMAN ){
#line 91 "D:/SE1_GPL/Sources/EntitiesMP/Headman.es"
str  . PrintF  (TRANS  ("%s was bombed by a Bomberman") , strPlayerName );
#line 92 "D:/SE1_GPL/Sources/EntitiesMP/Headman.es"
}else {
#line 93 "D:/SE1_GPL/Sources/EntitiesMP/Headman.es"
str  . PrintF  (TRANS  ("%s fell victim of a Kamikaze") , strPlayerName );
#line 94 "D:/SE1_GPL/Sources/EntitiesMP/Headman.es"
}
#line 95 "D:/SE1_GPL/Sources/EntitiesMP/Headman.es"
}else if(m_hdtType  == HDT_ROCKETMAN ){
#line 96 "D:/SE1_GPL/Sources/EntitiesMP/Headman.es"
str  . PrintF  (TRANS  ("A Rocketeer tickled %s to death") , strPlayerName );
#line 97 "D:/SE1_GPL/Sources/EntitiesMP/Headman.es"
}else if(m_hdtType  == HDT_FIRECRACKER ){
#line 98 "D:/SE1_GPL/Sources/EntitiesMP/Headman.es"
str  . PrintF  (TRANS  ("A Firecracker tickled %s to death") , strPlayerName );
#line 99 "D:/SE1_GPL/Sources/EntitiesMP/Headman.es"
}
#line 100 "D:/SE1_GPL/Sources/EntitiesMP/Headman.es"
return str ;
#line 101 "D:/SE1_GPL/Sources/EntitiesMP/Headman.es"
}
  
#line 104 "D:/SE1_GPL/Sources/EntitiesMP/Headman.es"
void * CHeadman::GetEntityInfo(void) {
#line 105 "D:/SE1_GPL/Sources/EntitiesMP/Headman.es"
return & eiHeadman ;
#line 106 "D:/SE1_GPL/Sources/EntitiesMP/Headman.es"
}
  const CTFileName & CHeadman::GetComputerMessageName(void)const {
#line 109 "D:/SE1_GPL/Sources/EntitiesMP/Headman.es"
static DECLARE_CTFILENAME  (fnmRocketman  , "Data\\Messages\\Enemies\\Rocketman.txt");
#line 110 "D:/SE1_GPL/Sources/EntitiesMP/Headman.es"
static DECLARE_CTFILENAME  (fnmFirecracker  , "Data\\Messages\\Enemies\\Firecracker.txt");
#line 111 "D:/SE1_GPL/Sources/EntitiesMP/Headman.es"
static DECLARE_CTFILENAME  (fnmBomberman  , "Data\\Messages\\Enemies\\Bomberman.txt");
#line 112 "D:/SE1_GPL/Sources/EntitiesMP/Headman.es"
static DECLARE_CTFILENAME  (fnmKamikaze  , "Data\\Messages\\Enemies\\Kamikaze.txt");
#line 113 "D:/SE1_GPL/Sources/EntitiesMP/Headman.es"
switch(m_hdtType ){
#line 114 "D:/SE1_GPL/Sources/EntitiesMP/Headman.es"
default  : ASSERT  (FALSE );
#line 115 "D:/SE1_GPL/Sources/EntitiesMP/Headman.es"
case HDT_ROCKETMAN : return fnmRocketman ;
#line 116 "D:/SE1_GPL/Sources/EntitiesMP/Headman.es"
case HDT_FIRECRACKER : return fnmFirecracker ;
#line 117 "D:/SE1_GPL/Sources/EntitiesMP/Headman.es"
case HDT_BOMBERMAN : return fnmBomberman ;
#line 118 "D:/SE1_GPL/Sources/EntitiesMP/Headman.es"
case HDT_KAMIKAZE : return fnmKamikaze ;
#line 119 "D:/SE1_GPL/Sources/EntitiesMP/Headman.es"
}
#line 120 "D:/SE1_GPL/Sources/EntitiesMP/Headman.es"
}
  
#line 122 "D:/SE1_GPL/Sources/EntitiesMP/Headman.es"
void CHeadman::Precache(void) {
#line 123 "D:/SE1_GPL/Sources/EntitiesMP/Headman.es"
CEnemyBase  :: Precache  ();
#line 124 "D:/SE1_GPL/Sources/EntitiesMP/Headman.es"
PrecacheSound  (SOUND_IDLE );
#line 125 "D:/SE1_GPL/Sources/EntitiesMP/Headman.es"
PrecacheSound  (SOUND_SIGHT );
#line 126 "D:/SE1_GPL/Sources/EntitiesMP/Headman.es"
PrecacheSound  (SOUND_WOUND );
#line 127 "D:/SE1_GPL/Sources/EntitiesMP/Headman.es"
PrecacheSound  (SOUND_DEATH );
#line 129 "D:/SE1_GPL/Sources/EntitiesMP/Headman.es"
switch(m_hdtType ){
#line 130 "D:/SE1_GPL/Sources/EntitiesMP/Headman.es"
case HDT_FIRECRACKER : {
#line 131 "D:/SE1_GPL/Sources/EntitiesMP/Headman.es"
PrecacheSound  (SOUND_FIREFIRECRACKER );
#line 132 "D:/SE1_GPL/Sources/EntitiesMP/Headman.es"
PrecacheClass  (CLASS_PROJECTILE  , PRT_HEADMAN_FIRECRACKER );
#line 133 "D:/SE1_GPL/Sources/EntitiesMP/Headman.es"
}break ;
#line 134 "D:/SE1_GPL/Sources/EntitiesMP/Headman.es"
case HDT_ROCKETMAN : {
#line 135 "D:/SE1_GPL/Sources/EntitiesMP/Headman.es"
PrecacheSound  (SOUND_FIREROCKETMAN );
#line 136 "D:/SE1_GPL/Sources/EntitiesMP/Headman.es"
PrecacheClass  (CLASS_PROJECTILE  , PRT_HEADMAN_ROCKETMAN );
#line 137 "D:/SE1_GPL/Sources/EntitiesMP/Headman.es"
}break ;
#line 138 "D:/SE1_GPL/Sources/EntitiesMP/Headman.es"
case HDT_BOMBERMAN : {
#line 139 "D:/SE1_GPL/Sources/EntitiesMP/Headman.es"
PrecacheSound  (SOUND_FIREBOMBERMAN );
#line 140 "D:/SE1_GPL/Sources/EntitiesMP/Headman.es"
PrecacheClass  (CLASS_PROJECTILE  , PRT_HEADMAN_BOMBERMAN );
#line 141 "D:/SE1_GPL/Sources/EntitiesMP/Headman.es"
PrecacheModel  (MODEL_BOMB );
#line 142 "D:/SE1_GPL/Sources/EntitiesMP/Headman.es"
PrecacheTexture  (TEXTURE_BOMB );
#line 143 "D:/SE1_GPL/Sources/EntitiesMP/Headman.es"
}break ;
#line 144 "D:/SE1_GPL/Sources/EntitiesMP/Headman.es"
case HDT_KAMIKAZE : {
#line 145 "D:/SE1_GPL/Sources/EntitiesMP/Headman.es"
PrecacheSound  (SOUND_ATTACKKAMIKAZE );
#line 146 "D:/SE1_GPL/Sources/EntitiesMP/Headman.es"
PrecacheSound  (SOUND_IDLEKAMIKAZE );
#line 147 "D:/SE1_GPL/Sources/EntitiesMP/Headman.es"
PrecacheClass  (CLASS_BASIC_EFFECT  , BET_BOMB );
#line 148 "D:/SE1_GPL/Sources/EntitiesMP/Headman.es"
PrecacheModel  (MODEL_BOMB );
#line 149 "D:/SE1_GPL/Sources/EntitiesMP/Headman.es"
PrecacheTexture  (TEXTURE_BOMB );
#line 150 "D:/SE1_GPL/Sources/EntitiesMP/Headman.es"
}break ;
#line 151 "D:/SE1_GPL/Sources/EntitiesMP/Headman.es"
}
#line 152 "D:/SE1_GPL/Sources/EntitiesMP/Headman.es"
}
  
#line 155 "D:/SE1_GPL/Sources/EntitiesMP/Headman.es"
BOOL CHeadman::FillEntityStatistics(EntityStats * pes) 
#line 156 "D:/SE1_GPL/Sources/EntitiesMP/Headman.es"
{
#line 157 "D:/SE1_GPL/Sources/EntitiesMP/Headman.es"
CEnemyBase  :: FillEntityStatistics  (pes );
#line 158 "D:/SE1_GPL/Sources/EntitiesMP/Headman.es"
switch(m_hdtType ){
#line 159 "D:/SE1_GPL/Sources/EntitiesMP/Headman.es"
case HDT_FIRECRACKER : {pes  -> es_strName  += " Firecracker";}break ;
#line 160 "D:/SE1_GPL/Sources/EntitiesMP/Headman.es"
case HDT_ROCKETMAN : {pes  -> es_strName  += " Rocketman";}break ;
#line 161 "D:/SE1_GPL/Sources/EntitiesMP/Headman.es"
case HDT_BOMBERMAN : {pes  -> es_strName  += " Bomberman";}break ;
#line 162 "D:/SE1_GPL/Sources/EntitiesMP/Headman.es"
case HDT_KAMIKAZE : {pes  -> es_strName  += " Kamikaze";}break ;
#line 163 "D:/SE1_GPL/Sources/EntitiesMP/Headman.es"
}
#line 164 "D:/SE1_GPL/Sources/EntitiesMP/Headman.es"
return TRUE ;
#line 165 "D:/SE1_GPL/Sources/EntitiesMP/Headman.es"
}
  
#line 168 "D:/SE1_GPL/Sources/EntitiesMP/Headman.es"
void CHeadman::ReceiveDamage(CEntity * penInflictor,enum DamageType dmtType,
#line 169 "D:/SE1_GPL/Sources/EntitiesMP/Headman.es"
FLOAT fDamageAmmount,const FLOAT3D & vHitPoint,const FLOAT3D & vDirection) 
#line 170 "D:/SE1_GPL/Sources/EntitiesMP/Headman.es"
{
#line 172 "D:/SE1_GPL/Sources/EntitiesMP/Headman.es"
if(! IsOfClass  (penInflictor  , "Headman") || 
#line 173 "D:/SE1_GPL/Sources/EntitiesMP/Headman.es"
! (((CHeadman  *) penInflictor ) -> m_hdtType  == HDT_FIRECRACKER  || 
#line 174 "D:/SE1_GPL/Sources/EntitiesMP/Headman.es"
((CHeadman  *) penInflictor ) -> m_hdtType  == HDT_ROCKETMAN )){
#line 175 "D:/SE1_GPL/Sources/EntitiesMP/Headman.es"
CEnemyBase  :: ReceiveDamage  (penInflictor  , dmtType  , fDamageAmmount  , vHitPoint  , vDirection );
#line 178 "D:/SE1_GPL/Sources/EntitiesMP/Headman.es"
if(dmtType  == DMT_CHAINSAW  && GetHealth  () <= 0){
#line 180 "D:/SE1_GPL/Sources/EntitiesMP/Headman.es"
m_fBlowUpAmount  = 0;
#line 181 "D:/SE1_GPL/Sources/EntitiesMP/Headman.es"
}
#line 182 "D:/SE1_GPL/Sources/EntitiesMP/Headman.es"
}
#line 183 "D:/SE1_GPL/Sources/EntitiesMP/Headman.es"
}
  
#line 187 "D:/SE1_GPL/Sources/EntitiesMP/Headman.es"
INDEX CHeadman::AnimForDamage(FLOAT fDamage) {
#line 188 "D:/SE1_GPL/Sources/EntitiesMP/Headman.es"
INDEX iAnim ;
#line 189 "D:/SE1_GPL/Sources/EntitiesMP/Headman.es"
if(IRnd  () % 2){
#line 190 "D:/SE1_GPL/Sources/EntitiesMP/Headman.es"
iAnim  = HEADMAN_ANIM_WOUND1 ;
#line 191 "D:/SE1_GPL/Sources/EntitiesMP/Headman.es"
}else {
#line 192 "D:/SE1_GPL/Sources/EntitiesMP/Headman.es"
iAnim  = HEADMAN_ANIM_WOUND2 ;
#line 193 "D:/SE1_GPL/Sources/EntitiesMP/Headman.es"
}
#line 194 "D:/SE1_GPL/Sources/EntitiesMP/Headman.es"
StartModelAnim  (iAnim  , 0);
#line 195 "D:/SE1_GPL/Sources/EntitiesMP/Headman.es"
return iAnim ;
#line 196 "D:/SE1_GPL/Sources/EntitiesMP/Headman.es"
}
  
#line 199 "D:/SE1_GPL/Sources/EntitiesMP/Headman.es"
INDEX CHeadman::AnimForDeath(void) {
#line 200 "D:/SE1_GPL/Sources/EntitiesMP/Headman.es"
INDEX iAnim ;
#line 201 "D:/SE1_GPL/Sources/EntitiesMP/Headman.es"
FLOAT3D vFront ;
#line 202 "D:/SE1_GPL/Sources/EntitiesMP/Headman.es"
GetHeadingDirection  (0 , vFront );
#line 203 "D:/SE1_GPL/Sources/EntitiesMP/Headman.es"
FLOAT fDamageDir  = m_vDamage  % vFront ;
#line 204 "D:/SE1_GPL/Sources/EntitiesMP/Headman.es"
if(fDamageDir  < 0){
#line 205 "D:/SE1_GPL/Sources/EntitiesMP/Headman.es"
if(Abs  (fDamageDir ) < 10.0f){
#line 206 "D:/SE1_GPL/Sources/EntitiesMP/Headman.es"
iAnim  = HEADMAN_ANIM_DEATH_EASY_FALL_BACK ;
#line 207 "D:/SE1_GPL/Sources/EntitiesMP/Headman.es"
}else {
#line 208 "D:/SE1_GPL/Sources/EntitiesMP/Headman.es"
iAnim  = HEADMAN_ANIM_DEATH_FALL_BACK ;
#line 209 "D:/SE1_GPL/Sources/EntitiesMP/Headman.es"
}
#line 210 "D:/SE1_GPL/Sources/EntitiesMP/Headman.es"
}else {
#line 211 "D:/SE1_GPL/Sources/EntitiesMP/Headman.es"
if(Abs  (fDamageDir ) < 10.0f){
#line 212 "D:/SE1_GPL/Sources/EntitiesMP/Headman.es"
iAnim  = HEADMAN_ANIM_DEATH_EASY_FALL_FORWARD ;
#line 213 "D:/SE1_GPL/Sources/EntitiesMP/Headman.es"
}else {
#line 214 "D:/SE1_GPL/Sources/EntitiesMP/Headman.es"
iAnim  = HEADMAN_ANIM_DEATH_FALL_ON_KNEES ;
#line 215 "D:/SE1_GPL/Sources/EntitiesMP/Headman.es"
}
#line 216 "D:/SE1_GPL/Sources/EntitiesMP/Headman.es"
}
#line 218 "D:/SE1_GPL/Sources/EntitiesMP/Headman.es"
StartModelAnim  (iAnim  , 0);
#line 219 "D:/SE1_GPL/Sources/EntitiesMP/Headman.es"
return iAnim ;
#line 220 "D:/SE1_GPL/Sources/EntitiesMP/Headman.es"
}
  
#line 222 "D:/SE1_GPL/Sources/EntitiesMP/Headman.es"
FLOAT CHeadman::WaitForDust(FLOAT3D & vStretch) {
#line 223 "D:/SE1_GPL/Sources/EntitiesMP/Headman.es"
vStretch  = FLOAT3D (1 , 1 , 2);
#line 224 "D:/SE1_GPL/Sources/EntitiesMP/Headman.es"
if(GetModelObject  () -> GetAnim  () == HEADMAN_ANIM_DEATH_EASY_FALL_BACK )
#line 225 "D:/SE1_GPL/Sources/EntitiesMP/Headman.es"
{
#line 226 "D:/SE1_GPL/Sources/EntitiesMP/Headman.es"
vStretch  = vStretch  * 0.3f;
#line 227 "D:/SE1_GPL/Sources/EntitiesMP/Headman.es"
return 0.864f;
#line 228 "D:/SE1_GPL/Sources/EntitiesMP/Headman.es"
}
#line 229 "D:/SE1_GPL/Sources/EntitiesMP/Headman.es"
if(GetModelObject  () -> GetAnim  () == HEADMAN_ANIM_DEATH_FALL_BACK )
#line 230 "D:/SE1_GPL/Sources/EntitiesMP/Headman.es"
{
#line 231 "D:/SE1_GPL/Sources/EntitiesMP/Headman.es"
vStretch  = vStretch  * 0.75f;
#line 232 "D:/SE1_GPL/Sources/EntitiesMP/Headman.es"
return 0.48f;
#line 233 "D:/SE1_GPL/Sources/EntitiesMP/Headman.es"
}
#line 234 "D:/SE1_GPL/Sources/EntitiesMP/Headman.es"
if(GetModelObject  () -> GetAnim  () == HEADMAN_ANIM_DEATH_EASY_FALL_FORWARD )
#line 235 "D:/SE1_GPL/Sources/EntitiesMP/Headman.es"
{
#line 236 "D:/SE1_GPL/Sources/EntitiesMP/Headman.es"
vStretch  = vStretch  * 0.3f;
#line 237 "D:/SE1_GPL/Sources/EntitiesMP/Headman.es"
return 1.12f;
#line 238 "D:/SE1_GPL/Sources/EntitiesMP/Headman.es"
}
#line 239 "D:/SE1_GPL/Sources/EntitiesMP/Headman.es"
else if(GetModelObject  () -> GetAnim  () == HEADMAN_ANIM_DEATH_FALL_ON_KNEES )
#line 240 "D:/SE1_GPL/Sources/EntitiesMP/Headman.es"
{
#line 241 "D:/SE1_GPL/Sources/EntitiesMP/Headman.es"
vStretch  = vStretch  * 0.75f;
#line 242 "D:/SE1_GPL/Sources/EntitiesMP/Headman.es"
return 1.035f;
#line 243 "D:/SE1_GPL/Sources/EntitiesMP/Headman.es"
}
#line 244 "D:/SE1_GPL/Sources/EntitiesMP/Headman.es"
return - 1.0f;
#line 245 "D:/SE1_GPL/Sources/EntitiesMP/Headman.es"
}
  
#line 248 "D:/SE1_GPL/Sources/EntitiesMP/Headman.es"
BOOL CHeadman::ShouldBlowUp(void) 
#line 249 "D:/SE1_GPL/Sources/EntitiesMP/Headman.es"
{
#line 250 "D:/SE1_GPL/Sources/EntitiesMP/Headman.es"
if(m_hdtType  == HDT_KAMIKAZE  && GetHealth  () <= 0){
#line 251 "D:/SE1_GPL/Sources/EntitiesMP/Headman.es"
return TRUE ;
#line 252 "D:/SE1_GPL/Sources/EntitiesMP/Headman.es"
}else {
#line 253 "D:/SE1_GPL/Sources/EntitiesMP/Headman.es"
return CEnemyBase  :: ShouldBlowUp  ();
#line 254 "D:/SE1_GPL/Sources/EntitiesMP/Headman.es"
}
#line 255 "D:/SE1_GPL/Sources/EntitiesMP/Headman.es"
}
  
#line 257 "D:/SE1_GPL/Sources/EntitiesMP/Headman.es"
void CHeadman::DeathNotify(void) {
#line 258 "D:/SE1_GPL/Sources/EntitiesMP/Headman.es"
ChangeCollisionBoxIndexWhenPossible  (HEADMAN_COLLISION_BOX_DEATH );
#line 259 "D:/SE1_GPL/Sources/EntitiesMP/Headman.es"
en_fDensity  = 500.0f;
#line 260 "D:/SE1_GPL/Sources/EntitiesMP/Headman.es"
}
  
#line 263 "D:/SE1_GPL/Sources/EntitiesMP/Headman.es"
void CHeadman::StandingAnim(void) {
#line 264 "D:/SE1_GPL/Sources/EntitiesMP/Headman.es"
StartModelAnim  (HEADMAN_ANIM_IDLE_PATROL  , AOF_LOOPING  | AOF_NORESTART );
#line 265 "D:/SE1_GPL/Sources/EntitiesMP/Headman.es"
if(m_hdtType  == HDT_KAMIKAZE ){
#line 266 "D:/SE1_GPL/Sources/EntitiesMP/Headman.es"
KamikazeSoundOff  ();
#line 267 "D:/SE1_GPL/Sources/EntitiesMP/Headman.es"
}
#line 268 "D:/SE1_GPL/Sources/EntitiesMP/Headman.es"
}
  
#line 269 "D:/SE1_GPL/Sources/EntitiesMP/Headman.es"
void CHeadman::StandingAnimFight(void) 
#line 270 "D:/SE1_GPL/Sources/EntitiesMP/Headman.es"
{
#line 271 "D:/SE1_GPL/Sources/EntitiesMP/Headman.es"
StartModelAnim  (HEADMAN_ANIM_IDLE_FIGHT  , AOF_LOOPING  | AOF_NORESTART );
#line 272 "D:/SE1_GPL/Sources/EntitiesMP/Headman.es"
if(m_hdtType  == HDT_KAMIKAZE ){
#line 273 "D:/SE1_GPL/Sources/EntitiesMP/Headman.es"
KamikazeSoundOff  ();
#line 274 "D:/SE1_GPL/Sources/EntitiesMP/Headman.es"
}
#line 275 "D:/SE1_GPL/Sources/EntitiesMP/Headman.es"
}
  
#line 276 "D:/SE1_GPL/Sources/EntitiesMP/Headman.es"
void CHeadman::WalkingAnim(void) {
#line 277 "D:/SE1_GPL/Sources/EntitiesMP/Headman.es"
StartModelAnim  (HEADMAN_ANIM_WALK  , AOF_LOOPING  | AOF_NORESTART );
#line 278 "D:/SE1_GPL/Sources/EntitiesMP/Headman.es"
}
  
#line 279 "D:/SE1_GPL/Sources/EntitiesMP/Headman.es"
void CHeadman::RunningAnim(void) {
#line 280 "D:/SE1_GPL/Sources/EntitiesMP/Headman.es"
if(m_hdtType  == HDT_KAMIKAZE ){
#line 281 "D:/SE1_GPL/Sources/EntitiesMP/Headman.es"
KamikazeSoundOn  ();
#line 282 "D:/SE1_GPL/Sources/EntitiesMP/Headman.es"
StartModelAnim  (HEADMAN_ANIM_KAMIKAZE_ATTACK  , AOF_LOOPING  | AOF_NORESTART );
#line 283 "D:/SE1_GPL/Sources/EntitiesMP/Headman.es"
}else {
#line 284 "D:/SE1_GPL/Sources/EntitiesMP/Headman.es"
StartModelAnim  (HEADMAN_ANIM_RUN  , AOF_LOOPING  | AOF_NORESTART );
#line 285 "D:/SE1_GPL/Sources/EntitiesMP/Headman.es"
}
#line 286 "D:/SE1_GPL/Sources/EntitiesMP/Headman.es"
}
  
#line 287 "D:/SE1_GPL/Sources/EntitiesMP/Headman.es"
void CHeadman::RotatingAnim(void) {
#line 288 "D:/SE1_GPL/Sources/EntitiesMP/Headman.es"
RunningAnim  ();
#line 289 "D:/SE1_GPL/Sources/EntitiesMP/Headman.es"
}
  
#line 292 "D:/SE1_GPL/Sources/EntitiesMP/Headman.es"
void CHeadman::IdleSound(void) {
#line 293 "D:/SE1_GPL/Sources/EntitiesMP/Headman.es"
if(m_bAttackSound ){
#line 294 "D:/SE1_GPL/Sources/EntitiesMP/Headman.es"
return ;
#line 295 "D:/SE1_GPL/Sources/EntitiesMP/Headman.es"
}
#line 296 "D:/SE1_GPL/Sources/EntitiesMP/Headman.es"
if(m_hdtType  == HDT_KAMIKAZE ){
#line 297 "D:/SE1_GPL/Sources/EntitiesMP/Headman.es"
PlaySound  (m_soSound  , SOUND_IDLEKAMIKAZE  , SOF_3D );
#line 298 "D:/SE1_GPL/Sources/EntitiesMP/Headman.es"
}else {
#line 299 "D:/SE1_GPL/Sources/EntitiesMP/Headman.es"
PlaySound  (m_soSound  , SOUND_IDLE  , SOF_3D );
#line 300 "D:/SE1_GPL/Sources/EntitiesMP/Headman.es"
}
#line 301 "D:/SE1_GPL/Sources/EntitiesMP/Headman.es"
}
  
#line 302 "D:/SE1_GPL/Sources/EntitiesMP/Headman.es"
void CHeadman::SightSound(void) {
#line 303 "D:/SE1_GPL/Sources/EntitiesMP/Headman.es"
if(m_bAttackSound ){
#line 304 "D:/SE1_GPL/Sources/EntitiesMP/Headman.es"
return ;
#line 305 "D:/SE1_GPL/Sources/EntitiesMP/Headman.es"
}
#line 306 "D:/SE1_GPL/Sources/EntitiesMP/Headman.es"
PlaySound  (m_soSound  , SOUND_SIGHT  , SOF_3D );
#line 307 "D:/SE1_GPL/Sources/EntitiesMP/Headman.es"
}
  
#line 308 "D:/SE1_GPL/Sources/EntitiesMP/Headman.es"
void CHeadman::WoundSound(void) {
#line 309 "D:/SE1_GPL/Sources/EntitiesMP/Headman.es"
if(m_bAttackSound ){
#line 310 "D:/SE1_GPL/Sources/EntitiesMP/Headman.es"
return ;
#line 311 "D:/SE1_GPL/Sources/EntitiesMP/Headman.es"
}
#line 312 "D:/SE1_GPL/Sources/EntitiesMP/Headman.es"
PlaySound  (m_soSound  , SOUND_WOUND  , SOF_3D );
#line 313 "D:/SE1_GPL/Sources/EntitiesMP/Headman.es"
}
  
#line 314 "D:/SE1_GPL/Sources/EntitiesMP/Headman.es"
void CHeadman::DeathSound(void) {
#line 315 "D:/SE1_GPL/Sources/EntitiesMP/Headman.es"
if(m_bAttackSound ){
#line 316 "D:/SE1_GPL/Sources/EntitiesMP/Headman.es"
return ;
#line 317 "D:/SE1_GPL/Sources/EntitiesMP/Headman.es"
}
#line 318 "D:/SE1_GPL/Sources/EntitiesMP/Headman.es"
PlaySound  (m_soSound  , SOUND_DEATH  , SOF_3D );
#line 319 "D:/SE1_GPL/Sources/EntitiesMP/Headman.es"
}
  
#line 321 "D:/SE1_GPL/Sources/EntitiesMP/Headman.es"
void CHeadman::KamikazeSoundOn(void) {
#line 322 "D:/SE1_GPL/Sources/EntitiesMP/Headman.es"
if(! m_bAttackSound ){
#line 323 "D:/SE1_GPL/Sources/EntitiesMP/Headman.es"
m_bAttackSound  = TRUE ;
#line 324 "D:/SE1_GPL/Sources/EntitiesMP/Headman.es"
PlaySound  (m_soSound  , SOUND_ATTACKKAMIKAZE  , SOF_3D  | SOF_LOOP );
#line 325 "D:/SE1_GPL/Sources/EntitiesMP/Headman.es"
}
#line 326 "D:/SE1_GPL/Sources/EntitiesMP/Headman.es"
}
  
#line 327 "D:/SE1_GPL/Sources/EntitiesMP/Headman.es"
void CHeadman::KamikazeSoundOff(void) {
#line 328 "D:/SE1_GPL/Sources/EntitiesMP/Headman.es"
if(m_bAttackSound ){
#line 329 "D:/SE1_GPL/Sources/EntitiesMP/Headman.es"
m_soSound  . Stop  ();
#line 330 "D:/SE1_GPL/Sources/EntitiesMP/Headman.es"
m_bAttackSound  = FALSE ;
#line 331 "D:/SE1_GPL/Sources/EntitiesMP/Headman.es"
}
#line 332 "D:/SE1_GPL/Sources/EntitiesMP/Headman.es"
}
  
#line 337 "D:/SE1_GPL/Sources/EntitiesMP/Headman.es"
void CHeadman::BlowUpNotify(void) {
#line 339 "D:/SE1_GPL/Sources/EntitiesMP/Headman.es"
if(m_hdtType  == HDT_KAMIKAZE  || m_hdtType  == HDT_BOMBERMAN ){
#line 340 "D:/SE1_GPL/Sources/EntitiesMP/Headman.es"
Explode  ();
#line 341 "D:/SE1_GPL/Sources/EntitiesMP/Headman.es"
}
#line 342 "D:/SE1_GPL/Sources/EntitiesMP/Headman.es"
}
  
#line 391 "D:/SE1_GPL/Sources/EntitiesMP/Headman.es"
void CHeadman::Explode(void) {
#line 392 "D:/SE1_GPL/Sources/EntitiesMP/Headman.es"
if(! m_bExploded ){
#line 393 "D:/SE1_GPL/Sources/EntitiesMP/Headman.es"
m_bExploded  = TRUE ;
#line 396 "D:/SE1_GPL/Sources/EntitiesMP/Headman.es"
FLOAT3D vSource ;
#line 397 "D:/SE1_GPL/Sources/EntitiesMP/Headman.es"
GetEntityInfoPosition  (this  , eiHeadman  . vTargetCenter  , vSource );
#line 398 "D:/SE1_GPL/Sources/EntitiesMP/Headman.es"
if(m_hdtType  == HDT_BOMBERMAN ){
#line 399 "D:/SE1_GPL/Sources/EntitiesMP/Headman.es"
InflictDirectDamage  (this  , this  , DMT_EXPLOSION  , 100.0f , vSource  , 
#line 400 "D:/SE1_GPL/Sources/EntitiesMP/Headman.es"
- en_vGravityDir );
#line 401 "D:/SE1_GPL/Sources/EntitiesMP/Headman.es"
InflictRangeDamage  (this  , DMT_EXPLOSION  , 15.0f , vSource  , 1.0f , 6.0f);
#line 402 "D:/SE1_GPL/Sources/EntitiesMP/Headman.es"
}else {
#line 403 "D:/SE1_GPL/Sources/EntitiesMP/Headman.es"
InflictDirectDamage  (this  , this  , DMT_CLOSERANGE  , 100.0f , vSource  , 
#line 404 "D:/SE1_GPL/Sources/EntitiesMP/Headman.es"
- en_vGravityDir );
#line 405 "D:/SE1_GPL/Sources/EntitiesMP/Headman.es"
InflictRangeDamage  (this  , DMT_EXPLOSION  , 30.0f , vSource  , 2.75f , 8.0f);
#line 406 "D:/SE1_GPL/Sources/EntitiesMP/Headman.es"
}
#line 409 "D:/SE1_GPL/Sources/EntitiesMP/Headman.es"
CPlacement3D plExplosion  = GetPlacement  ();
#line 410 "D:/SE1_GPL/Sources/EntitiesMP/Headman.es"
CEntityPointer penExplosion  = CreateEntity  (plExplosion  , CLASS_BASIC_EFFECT );
#line 411 "D:/SE1_GPL/Sources/EntitiesMP/Headman.es"
ESpawnEffect  eSpawnEffect ;
#line 412 "D:/SE1_GPL/Sources/EntitiesMP/Headman.es"
eSpawnEffect  . colMuliplier  = C_WHITE  | CT_OPAQUE ;
#line 413 "D:/SE1_GPL/Sources/EntitiesMP/Headman.es"
eSpawnEffect  . betType  = BET_BOMB ;
#line 414 "D:/SE1_GPL/Sources/EntitiesMP/Headman.es"
eSpawnEffect  . vStretch  = FLOAT3D (1.0f , 1.0f , 1.0f);
#line 415 "D:/SE1_GPL/Sources/EntitiesMP/Headman.es"
penExplosion  -> Initialize  (eSpawnEffect );
#line 418 "D:/SE1_GPL/Sources/EntitiesMP/Headman.es"
eSpawnEffect  . betType  = BET_EXPLOSION_DEBRIS ;
#line 419 "D:/SE1_GPL/Sources/EntitiesMP/Headman.es"
CEntityPointer penExplosionDebris  = CreateEntity  (plExplosion  , CLASS_BASIC_EFFECT );
#line 420 "D:/SE1_GPL/Sources/EntitiesMP/Headman.es"
penExplosionDebris  -> Initialize  (eSpawnEffect );
#line 423 "D:/SE1_GPL/Sources/EntitiesMP/Headman.es"
eSpawnEffect  . betType  = BET_EXPLOSION_SMOKE ;
#line 424 "D:/SE1_GPL/Sources/EntitiesMP/Headman.es"
CEntityPointer penExplosionSmoke  = CreateEntity  (plExplosion  , CLASS_BASIC_EFFECT );
#line 425 "D:/SE1_GPL/Sources/EntitiesMP/Headman.es"
penExplosionSmoke  -> Initialize  (eSpawnEffect );
#line 426 "D:/SE1_GPL/Sources/EntitiesMP/Headman.es"
}
#line 427 "D:/SE1_GPL/Sources/EntitiesMP/Headman.es"
}
  
#line 433 "D:/SE1_GPL/Sources/EntitiesMP/Headman.es"
void CHeadman::SetSpeedsToDesiredPosition(const FLOAT3D & vPosDelta,FLOAT fPosDistance,BOOL bGoingToPlayer) 
#line 434 "D:/SE1_GPL/Sources/EntitiesMP/Headman.es"
{
#line 436 "D:/SE1_GPL/Sources/EntitiesMP/Headman.es"
if(m_hdtType  == HDT_KAMIKAZE  && CalcDist  (m_penEnemy ) < EXPLODE_KAMIKAZE ){
#line 438 "D:/SE1_GPL/Sources/EntitiesMP/Headman.es"
SetHealth  (- 10000.0f);
#line 439 "D:/SE1_GPL/Sources/EntitiesMP/Headman.es"
m_vDamage  = FLOAT3D (0 , 10000 , 0);
#line 440 "D:/SE1_GPL/Sources/EntitiesMP/Headman.es"
SendEvent  (EDeath  ());
#line 443 "D:/SE1_GPL/Sources/EntitiesMP/Headman.es"
}else {
#line 445 "D:/SE1_GPL/Sources/EntitiesMP/Headman.es"
CEnemyBase  :: SetSpeedsToDesiredPosition  (vPosDelta  , fPosDistance  , bGoingToPlayer );
#line 446 "D:/SE1_GPL/Sources/EntitiesMP/Headman.es"
}
#line 447 "D:/SE1_GPL/Sources/EntitiesMP/Headman.es"
}
  FLOAT CHeadman::GetAttackMoveFrequency(FLOAT fEnemyDistance) 
#line 451 "D:/SE1_GPL/Sources/EntitiesMP/Headman.es"
{
#line 453 "D:/SE1_GPL/Sources/EntitiesMP/Headman.es"
if(m_hdtType  == HDT_KAMIKAZE  && fEnemyDistance  < m_fCloseDistance ){
#line 454 "D:/SE1_GPL/Sources/EntitiesMP/Headman.es"
return 0.1f;
#line 455 "D:/SE1_GPL/Sources/EntitiesMP/Headman.es"
}else {
#line 456 "D:/SE1_GPL/Sources/EntitiesMP/Headman.es"
return CEnemyBase  :: GetAttackMoveFrequency  (fEnemyDistance );
#line 457 "D:/SE1_GPL/Sources/EntitiesMP/Headman.es"
}
#line 458 "D:/SE1_GPL/Sources/EntitiesMP/Headman.es"
}
BOOL CHeadman::
#line 464 "D:/SE1_GPL/Sources/EntitiesMP/Headman.es"
InitializeAttack(const CEntityEvent &__eeInput) {
#undef STATE_CURRENT
#define STATE_CURRENT STATE_CHeadman_InitializeAttack
  ASSERTMSG(__eeInput.ee_slEvent==EVENTCODE_EVoid, "CHeadman::InitializeAttack expects 'EVoid' as input!");  const EVoid &e = (const EVoid &)__eeInput;
#line 465 "D:/SE1_GPL/Sources/EntitiesMP/Headman.es"
if(m_hdtType  == HDT_KAMIKAZE ){
#line 466 "D:/SE1_GPL/Sources/EntitiesMP/Headman.es"
KamikazeSoundOn  ();
#line 467 "D:/SE1_GPL/Sources/EntitiesMP/Headman.es"
}
#line 468 "D:/SE1_GPL/Sources/EntitiesMP/Headman.es"
Jump(STATE_CURRENT, STATE_CEnemyBase_InitializeAttack, FALSE, EVoid());return TRUE; ASSERT(FALSE); return TRUE;};BOOL CHeadman::
#line 471 "D:/SE1_GPL/Sources/EntitiesMP/Headman.es"
StopAttack(const CEntityEvent &__eeInput) {
#undef STATE_CURRENT
#define STATE_CURRENT STATE_CHeadman_StopAttack
  ASSERTMSG(__eeInput.ee_slEvent==EVENTCODE_EVoid, "CHeadman::StopAttack expects 'EVoid' as input!");  const EVoid &e = (const EVoid &)__eeInput;
#line 472 "D:/SE1_GPL/Sources/EntitiesMP/Headman.es"
KamikazeSoundOff  ();
#line 473 "D:/SE1_GPL/Sources/EntitiesMP/Headman.es"
Jump(STATE_CURRENT, STATE_CEnemyBase_StopAttack, FALSE, EVoid());return TRUE; ASSERT(FALSE); return TRUE;};BOOL CHeadman::
#line 476 "D:/SE1_GPL/Sources/EntitiesMP/Headman.es"
Fire(const CEntityEvent &__eeInput) {
#undef STATE_CURRENT
#define STATE_CURRENT STATE_CHeadman_Fire
  ASSERTMSG(__eeInput.ee_slEvent==EVENTCODE_EVoid, "CHeadman::Fire expects 'EVoid' as input!");  const EVoid &e = (const EVoid &)__eeInput;
#line 478 "D:/SE1_GPL/Sources/EntitiesMP/Headman.es"
if(!(m_hdtType  == HDT_FIRECRACKER )){ Jump(STATE_CURRENT,0x012f000e, FALSE, EInternal());return TRUE;}
#line 479 "D:/SE1_GPL/Sources/EntitiesMP/Headman.es"
STATE_CHeadman_FirecrackerAttack, TRUE;
Jump(STATE_CURRENT, 0x012f0003, FALSE, EBegin());return TRUE;}BOOL CHeadman::H0x012f0003_Fire_01(const CEntityEvent &__eeInput) {
#undef STATE_CURRENT
#define STATE_CURRENT 0x012f0003
switch(__eeInput.ee_slEvent) {case EVENTCODE_EBegin: Call(STATE_CURRENT, STATE_CHeadman_FirecrackerAttack, TRUE, EVoid());return TRUE;case EVENTCODE_EEnd: Jump(STATE_CURRENT,0x012f0004, FALSE, __eeInput); return TRUE;default: return FALSE; }}BOOL CHeadman::H0x012f0004_Fire_02(const CEntityEvent &__eeInput){
#undef STATE_CURRENT
#define STATE_CURRENT 0x012f0004
const EEnd&__e= (EEnd&)__eeInput;
;Jump(STATE_CURRENT,0x012f000d, FALSE, EInternal());return TRUE;}BOOL CHeadman::H0x012f000e_Fire_12(const CEntityEvent &__eeInput){
ASSERT(__eeInput.ee_slEvent==EVENTCODE_EInternal);
#undef STATE_CURRENT
#define STATE_CURRENT 0x012f000e
if(!(m_hdtType  == HDT_ROCKETMAN )){ Jump(STATE_CURRENT,0x012f000c, FALSE, EInternal());return TRUE;}
#line 482 "D:/SE1_GPL/Sources/EntitiesMP/Headman.es"
STATE_CHeadman_RocketmanAttack, TRUE;
Jump(STATE_CURRENT, 0x012f0005, FALSE, EBegin());return TRUE;}BOOL CHeadman::H0x012f0005_Fire_03(const CEntityEvent &__eeInput) {
#undef STATE_CURRENT
#define STATE_CURRENT 0x012f0005
switch(__eeInput.ee_slEvent) {case EVENTCODE_EBegin: Call(STATE_CURRENT, STATE_CHeadman_RocketmanAttack, TRUE, EVoid());return TRUE;case EVENTCODE_EEnd: Jump(STATE_CURRENT,0x012f0006, FALSE, __eeInput); return TRUE;default: return FALSE; }}BOOL CHeadman::H0x012f0006_Fire_04(const CEntityEvent &__eeInput){
#undef STATE_CURRENT
#define STATE_CURRENT 0x012f0006
const EEnd&__e= (EEnd&)__eeInput;
;Jump(STATE_CURRENT,0x012f000b, FALSE, EInternal());return TRUE;}BOOL CHeadman::H0x012f000c_Fire_10(const CEntityEvent &__eeInput){
ASSERT(__eeInput.ee_slEvent==EVENTCODE_EInternal);
#undef STATE_CURRENT
#define STATE_CURRENT 0x012f000c
if(!(m_hdtType  == HDT_BOMBERMAN )){ Jump(STATE_CURRENT,0x012f000a, FALSE, EInternal());return TRUE;}
#line 485 "D:/SE1_GPL/Sources/EntitiesMP/Headman.es"
STATE_CHeadman_BombermanAttack, TRUE;
Jump(STATE_CURRENT, 0x012f0007, FALSE, EBegin());return TRUE;}BOOL CHeadman::H0x012f0007_Fire_05(const CEntityEvent &__eeInput) {
#undef STATE_CURRENT
#define STATE_CURRENT 0x012f0007
switch(__eeInput.ee_slEvent) {case EVENTCODE_EBegin: Call(STATE_CURRENT, STATE_CHeadman_BombermanAttack, TRUE, EVoid());return TRUE;case EVENTCODE_EEnd: Jump(STATE_CURRENT,0x012f0008, FALSE, __eeInput); return TRUE;default: return FALSE; }}BOOL CHeadman::H0x012f0008_Fire_06(const CEntityEvent &__eeInput){
#undef STATE_CURRENT
#define STATE_CURRENT 0x012f0008
const EEnd&__e= (EEnd&)__eeInput;
;Jump(STATE_CURRENT,0x012f0009, FALSE, EInternal());return TRUE;}BOOL CHeadman::H0x012f000a_Fire_08(const CEntityEvent &__eeInput){
ASSERT(__eeInput.ee_slEvent==EVENTCODE_EInternal);
#undef STATE_CURRENT
#define STATE_CURRENT 0x012f000a
if(m_hdtType  == HDT_KAMIKAZE ){
#line 488 "D:/SE1_GPL/Sources/EntitiesMP/Headman.es"
}Jump(STATE_CURRENT,0x012f0009, FALSE, EInternal());return TRUE;}
BOOL CHeadman::H0x012f0009_Fire_07(const CEntityEvent &__eeInput){
ASSERT(__eeInput.ee_slEvent==EVENTCODE_EInternal);
#undef STATE_CURRENT
#define STATE_CURRENT 0x012f0009
Jump(STATE_CURRENT,0x012f000b, FALSE, EInternal());return TRUE;}
BOOL CHeadman::H0x012f000b_Fire_09(const CEntityEvent &__eeInput){
ASSERT(__eeInput.ee_slEvent==EVENTCODE_EInternal);
#undef STATE_CURRENT
#define STATE_CURRENT 0x012f000b
Jump(STATE_CURRENT,0x012f000d, FALSE, EInternal());return TRUE;}
BOOL CHeadman::H0x012f000d_Fire_11(const CEntityEvent &__eeInput){
ASSERT(__eeInput.ee_slEvent==EVENTCODE_EInternal);
#undef STATE_CURRENT
#define STATE_CURRENT 0x012f000d

#line 490 "D:/SE1_GPL/Sources/EntitiesMP/Headman.es"
Return(STATE_CURRENT,EReturn  ());
#line 490 "D:/SE1_GPL/Sources/EntitiesMP/Headman.es"
return TRUE; ASSERT(FALSE); return TRUE;};BOOL CHeadman::
#line 494 "D:/SE1_GPL/Sources/EntitiesMP/Headman.es"
BombermanAttack(const CEntityEvent &__eeInput) {
#undef STATE_CURRENT
#define STATE_CURRENT STATE_CHeadman_BombermanAttack
  ASSERTMSG(__eeInput.ee_slEvent==EVENTCODE_EVoid, "CHeadman::BombermanAttack expects 'EVoid' as input!");  const EVoid &e = (const EVoid &)__eeInput;
#line 496 "D:/SE1_GPL/Sources/EntitiesMP/Headman.es"
if(! IsInFrustum  (m_penEnemy  , CosFast  (80.0f))){
#line 497 "D:/SE1_GPL/Sources/EntitiesMP/Headman.es"
Return(STATE_CURRENT,EEnd  ());
#line 497 "D:/SE1_GPL/Sources/EntitiesMP/Headman.es"
return TRUE;
#line 498 "D:/SE1_GPL/Sources/EntitiesMP/Headman.es"
}
#line 500 "D:/SE1_GPL/Sources/EntitiesMP/Headman.es"
SetTimerAfter(0.2f + FRnd  () / 4);
Jump(STATE_CURRENT, 0x012f0010, FALSE, EBegin());return TRUE;}BOOL CHeadman::H0x012f0010_BombermanAttack_01(const CEntityEvent &__eeInput) {
#undef STATE_CURRENT
#define STATE_CURRENT 0x012f0010
switch(__eeInput.ee_slEvent) {case EVENTCODE_EBegin: return TRUE;case EVENTCODE_ETimer: Jump(STATE_CURRENT,0x012f0011, FALSE, EInternal()); return TRUE;default: return FALSE; }}BOOL CHeadman::H0x012f0011_BombermanAttack_02(const CEntityEvent &__eeInput){
ASSERT(__eeInput.ee_slEvent==EVENTCODE_EInternal);
#undef STATE_CURRENT
#define STATE_CURRENT 0x012f0011
;
#line 502 "D:/SE1_GPL/Sources/EntitiesMP/Headman.es"
StartModelAnim  (HEADMAN_ANIM_BOMBERMAN_ATTACK  , 0);
#line 503 "D:/SE1_GPL/Sources/EntitiesMP/Headman.es"
PlaySound  (m_soSound  , SOUND_FIREBOMBERMAN  , SOF_3D );
#line 504 "D:/SE1_GPL/Sources/EntitiesMP/Headman.es"
SetTimerAfter(0.15f);
Jump(STATE_CURRENT, 0x012f0012, FALSE, EBegin());return TRUE;}BOOL CHeadman::H0x012f0012_BombermanAttack_03(const CEntityEvent &__eeInput) {
#undef STATE_CURRENT
#define STATE_CURRENT 0x012f0012
switch(__eeInput.ee_slEvent) {case EVENTCODE_EBegin: return TRUE;case EVENTCODE_ETimer: Jump(STATE_CURRENT,0x012f0013, FALSE, EInternal()); return TRUE;default: return FALSE; }}BOOL CHeadman::H0x012f0013_BombermanAttack_04(const CEntityEvent &__eeInput){
ASSERT(__eeInput.ee_slEvent==EVENTCODE_EInternal);
#undef STATE_CURRENT
#define STATE_CURRENT 0x012f0013
;
#line 506 "D:/SE1_GPL/Sources/EntitiesMP/Headman.es"
AddAttachment  (HEADMAN_ATTACHMENT_BOMB_RIGHT_HAND  , MODEL_BOMB  , TEXTURE_BOMB );
#line 507 "D:/SE1_GPL/Sources/EntitiesMP/Headman.es"
SetTimerAfter(0.30f);
Jump(STATE_CURRENT, 0x012f0014, FALSE, EBegin());return TRUE;}BOOL CHeadman::H0x012f0014_BombermanAttack_05(const CEntityEvent &__eeInput) {
#undef STATE_CURRENT
#define STATE_CURRENT 0x012f0014
switch(__eeInput.ee_slEvent) {case EVENTCODE_EBegin: return TRUE;case EVENTCODE_ETimer: Jump(STATE_CURRENT,0x012f0015, FALSE, EInternal()); return TRUE;default: return FALSE; }}BOOL CHeadman::H0x012f0015_BombermanAttack_06(const CEntityEvent &__eeInput){
ASSERT(__eeInput.ee_slEvent==EVENTCODE_EInternal);
#undef STATE_CURRENT
#define STATE_CURRENT 0x012f0015
;
#line 508 "D:/SE1_GPL/Sources/EntitiesMP/Headman.es"
RemoveAttachment  (HEADMAN_ATTACHMENT_BOMB_RIGHT_HAND );
#line 512 "D:/SE1_GPL/Sources/EntitiesMP/Headman.es"
FLOAT fLaunchSpeed ;
#line 513 "D:/SE1_GPL/Sources/EntitiesMP/Headman.es"
FLOAT fRelativeHdg ;
#line 514 "D:/SE1_GPL/Sources/EntitiesMP/Headman.es"
CalculateAngularLaunchParams  (
#line 515 "D:/SE1_GPL/Sources/EntitiesMP/Headman.es"
GetPlacement  () . pl_PositionVector  , BOMBERMAN_LAUNCH  (2) - 1.5f , 
#line 516 "D:/SE1_GPL/Sources/EntitiesMP/Headman.es"
m_penEnemy  -> GetPlacement  () . pl_PositionVector  , FLOAT3D (0 , 0 , 0) , 
#line 517 "D:/SE1_GPL/Sources/EntitiesMP/Headman.es"
BOMBERMAN_ANGLE  , 
#line 518 "D:/SE1_GPL/Sources/EntitiesMP/Headman.es"
fLaunchSpeed  , 
#line 519 "D:/SE1_GPL/Sources/EntitiesMP/Headman.es"
fRelativeHdg );
#line 522 "D:/SE1_GPL/Sources/EntitiesMP/Headman.es"
EntityInfo  * peiTarget  = (EntityInfo  *) (m_penEnemy  -> GetEntityInfo  ());
#line 523 "D:/SE1_GPL/Sources/EntitiesMP/Headman.es"
FLOAT3D vShootTarget ;
#line 524 "D:/SE1_GPL/Sources/EntitiesMP/Headman.es"
GetEntityInfoPosition  (m_penEnemy  , peiTarget  -> vTargetCenter  , vShootTarget );
#line 526 "D:/SE1_GPL/Sources/EntitiesMP/Headman.es"
CPlacement3D pl ;
#line 527 "D:/SE1_GPL/Sources/EntitiesMP/Headman.es"
PrepareFreeFlyingProjectile  (pl  , vShootTarget  , BOMBERMAN_LAUNCH  , ANGLE3D (0 , BOMBERMAN_ANGLE  , 0));
#line 528 "D:/SE1_GPL/Sources/EntitiesMP/Headman.es"
CEntityPointer penProjectile  = CreateEntity  (pl  , CLASS_PROJECTILE );
#line 529 "D:/SE1_GPL/Sources/EntitiesMP/Headman.es"
ELaunchProjectile  eLaunch ;
#line 530 "D:/SE1_GPL/Sources/EntitiesMP/Headman.es"
eLaunch  . penLauncher  = this ;
#line 531 "D:/SE1_GPL/Sources/EntitiesMP/Headman.es"
eLaunch  . prtType  = PRT_HEADMAN_BOMBERMAN ;
#line 532 "D:/SE1_GPL/Sources/EntitiesMP/Headman.es"
eLaunch  . fSpeed  = fLaunchSpeed ;
#line 533 "D:/SE1_GPL/Sources/EntitiesMP/Headman.es"
penProjectile  -> Initialize  (eLaunch );
#line 536 "D:/SE1_GPL/Sources/EntitiesMP/Headman.es"
RemoveAttachment  (HEADMAN_ATTACHMENT_BOMB_RIGHT_HAND );
#line 538 "D:/SE1_GPL/Sources/EntitiesMP/Headman.es"
SetTimerAfter(0.45f + FRnd  () / 2);
Jump(STATE_CURRENT, 0x012f0016, FALSE, EBegin());return TRUE;}BOOL CHeadman::H0x012f0016_BombermanAttack_07(const CEntityEvent &__eeInput) {
#undef STATE_CURRENT
#define STATE_CURRENT 0x012f0016
switch(__eeInput.ee_slEvent) {case EVENTCODE_EBegin: return TRUE;case EVENTCODE_ETimer: Jump(STATE_CURRENT,0x012f0017, FALSE, EInternal()); return TRUE;default: return FALSE; }}BOOL CHeadman::H0x012f0017_BombermanAttack_08(const CEntityEvent &__eeInput){
ASSERT(__eeInput.ee_slEvent==EVENTCODE_EInternal);
#undef STATE_CURRENT
#define STATE_CURRENT 0x012f0017
;
#line 539 "D:/SE1_GPL/Sources/EntitiesMP/Headman.es"
Return(STATE_CURRENT,EEnd  ());
#line 539 "D:/SE1_GPL/Sources/EntitiesMP/Headman.es"
return TRUE; ASSERT(FALSE); return TRUE;};BOOL CHeadman::
#line 543 "D:/SE1_GPL/Sources/EntitiesMP/Headman.es"
FirecrackerAttack(const CEntityEvent &__eeInput) {
#undef STATE_CURRENT
#define STATE_CURRENT STATE_CHeadman_FirecrackerAttack
  ASSERTMSG(__eeInput.ee_slEvent==EVENTCODE_EVoid, "CHeadman::FirecrackerAttack expects 'EVoid' as input!");  const EVoid &e = (const EVoid &)__eeInput;
#line 545 "D:/SE1_GPL/Sources/EntitiesMP/Headman.es"
if(- en_vGravityDir  % CalcDelta  (m_penEnemy ) > CalcDist  (m_penEnemy ) / 1.41421f){
#line 546 "D:/SE1_GPL/Sources/EntitiesMP/Headman.es"
Return(STATE_CURRENT,EEnd  ());
#line 546 "D:/SE1_GPL/Sources/EntitiesMP/Headman.es"
return TRUE;
#line 547 "D:/SE1_GPL/Sources/EntitiesMP/Headman.es"
}
#line 549 "D:/SE1_GPL/Sources/EntitiesMP/Headman.es"
SetTimerAfter(0.2f + FRnd  () / 4);
Jump(STATE_CURRENT, 0x012f0019, FALSE, EBegin());return TRUE;}BOOL CHeadman::H0x012f0019_FirecrackerAttack_01(const CEntityEvent &__eeInput) {
#undef STATE_CURRENT
#define STATE_CURRENT 0x012f0019
switch(__eeInput.ee_slEvent) {case EVENTCODE_EBegin: return TRUE;case EVENTCODE_ETimer: Jump(STATE_CURRENT,0x012f001a, FALSE, EInternal()); return TRUE;default: return FALSE; }}BOOL CHeadman::H0x012f001a_FirecrackerAttack_02(const CEntityEvent &__eeInput){
ASSERT(__eeInput.ee_slEvent==EVENTCODE_EInternal);
#undef STATE_CURRENT
#define STATE_CURRENT 0x012f001a
;
#line 551 "D:/SE1_GPL/Sources/EntitiesMP/Headman.es"
StartModelAnim  (HEADMAN_ANIM_FIRECRACKER_ATTACK  , 0);
#line 552 "D:/SE1_GPL/Sources/EntitiesMP/Headman.es"
SetTimerAfter(0.15f);
Jump(STATE_CURRENT, 0x012f001b, FALSE, EBegin());return TRUE;}BOOL CHeadman::H0x012f001b_FirecrackerAttack_03(const CEntityEvent &__eeInput) {
#undef STATE_CURRENT
#define STATE_CURRENT 0x012f001b
switch(__eeInput.ee_slEvent) {case EVENTCODE_EBegin: return TRUE;case EVENTCODE_ETimer: Jump(STATE_CURRENT,0x012f001c, FALSE, EInternal()); return TRUE;default: return FALSE; }}BOOL CHeadman::H0x012f001c_FirecrackerAttack_04(const CEntityEvent &__eeInput){
ASSERT(__eeInput.ee_slEvent==EVENTCODE_EInternal);
#undef STATE_CURRENT
#define STATE_CURRENT 0x012f001c
;
#line 553 "D:/SE1_GPL/Sources/EntitiesMP/Headman.es"
PlaySound  (m_soSound  , SOUND_FIREFIRECRACKER  , SOF_3D );
#line 554 "D:/SE1_GPL/Sources/EntitiesMP/Headman.es"
SetTimerAfter(0.52f);
Jump(STATE_CURRENT, 0x012f001d, FALSE, EBegin());return TRUE;}BOOL CHeadman::H0x012f001d_FirecrackerAttack_05(const CEntityEvent &__eeInput) {
#undef STATE_CURRENT
#define STATE_CURRENT 0x012f001d
switch(__eeInput.ee_slEvent) {case EVENTCODE_EBegin: return TRUE;case EVENTCODE_ETimer: Jump(STATE_CURRENT,0x012f001e, FALSE, EInternal()); return TRUE;default: return FALSE; }}BOOL CHeadman::H0x012f001e_FirecrackerAttack_06(const CEntityEvent &__eeInput){
ASSERT(__eeInput.ee_slEvent==EVENTCODE_EInternal);
#undef STATE_CURRENT
#define STATE_CURRENT 0x012f001e
;
#line 555 "D:/SE1_GPL/Sources/EntitiesMP/Headman.es"
ShootProjectile  (PRT_HEADMAN_FIRECRACKER  , FLOAT3D (0.0f , 0.5f , 0.0f) , ANGLE3D (- 16.0f , 0 , 0));
#line 557 "D:/SE1_GPL/Sources/EntitiesMP/Headman.es"
SetTimerAfter(0.05f);
Jump(STATE_CURRENT, 0x012f001f, FALSE, EBegin());return TRUE;}BOOL CHeadman::H0x012f001f_FirecrackerAttack_07(const CEntityEvent &__eeInput) {
#undef STATE_CURRENT
#define STATE_CURRENT 0x012f001f
switch(__eeInput.ee_slEvent) {case EVENTCODE_EBegin: return TRUE;case EVENTCODE_ETimer: Jump(STATE_CURRENT,0x012f0020, FALSE, EInternal()); return TRUE;default: return FALSE; }}BOOL CHeadman::H0x012f0020_FirecrackerAttack_08(const CEntityEvent &__eeInput){
ASSERT(__eeInput.ee_slEvent==EVENTCODE_EInternal);
#undef STATE_CURRENT
#define STATE_CURRENT 0x012f0020
;
#line 558 "D:/SE1_GPL/Sources/EntitiesMP/Headman.es"
ShootProjectile  (PRT_HEADMAN_FIRECRACKER  , FLOAT3D (0.0f , 0.5f , 0.0f) , ANGLE3D (- 8 , 0 , 0));
#line 560 "D:/SE1_GPL/Sources/EntitiesMP/Headman.es"
SetTimerAfter(0.05f);
Jump(STATE_CURRENT, 0x012f0021, FALSE, EBegin());return TRUE;}BOOL CHeadman::H0x012f0021_FirecrackerAttack_09(const CEntityEvent &__eeInput) {
#undef STATE_CURRENT
#define STATE_CURRENT 0x012f0021
switch(__eeInput.ee_slEvent) {case EVENTCODE_EBegin: return TRUE;case EVENTCODE_ETimer: Jump(STATE_CURRENT,0x012f0022, FALSE, EInternal()); return TRUE;default: return FALSE; }}BOOL CHeadman::H0x012f0022_FirecrackerAttack_10(const CEntityEvent &__eeInput){
ASSERT(__eeInput.ee_slEvent==EVENTCODE_EInternal);
#undef STATE_CURRENT
#define STATE_CURRENT 0x012f0022
;
#line 561 "D:/SE1_GPL/Sources/EntitiesMP/Headman.es"
ShootProjectile  (PRT_HEADMAN_FIRECRACKER  , FLOAT3D (0.0f , 0.5f , 0.0f) , ANGLE3D (0.0f , 0 , 0));
#line 563 "D:/SE1_GPL/Sources/EntitiesMP/Headman.es"
SetTimerAfter(0.05f);
Jump(STATE_CURRENT, 0x012f0023, FALSE, EBegin());return TRUE;}BOOL CHeadman::H0x012f0023_FirecrackerAttack_11(const CEntityEvent &__eeInput) {
#undef STATE_CURRENT
#define STATE_CURRENT 0x012f0023
switch(__eeInput.ee_slEvent) {case EVENTCODE_EBegin: return TRUE;case EVENTCODE_ETimer: Jump(STATE_CURRENT,0x012f0024, FALSE, EInternal()); return TRUE;default: return FALSE; }}BOOL CHeadman::H0x012f0024_FirecrackerAttack_12(const CEntityEvent &__eeInput){
ASSERT(__eeInput.ee_slEvent==EVENTCODE_EInternal);
#undef STATE_CURRENT
#define STATE_CURRENT 0x012f0024
;
#line 564 "D:/SE1_GPL/Sources/EntitiesMP/Headman.es"
ShootProjectile  (PRT_HEADMAN_FIRECRACKER  , FLOAT3D (0.0f , 0.5f , 0.0f) , ANGLE3D (8.0f , 0 , 0));
#line 566 "D:/SE1_GPL/Sources/EntitiesMP/Headman.es"
SetTimerAfter(0.05f);
Jump(STATE_CURRENT, 0x012f0025, FALSE, EBegin());return TRUE;}BOOL CHeadman::H0x012f0025_FirecrackerAttack_13(const CEntityEvent &__eeInput) {
#undef STATE_CURRENT
#define STATE_CURRENT 0x012f0025
switch(__eeInput.ee_slEvent) {case EVENTCODE_EBegin: return TRUE;case EVENTCODE_ETimer: Jump(STATE_CURRENT,0x012f0026, FALSE, EInternal()); return TRUE;default: return FALSE; }}BOOL CHeadman::H0x012f0026_FirecrackerAttack_14(const CEntityEvent &__eeInput){
ASSERT(__eeInput.ee_slEvent==EVENTCODE_EInternal);
#undef STATE_CURRENT
#define STATE_CURRENT 0x012f0026
;
#line 567 "D:/SE1_GPL/Sources/EntitiesMP/Headman.es"
ShootProjectile  (PRT_HEADMAN_FIRECRACKER  , FLOAT3D (0.0f , 0.5f , 0.0f) , ANGLE3D (16.0f , 0 , 0));
#line 569 "D:/SE1_GPL/Sources/EntitiesMP/Headman.es"
SetTimerAfter(0.5f + FRnd  () / 3);
Jump(STATE_CURRENT, 0x012f0027, FALSE, EBegin());return TRUE;}BOOL CHeadman::H0x012f0027_FirecrackerAttack_15(const CEntityEvent &__eeInput) {
#undef STATE_CURRENT
#define STATE_CURRENT 0x012f0027
switch(__eeInput.ee_slEvent) {case EVENTCODE_EBegin: return TRUE;case EVENTCODE_ETimer: Jump(STATE_CURRENT,0x012f0028, FALSE, EInternal()); return TRUE;default: return FALSE; }}BOOL CHeadman::H0x012f0028_FirecrackerAttack_16(const CEntityEvent &__eeInput){
ASSERT(__eeInput.ee_slEvent==EVENTCODE_EInternal);
#undef STATE_CURRENT
#define STATE_CURRENT 0x012f0028
;
#line 570 "D:/SE1_GPL/Sources/EntitiesMP/Headman.es"
Return(STATE_CURRENT,EEnd  ());
#line 570 "D:/SE1_GPL/Sources/EntitiesMP/Headman.es"
return TRUE; ASSERT(FALSE); return TRUE;};BOOL CHeadman::
#line 574 "D:/SE1_GPL/Sources/EntitiesMP/Headman.es"
RocketmanAttack(const CEntityEvent &__eeInput) {
#undef STATE_CURRENT
#define STATE_CURRENT STATE_CHeadman_RocketmanAttack
  ASSERTMSG(__eeInput.ee_slEvent==EVENTCODE_EVoid, "CHeadman::RocketmanAttack expects 'EVoid' as input!");  const EVoid &e = (const EVoid &)__eeInput;
#line 575 "D:/SE1_GPL/Sources/EntitiesMP/Headman.es"
StandingAnimFight  ();
#line 576 "D:/SE1_GPL/Sources/EntitiesMP/Headman.es"
SetTimerAfter(0.2f + FRnd  () / 4);
Jump(STATE_CURRENT, 0x012f002a, FALSE, EBegin());return TRUE;}BOOL CHeadman::H0x012f002a_RocketmanAttack_01(const CEntityEvent &__eeInput) {
#undef STATE_CURRENT
#define STATE_CURRENT 0x012f002a
switch(__eeInput.ee_slEvent) {case EVENTCODE_EBegin: return TRUE;case EVENTCODE_ETimer: Jump(STATE_CURRENT,0x012f002b, FALSE, EInternal()); return TRUE;default: return FALSE; }}BOOL CHeadman::H0x012f002b_RocketmanAttack_02(const CEntityEvent &__eeInput){
ASSERT(__eeInput.ee_slEvent==EVENTCODE_EInternal);
#undef STATE_CURRENT
#define STATE_CURRENT 0x012f002b
;
#line 578 "D:/SE1_GPL/Sources/EntitiesMP/Headman.es"
StartModelAnim  (HEADMAN_ANIM_ROCKETMAN_ATTACK  , 0);
#line 579 "D:/SE1_GPL/Sources/EntitiesMP/Headman.es"
ShootProjectile  (PRT_HEADMAN_ROCKETMAN  , FLOAT3D (0.0f , 1.0f , 0.0f) , ANGLE3D (0 , 0 , 0));
#line 580 "D:/SE1_GPL/Sources/EntitiesMP/Headman.es"
PlaySound  (m_soSound  , SOUND_FIREROCKETMAN  , SOF_3D );
#line 582 "D:/SE1_GPL/Sources/EntitiesMP/Headman.es"
SetTimerAfter(1.0f + FRnd  () / 3);
Jump(STATE_CURRENT, 0x012f002c, FALSE, EBegin());return TRUE;}BOOL CHeadman::H0x012f002c_RocketmanAttack_03(const CEntityEvent &__eeInput) {
#undef STATE_CURRENT
#define STATE_CURRENT 0x012f002c
switch(__eeInput.ee_slEvent) {case EVENTCODE_EBegin: return TRUE;case EVENTCODE_ETimer: Jump(STATE_CURRENT,0x012f002d, FALSE, EInternal()); return TRUE;default: return FALSE; }}BOOL CHeadman::H0x012f002d_RocketmanAttack_04(const CEntityEvent &__eeInput){
ASSERT(__eeInput.ee_slEvent==EVENTCODE_EInternal);
#undef STATE_CURRENT
#define STATE_CURRENT 0x012f002d
;
#line 583 "D:/SE1_GPL/Sources/EntitiesMP/Headman.es"
Return(STATE_CURRENT,EEnd  ());
#line 583 "D:/SE1_GPL/Sources/EntitiesMP/Headman.es"
return TRUE; ASSERT(FALSE); return TRUE;};BOOL CHeadman::
#line 591 "D:/SE1_GPL/Sources/EntitiesMP/Headman.es"
Death(const CEntityEvent &__eeInput) {
#undef STATE_CURRENT
#define STATE_CURRENT STATE_CHeadman_Death
  ASSERTMSG(__eeInput.ee_slEvent==EVENTCODE_EVoid, "CHeadman::Death expects 'EVoid' as input!");  const EVoid &e = (const EVoid &)__eeInput;
#line 595 "D:/SE1_GPL/Sources/EntitiesMP/Headman.es"
if(m_hdtType  == HDT_KAMIKAZE ){
#line 596 "D:/SE1_GPL/Sources/EntitiesMP/Headman.es"
KamikazeSoundOff  ();
#line 597 "D:/SE1_GPL/Sources/EntitiesMP/Headman.es"
}
#line 599 "D:/SE1_GPL/Sources/EntitiesMP/Headman.es"
STATE_CEnemyBase_Death, FALSE;
Jump(STATE_CURRENT, 0x012f002f, FALSE, EBegin());return TRUE;}BOOL CHeadman::H0x012f002f_Death_01(const CEntityEvent &__eeInput) {
#undef STATE_CURRENT
#define STATE_CURRENT 0x012f002f
switch(__eeInput.ee_slEvent) {case EVENTCODE_EBegin: Call(STATE_CURRENT, STATE_CEnemyBase_Death, FALSE, EVoid());return TRUE;case EVENTCODE_EEnd: Jump(STATE_CURRENT,0x012f0030, FALSE, __eeInput); return TRUE;default: return FALSE; }}BOOL CHeadman::H0x012f0030_Death_02(const CEntityEvent &__eeInput){
#undef STATE_CURRENT
#define STATE_CURRENT 0x012f0030
const EEnd&__e= (EEnd&)__eeInput;
;
#line 601 "D:/SE1_GPL/Sources/EntitiesMP/Headman.es"
if(m_hdtType  == HDT_BOMBERMAN ){
#line 602 "D:/SE1_GPL/Sources/EntitiesMP/Headman.es"
Explode  ();
#line 603 "D:/SE1_GPL/Sources/EntitiesMP/Headman.es"
}
#line 604 "D:/SE1_GPL/Sources/EntitiesMP/Headman.es"
Return(STATE_CURRENT,EEnd  ());
#line 604 "D:/SE1_GPL/Sources/EntitiesMP/Headman.es"
return TRUE; ASSERT(FALSE); return TRUE;};BOOL CHeadman::
#line 612 "D:/SE1_GPL/Sources/EntitiesMP/Headman.es"
Main(const CEntityEvent &__eeInput) {
#undef STATE_CURRENT
#define STATE_CURRENT STATE_CHeadman_Main
  ASSERTMSG(__eeInput.ee_slEvent==EVENTCODE_EVoid, "CHeadman::Main expects 'EVoid' as input!");  const EVoid &e = (const EVoid &)__eeInput;
#line 614 "D:/SE1_GPL/Sources/EntitiesMP/Headman.es"
InitAsModel  ();
#line 615 "D:/SE1_GPL/Sources/EntitiesMP/Headman.es"
SetPhysicsFlags  (EPF_MODEL_WALKING  | EPF_HASLUNGS );
#line 616 "D:/SE1_GPL/Sources/EntitiesMP/Headman.es"
SetCollisionFlags  (ECF_MODEL );
#line 617 "D:/SE1_GPL/Sources/EntitiesMP/Headman.es"
SetFlags  (GetFlags  () | ENF_ALIVE );
#line 618 "D:/SE1_GPL/Sources/EntitiesMP/Headman.es"
SetHealth  (19.5f);
#line 619 "D:/SE1_GPL/Sources/EntitiesMP/Headman.es"
m_fMaxHealth  = 19.5f;
#line 620 "D:/SE1_GPL/Sources/EntitiesMP/Headman.es"
en_tmMaxHoldBreath  = 5.0f;
#line 621 "D:/SE1_GPL/Sources/EntitiesMP/Headman.es"
en_fDensity  = 2000.0f;
#line 622 "D:/SE1_GPL/Sources/EntitiesMP/Headman.es"
m_fBlowUpSize  = 2.0f;
#line 625 "D:/SE1_GPL/Sources/EntitiesMP/Headman.es"
SetModel  (MODEL_HEADMAN );
#line 626 "D:/SE1_GPL/Sources/EntitiesMP/Headman.es"
switch(m_hdtType ){
#line 627 "D:/SE1_GPL/Sources/EntitiesMP/Headman.es"
case HDT_FIRECRACKER : 
#line 629 "D:/SE1_GPL/Sources/EntitiesMP/Headman.es"
SetModelMainTexture  (TEXTURE_FIRECRACKER );
#line 630 "D:/SE1_GPL/Sources/EntitiesMP/Headman.es"
AddAttachment  (HEADMAN_ATTACHMENT_HEAD  , MODEL_FIRECRACKERHEAD  , TEXTURE_FIRECRACKERHEAD );
#line 631 "D:/SE1_GPL/Sources/EntitiesMP/Headman.es"
AddAttachment  (HEADMAN_ATTACHMENT_CHAINSAW  , MODEL_CHAINSAW  , TEXTURE_CHAINSAW );
#line 633 "D:/SE1_GPL/Sources/EntitiesMP/Headman.es"
m_fWalkSpeed  = FRnd  () + 1.5f;
#line 634 "D:/SE1_GPL/Sources/EntitiesMP/Headman.es"
m_aWalkRotateSpeed  = AngleDeg  (FRnd  () * 10.0f + 500.0f);
#line 635 "D:/SE1_GPL/Sources/EntitiesMP/Headman.es"
m_fAttackRunSpeed  = FRnd  () + 5.0f;
#line 636 "D:/SE1_GPL/Sources/EntitiesMP/Headman.es"
m_aAttackRotateSpeed  = AngleDeg  (FRnd  () * 50 + 245.0f);
#line 637 "D:/SE1_GPL/Sources/EntitiesMP/Headman.es"
m_fCloseRunSpeed  = FRnd  () + 5.0f;
#line 638 "D:/SE1_GPL/Sources/EntitiesMP/Headman.es"
m_aCloseRotateSpeed  = AngleDeg  (FRnd  () * 50 + 245.0f);
#line 640 "D:/SE1_GPL/Sources/EntitiesMP/Headman.es"
m_fAttackDistance  = 50.0f;
#line 641 "D:/SE1_GPL/Sources/EntitiesMP/Headman.es"
m_fCloseDistance  = 0.0f;
#line 642 "D:/SE1_GPL/Sources/EntitiesMP/Headman.es"
m_fStopDistance  = 8.0f;
#line 643 "D:/SE1_GPL/Sources/EntitiesMP/Headman.es"
m_fAttackFireTime  = 2.0f;
#line 644 "D:/SE1_GPL/Sources/EntitiesMP/Headman.es"
m_fCloseFireTime  = 1.0f;
#line 645 "D:/SE1_GPL/Sources/EntitiesMP/Headman.es"
m_fIgnoreRange  = 200.0f;
#line 647 "D:/SE1_GPL/Sources/EntitiesMP/Headman.es"
m_fBlowUpAmount  = 65.0f;
#line 648 "D:/SE1_GPL/Sources/EntitiesMP/Headman.es"
m_fBodyParts  = 4;
#line 649 "D:/SE1_GPL/Sources/EntitiesMP/Headman.es"
m_fDamageWounded  = 0.0f;
#line 650 "D:/SE1_GPL/Sources/EntitiesMP/Headman.es"
m_iScore  = 200;
#line 651 "D:/SE1_GPL/Sources/EntitiesMP/Headman.es"
break ;
#line 653 "D:/SE1_GPL/Sources/EntitiesMP/Headman.es"
case HDT_ROCKETMAN : 
#line 655 "D:/SE1_GPL/Sources/EntitiesMP/Headman.es"
SetModelMainTexture  (TEXTURE_ROCKETMAN );
#line 656 "D:/SE1_GPL/Sources/EntitiesMP/Headman.es"
AddAttachment  (HEADMAN_ATTACHMENT_HEAD  , MODEL_HEAD  , TEXTURE_HEAD );
#line 657 "D:/SE1_GPL/Sources/EntitiesMP/Headman.es"
AddAttachment  (HEADMAN_ATTACHMENT_ROCKET_LAUNCHER  , MODEL_ROCKETLAUNCHER  , TEXTURE_ROCKETLAUNCHER );
#line 659 "D:/SE1_GPL/Sources/EntitiesMP/Headman.es"
m_fWalkSpeed  = FRnd  () + 1.5f;
#line 660 "D:/SE1_GPL/Sources/EntitiesMP/Headman.es"
m_aWalkRotateSpeed  = AngleDeg  (FRnd  () * 10.0f + 500.0f);
#line 661 "D:/SE1_GPL/Sources/EntitiesMP/Headman.es"
m_fAttackRunSpeed  = FRnd  () * 2.0f + 6.0f;
#line 662 "D:/SE1_GPL/Sources/EntitiesMP/Headman.es"
m_aAttackRotateSpeed  = AngleDeg  (FRnd  () * 50 + 245.0f);
#line 663 "D:/SE1_GPL/Sources/EntitiesMP/Headman.es"
m_fCloseRunSpeed  = FRnd  () * 2.0f + 6.0f;
#line 664 "D:/SE1_GPL/Sources/EntitiesMP/Headman.es"
m_aCloseRotateSpeed  = AngleDeg  (FRnd  () * 50 + 245.0f);
#line 666 "D:/SE1_GPL/Sources/EntitiesMP/Headman.es"
m_fAttackDistance  = 50.0f;
#line 667 "D:/SE1_GPL/Sources/EntitiesMP/Headman.es"
m_fCloseDistance  = 0.0f;
#line 668 "D:/SE1_GPL/Sources/EntitiesMP/Headman.es"
m_fStopDistance  = 8.0f;
#line 669 "D:/SE1_GPL/Sources/EntitiesMP/Headman.es"
m_fAttackFireTime  = 2.0f;
#line 670 "D:/SE1_GPL/Sources/EntitiesMP/Headman.es"
m_fCloseFireTime  = 1.0f;
#line 671 "D:/SE1_GPL/Sources/EntitiesMP/Headman.es"
m_fIgnoreRange  = 200.0f;
#line 673 "D:/SE1_GPL/Sources/EntitiesMP/Headman.es"
m_fBlowUpAmount  = 65.0f;
#line 674 "D:/SE1_GPL/Sources/EntitiesMP/Headman.es"
m_fBodyParts  = 4;
#line 675 "D:/SE1_GPL/Sources/EntitiesMP/Headman.es"
m_fDamageWounded  = 0.0f;
#line 676 "D:/SE1_GPL/Sources/EntitiesMP/Headman.es"
m_iScore  = 100;
#line 677 "D:/SE1_GPL/Sources/EntitiesMP/Headman.es"
break ;
#line 679 "D:/SE1_GPL/Sources/EntitiesMP/Headman.es"
case HDT_BOMBERMAN : 
#line 681 "D:/SE1_GPL/Sources/EntitiesMP/Headman.es"
SetModelMainTexture  (TEXTURE_BOMBERMAN );
#line 682 "D:/SE1_GPL/Sources/EntitiesMP/Headman.es"
AddAttachment  (HEADMAN_ATTACHMENT_HEAD  , MODEL_HEAD  , TEXTURE_HEAD );
#line 684 "D:/SE1_GPL/Sources/EntitiesMP/Headman.es"
m_fWalkSpeed  = FRnd  () + 1.5f;
#line 685 "D:/SE1_GPL/Sources/EntitiesMP/Headman.es"
m_aWalkRotateSpeed  = AngleDeg  (FRnd  () * 10.0f + 500.0f);
#line 686 "D:/SE1_GPL/Sources/EntitiesMP/Headman.es"
m_fAttackRunSpeed  = FRnd  () + 4.0f;
#line 687 "D:/SE1_GPL/Sources/EntitiesMP/Headman.es"
m_aAttackRotateSpeed  = AngleDeg  (FRnd  () * 50 + 245.0f);
#line 688 "D:/SE1_GPL/Sources/EntitiesMP/Headman.es"
m_fCloseRunSpeed  = FRnd  () + 4.0f;
#line 689 "D:/SE1_GPL/Sources/EntitiesMP/Headman.es"
m_aCloseRotateSpeed  = AngleDeg  (FRnd  () * 50 + 245.0f);
#line 691 "D:/SE1_GPL/Sources/EntitiesMP/Headman.es"
m_fAttackDistance  = 45.0f;
#line 692 "D:/SE1_GPL/Sources/EntitiesMP/Headman.es"
m_fCloseDistance  = 0.0f;
#line 693 "D:/SE1_GPL/Sources/EntitiesMP/Headman.es"
m_fStopDistance  = 20.0f;
#line 694 "D:/SE1_GPL/Sources/EntitiesMP/Headman.es"
m_fAttackFireTime  = 2.0f;
#line 695 "D:/SE1_GPL/Sources/EntitiesMP/Headman.es"
m_fCloseFireTime  = 1.5f;
#line 696 "D:/SE1_GPL/Sources/EntitiesMP/Headman.es"
m_fIgnoreRange  = 150.0f;
#line 698 "D:/SE1_GPL/Sources/EntitiesMP/Headman.es"
m_fBlowUpAmount  = 65.0f;
#line 699 "D:/SE1_GPL/Sources/EntitiesMP/Headman.es"
m_fBodyParts  = 4;
#line 700 "D:/SE1_GPL/Sources/EntitiesMP/Headman.es"
m_fDamageWounded  = 0.0f;
#line 701 "D:/SE1_GPL/Sources/EntitiesMP/Headman.es"
m_iScore  = 500;
#line 702 "D:/SE1_GPL/Sources/EntitiesMP/Headman.es"
break ;
#line 704 "D:/SE1_GPL/Sources/EntitiesMP/Headman.es"
case HDT_KAMIKAZE : 
#line 706 "D:/SE1_GPL/Sources/EntitiesMP/Headman.es"
SetModelMainTexture  (TEXTURE_KAMIKAZE );
#line 707 "D:/SE1_GPL/Sources/EntitiesMP/Headman.es"
AddAttachment  (HEADMAN_ATTACHMENT_BOMB_RIGHT_HAND  , MODEL_BOMB  , TEXTURE_BOMB );
#line 708 "D:/SE1_GPL/Sources/EntitiesMP/Headman.es"
AddAttachment  (HEADMAN_ATTACHMENT_BOMB_LEFT_HAND  , MODEL_BOMB  , TEXTURE_BOMB );
#line 710 "D:/SE1_GPL/Sources/EntitiesMP/Headman.es"
m_fWalkSpeed  = FRnd  () + 1.5f;
#line 711 "D:/SE1_GPL/Sources/EntitiesMP/Headman.es"
m_aWalkRotateSpeed  = AngleDeg  (FRnd  () * 10.0f + 500.0f);
#line 712 "D:/SE1_GPL/Sources/EntitiesMP/Headman.es"
m_fAttackRunSpeed  = FRnd  () * 2.0f + 10.0f;
#line 713 "D:/SE1_GPL/Sources/EntitiesMP/Headman.es"
m_aAttackRotateSpeed  = AngleDeg  (FRnd  () * 100 + 600.0f);
#line 714 "D:/SE1_GPL/Sources/EntitiesMP/Headman.es"
m_fCloseRunSpeed  = FRnd  () * 2.0f + 10.0f;
#line 715 "D:/SE1_GPL/Sources/EntitiesMP/Headman.es"
m_aCloseRotateSpeed  = AngleDeg  (FRnd  () * 100 + 600.0f);
#line 717 "D:/SE1_GPL/Sources/EntitiesMP/Headman.es"
m_fAttackDistance  = 50.0f;
#line 718 "D:/SE1_GPL/Sources/EntitiesMP/Headman.es"
m_fCloseDistance  = 10.0f;
#line 719 "D:/SE1_GPL/Sources/EntitiesMP/Headman.es"
m_fStopDistance  = 0.0f;
#line 720 "D:/SE1_GPL/Sources/EntitiesMP/Headman.es"
m_fAttackFireTime  = 2.0f;
#line 721 "D:/SE1_GPL/Sources/EntitiesMP/Headman.es"
m_fCloseFireTime  = 0.5f;
#line 722 "D:/SE1_GPL/Sources/EntitiesMP/Headman.es"
m_fIgnoreRange  = 250.0f;
#line 724 "D:/SE1_GPL/Sources/EntitiesMP/Headman.es"
m_fBlowUpAmount  = 0.0f;
#line 725 "D:/SE1_GPL/Sources/EntitiesMP/Headman.es"
m_fBodyParts  = 4;
#line 726 "D:/SE1_GPL/Sources/EntitiesMP/Headman.es"
m_fDamageWounded  = 0.0f;
#line 727 "D:/SE1_GPL/Sources/EntitiesMP/Headman.es"
m_iScore  = 2500;
#line 728 "D:/SE1_GPL/Sources/EntitiesMP/Headman.es"
break ;
#line 729 "D:/SE1_GPL/Sources/EntitiesMP/Headman.es"
}
#line 732 "D:/SE1_GPL/Sources/EntitiesMP/Headman.es"
GetModelObject  () -> StretchModel  (FLOAT3D (1.25f , 1.25f , 1.25f));
#line 733 "D:/SE1_GPL/Sources/EntitiesMP/Headman.es"
ModelChangeNotify  ();
#line 734 "D:/SE1_GPL/Sources/EntitiesMP/Headman.es"
StandingAnim  ();
#line 737 "D:/SE1_GPL/Sources/EntitiesMP/Headman.es"
Jump(STATE_CURRENT, STATE_CEnemyBase_MainLoop, FALSE, EVoid());return TRUE; ASSERT(FALSE); return TRUE;};