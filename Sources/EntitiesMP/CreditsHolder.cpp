/*
 * This file is generated by Entity Class Compiler, (c) CroTeam 1997-98
 */

#line 4 "D:/SE1_GPL/Sources/EntitiesMP/CreditsHolder.es"

#include "StdH.h"
#include "EntitiesMP/WorldSettingsController.h"
#include "EntitiesMP/BackgroundViewer.h"

#include <EntitiesMP/CreditsHolder.h>
#include <EntitiesMP/CreditsHolder_tables.h>
#line 10 "D:/SE1_GPL/Sources/EntitiesMP/CreditsHolder.es"


#define CTA_LEFT 1
#define CTA_RIGHT 2
#define CTA_CENTER 3

class CCreditEntry {
public:
  CTString strTitle;
  CTString strName;
  CTString strQuote;
  INDEX    iAlign;
  INDEX    iX, iY;
  FLOAT    fRelSize;
  FLOAT    fWait;
};
  
static CStaticStackArray<CCreditEntry> _acceEntries;
#define BLANK_TIME 1.0f

void CCreditsHolder::SetDefaultProperties(void) {
  m_strName = "Credits holder";
  m_strDescription = "";
  m_fnmMessage = CTString("");
  m_fMyTimer = 0.0f;
  m_fMyTimerLast = 0.0f;
  m_iTotalEntries = 0;
  m_bEnd = FALSE ;
  m_penEndCreditsTrigger = NULL;
  m_bDataError = FALSE ;
  CRationalEntity::SetDefaultProperties();
}
  
#line 59 "D:/SE1_GPL/Sources/EntitiesMP/CreditsHolder.es"
const CTString & CCreditsHolder::GetDescription(void)const {
#line 60 "D:/SE1_GPL/Sources/EntitiesMP/CreditsHolder.es"
((CTString &) m_strDescription ) . PrintF  ("%s" , m_fnmMessage  . FileName  ());
#line 61 "D:/SE1_GPL/Sources/EntitiesMP/CreditsHolder.es"
return m_strDescription ;
#line 62 "D:/SE1_GPL/Sources/EntitiesMP/CreditsHolder.es"
}
   CCreditsHolder::CCreditsHolder(void) 
#line 65 "D:/SE1_GPL/Sources/EntitiesMP/CreditsHolder.es"
{
#line 66 "D:/SE1_GPL/Sources/EntitiesMP/CreditsHolder.es"
bDataLoaded  = FALSE ;
#line 67 "D:/SE1_GPL/Sources/EntitiesMP/CreditsHolder.es"
}
  
#line 69 "D:/SE1_GPL/Sources/EntitiesMP/CreditsHolder.es"
BOOL CCreditsHolder::ReloadData(void) 
#line 70 "D:/SE1_GPL/Sources/EntitiesMP/CreditsHolder.es"
{
#line 71 "D:/SE1_GPL/Sources/EntitiesMP/CreditsHolder.es"
m_bDataError  = FALSE ;
#line 72 "D:/SE1_GPL/Sources/EntitiesMP/CreditsHolder.es"
if(! Credits_On  (m_fnmMessage ))
#line 73 "D:/SE1_GPL/Sources/EntitiesMP/CreditsHolder.es"
{
#line 74 "D:/SE1_GPL/Sources/EntitiesMP/CreditsHolder.es"
Credits_Off  ();
#line 75 "D:/SE1_GPL/Sources/EntitiesMP/CreditsHolder.es"
return FALSE ;
#line 76 "D:/SE1_GPL/Sources/EntitiesMP/CreditsHolder.es"
}
#line 77 "D:/SE1_GPL/Sources/EntitiesMP/CreditsHolder.es"
if(! LoadFont  ())
#line 78 "D:/SE1_GPL/Sources/EntitiesMP/CreditsHolder.es"
{
#line 79 "D:/SE1_GPL/Sources/EntitiesMP/CreditsHolder.es"
Credits_Off  ();
#line 80 "D:/SE1_GPL/Sources/EntitiesMP/CreditsHolder.es"
return FALSE ;
#line 81 "D:/SE1_GPL/Sources/EntitiesMP/CreditsHolder.es"
}
#line 82 "D:/SE1_GPL/Sources/EntitiesMP/CreditsHolder.es"
return TRUE ;
#line 83 "D:/SE1_GPL/Sources/EntitiesMP/CreditsHolder.es"
}
  
#line 86 "D:/SE1_GPL/Sources/EntitiesMP/CreditsHolder.es"
BOOL CCreditsHolder::LoadOneFile(const CTFileName & fnm) 
#line 87 "D:/SE1_GPL/Sources/EntitiesMP/CreditsHolder.es"
{
#line 88 "D:/SE1_GPL/Sources/EntitiesMP/CreditsHolder.es"
if(fnm  == ""){return FALSE ;}
#line 90 "D:/SE1_GPL/Sources/EntitiesMP/CreditsHolder.es"
try 
#line 91 "D:/SE1_GPL/Sources/EntitiesMP/CreditsHolder.es"
{
#line 93 "D:/SE1_GPL/Sources/EntitiesMP/CreditsHolder.es"
CTFileStream  strm ;
#line 94 "D:/SE1_GPL/Sources/EntitiesMP/CreditsHolder.es"
strm  . Open_t  (fnm );
#line 96 "D:/SE1_GPL/Sources/EntitiesMP/CreditsHolder.es"
CTString strCheck ;
#line 97 "D:/SE1_GPL/Sources/EntitiesMP/CreditsHolder.es"
strm  . GetLine_t  (strCheck );
#line 98 "D:/SE1_GPL/Sources/EntitiesMP/CreditsHolder.es"
strCheck  . TrimSpacesRight  ();
#line 99 "D:/SE1_GPL/Sources/EntitiesMP/CreditsHolder.es"
if(strCheck  != "CREDITS"){return FALSE ;};
#line 101 "D:/SE1_GPL/Sources/EntitiesMP/CreditsHolder.es"
m_iTotalEntries  = 0;
#line 102 "D:/SE1_GPL/Sources/EntitiesMP/CreditsHolder.es"
while(! strm  . AtEOF  ())
#line 103 "D:/SE1_GPL/Sources/EntitiesMP/CreditsHolder.es"
{
#line 104 "D:/SE1_GPL/Sources/EntitiesMP/CreditsHolder.es"
CTString strLine ;
#line 105 "D:/SE1_GPL/Sources/EntitiesMP/CreditsHolder.es"
CTString strArgs ;
#line 106 "D:/SE1_GPL/Sources/EntitiesMP/CreditsHolder.es"
CTString strTmp ;
#line 107 "D:/SE1_GPL/Sources/EntitiesMP/CreditsHolder.es"
CCreditEntry  cceEntry ;
#line 109 "D:/SE1_GPL/Sources/EntitiesMP/CreditsHolder.es"
strm  . GetLine_t  (strLine );
#line 110 "D:/SE1_GPL/Sources/EntitiesMP/CreditsHolder.es"
strm  . GetLine_t  (strLine );
#line 111 "D:/SE1_GPL/Sources/EntitiesMP/CreditsHolder.es"
strLine  . TrimSpacesRight  ();
#line 112 "D:/SE1_GPL/Sources/EntitiesMP/CreditsHolder.es"
if(strLine  == "END"){
#line 113 "D:/SE1_GPL/Sources/EntitiesMP/CreditsHolder.es"
strm  . Close  ();
#line 114 "D:/SE1_GPL/Sources/EntitiesMP/CreditsHolder.es"
return TRUE ;
#line 115 "D:/SE1_GPL/Sources/EntitiesMP/CreditsHolder.es"
}else if(strLine  != "ENTRY"){
#line 116 "D:/SE1_GPL/Sources/EntitiesMP/CreditsHolder.es"
_acceEntries  . PopAll  ();
#line 117 "D:/SE1_GPL/Sources/EntitiesMP/CreditsHolder.es"
return FALSE ;
#line 118 "D:/SE1_GPL/Sources/EntitiesMP/CreditsHolder.es"
}
#line 119 "D:/SE1_GPL/Sources/EntitiesMP/CreditsHolder.es"
strm  . GetLine_t  (strArgs );
#line 120 "D:/SE1_GPL/Sources/EntitiesMP/CreditsHolder.es"
strArgs  . ScanF  ("%d,%d" , & cceEntry  . iX  , & cceEntry  . iY );
#line 121 "D:/SE1_GPL/Sources/EntitiesMP/CreditsHolder.es"
strm  . GetLine_t  (strArgs );
#line 122 "D:/SE1_GPL/Sources/EntitiesMP/CreditsHolder.es"
strArgs  . ScanF  ("%f" , & cceEntry  . fRelSize );
#line 123 "D:/SE1_GPL/Sources/EntitiesMP/CreditsHolder.es"
strm  . GetLine_t  (strArgs );
#line 124 "D:/SE1_GPL/Sources/EntitiesMP/CreditsHolder.es"
strArgs  . TrimSpacesRight  ();
#line 125 "D:/SE1_GPL/Sources/EntitiesMP/CreditsHolder.es"
if(strArgs  == "CENTER"){cceEntry  . iAlign  = CTA_CENTER ;}
#line 126 "D:/SE1_GPL/Sources/EntitiesMP/CreditsHolder.es"
else if(strArgs  == "RIGHT"){cceEntry  . iAlign  = CTA_RIGHT ;}
#line 127 "D:/SE1_GPL/Sources/EntitiesMP/CreditsHolder.es"
else if(TRUE ){cceEntry  . iAlign  = CTA_LEFT ;}
#line 128 "D:/SE1_GPL/Sources/EntitiesMP/CreditsHolder.es"
strm  . GetLine_t  (cceEntry  . strTitle );
#line 129 "D:/SE1_GPL/Sources/EntitiesMP/CreditsHolder.es"
strm  . GetLine_t  (cceEntry  . strName );
#line 130 "D:/SE1_GPL/Sources/EntitiesMP/CreditsHolder.es"
strm  . GetLine_t  (cceEntry  . strQuote );
#line 131 "D:/SE1_GPL/Sources/EntitiesMP/CreditsHolder.es"
strm  . GetLine_t  (strArgs );
#line 132 "D:/SE1_GPL/Sources/EntitiesMP/CreditsHolder.es"
strArgs  . ScanF  ("%f" , & cceEntry  . fWait );
#line 133 "D:/SE1_GPL/Sources/EntitiesMP/CreditsHolder.es"
_acceEntries  . Push  () = cceEntry ;
#line 134 "D:/SE1_GPL/Sources/EntitiesMP/CreditsHolder.es"
m_iTotalEntries  ++;
#line 135 "D:/SE1_GPL/Sources/EntitiesMP/CreditsHolder.es"
}
#line 137 "D:/SE1_GPL/Sources/EntitiesMP/CreditsHolder.es"
strm  . Close  ();
#line 138 "D:/SE1_GPL/Sources/EntitiesMP/CreditsHolder.es"
return TRUE ;
#line 139 "D:/SE1_GPL/Sources/EntitiesMP/CreditsHolder.es"
}
#line 140 "D:/SE1_GPL/Sources/EntitiesMP/CreditsHolder.es"
catch  (char  * strError )
#line 141 "D:/SE1_GPL/Sources/EntitiesMP/CreditsHolder.es"
{
#line 142 "D:/SE1_GPL/Sources/EntitiesMP/CreditsHolder.es"
CPrintF  ("%s\n" , strError );
#line 143 "D:/SE1_GPL/Sources/EntitiesMP/CreditsHolder.es"
return FALSE ;
#line 144 "D:/SE1_GPL/Sources/EntitiesMP/CreditsHolder.es"
}
#line 145 "D:/SE1_GPL/Sources/EntitiesMP/CreditsHolder.es"
}
  
#line 147 "D:/SE1_GPL/Sources/EntitiesMP/CreditsHolder.es"
BOOL CCreditsHolder::LoadFont() 
#line 148 "D:/SE1_GPL/Sources/EntitiesMP/CreditsHolder.es"
{
#line 149 "D:/SE1_GPL/Sources/EntitiesMP/CreditsHolder.es"
try 
#line 150 "D:/SE1_GPL/Sources/EntitiesMP/CreditsHolder.es"
{
#line 151 "D:/SE1_GPL/Sources/EntitiesMP/CreditsHolder.es"
_fdMedium  . Load_t  (CTFILENAME  ("Fonts\\Display3-normal.fnt"));
#line 152 "D:/SE1_GPL/Sources/EntitiesMP/CreditsHolder.es"
}
#line 153 "D:/SE1_GPL/Sources/EntitiesMP/CreditsHolder.es"
catch  (char  * strError )
#line 154 "D:/SE1_GPL/Sources/EntitiesMP/CreditsHolder.es"
{
#line 155 "D:/SE1_GPL/Sources/EntitiesMP/CreditsHolder.es"
CPrintF  ("%s\n" , strError );
#line 156 "D:/SE1_GPL/Sources/EntitiesMP/CreditsHolder.es"
return FALSE ;
#line 157 "D:/SE1_GPL/Sources/EntitiesMP/CreditsHolder.es"
}
#line 158 "D:/SE1_GPL/Sources/EntitiesMP/CreditsHolder.es"
return TRUE ;
#line 159 "D:/SE1_GPL/Sources/EntitiesMP/CreditsHolder.es"
}
  
#line 162 "D:/SE1_GPL/Sources/EntitiesMP/CreditsHolder.es"
BOOL CCreditsHolder::Credits_On(CTFileName fnCreditsText) 
#line 163 "D:/SE1_GPL/Sources/EntitiesMP/CreditsHolder.es"
{
#line 164 "D:/SE1_GPL/Sources/EntitiesMP/CreditsHolder.es"
_acceEntries  . PopAll  ();
#line 165 "D:/SE1_GPL/Sources/EntitiesMP/CreditsHolder.es"
return LoadOneFile  (fnCreditsText );
#line 166 "D:/SE1_GPL/Sources/EntitiesMP/CreditsHolder.es"
}
  
#line 169 "D:/SE1_GPL/Sources/EntitiesMP/CreditsHolder.es"
void CCreditsHolder::Credits_Off(void) 
#line 170 "D:/SE1_GPL/Sources/EntitiesMP/CreditsHolder.es"
{
#line 171 "D:/SE1_GPL/Sources/EntitiesMP/CreditsHolder.es"
_acceEntries  . Clear  ();
#line 172 "D:/SE1_GPL/Sources/EntitiesMP/CreditsHolder.es"
}
  
#line 175 "D:/SE1_GPL/Sources/EntitiesMP/CreditsHolder.es"
FLOAT CCreditsHolder::Credits_Render(CCreditsHolder * penThis,CDrawPort * pdp) 
#line 176 "D:/SE1_GPL/Sources/EntitiesMP/CreditsHolder.es"
{
#line 177 "D:/SE1_GPL/Sources/EntitiesMP/CreditsHolder.es"
if(m_bDataError ){return 0;}
#line 179 "D:/SE1_GPL/Sources/EntitiesMP/CreditsHolder.es"
if(! bDataLoaded ){
#line 180 "D:/SE1_GPL/Sources/EntitiesMP/CreditsHolder.es"
if(! ReloadData  ()){
#line 181 "D:/SE1_GPL/Sources/EntitiesMP/CreditsHolder.es"
m_bDataError  = TRUE ;
#line 182 "D:/SE1_GPL/Sources/EntitiesMP/CreditsHolder.es"
return 0;
#line 183 "D:/SE1_GPL/Sources/EntitiesMP/CreditsHolder.es"
}
#line 184 "D:/SE1_GPL/Sources/EntitiesMP/CreditsHolder.es"
bDataLoaded  = TRUE ;
#line 185 "D:/SE1_GPL/Sources/EntitiesMP/CreditsHolder.es"
return 1;
#line 186 "D:/SE1_GPL/Sources/EntitiesMP/CreditsHolder.es"
}
#line 188 "D:/SE1_GPL/Sources/EntitiesMP/CreditsHolder.es"
PIX  pixW  = 0;
#line 189 "D:/SE1_GPL/Sources/EntitiesMP/CreditsHolder.es"
PIX  pixH  = 0;
#line 191 "D:/SE1_GPL/Sources/EntitiesMP/CreditsHolder.es"
CTString strEmpty ;
#line 193 "D:/SE1_GPL/Sources/EntitiesMP/CreditsHolder.es"
FLOAT fTime  = Lerp  (m_fMyTimerLast  , m_fMyTimer  , _pTimer  -> GetLerpFactor  ());
#line 194 "D:/SE1_GPL/Sources/EntitiesMP/CreditsHolder.es"
CDrawPort  * pdpCurr  = pdp ;
#line 196 "D:/SE1_GPL/Sources/EntitiesMP/CreditsHolder.es"
pdp  -> Unlock  ();
#line 197 "D:/SE1_GPL/Sources/EntitiesMP/CreditsHolder.es"
pdpCurr  -> Lock  ();
#line 199 "D:/SE1_GPL/Sources/EntitiesMP/CreditsHolder.es"
pixW  = pdpCurr  -> GetWidth  ();
#line 200 "D:/SE1_GPL/Sources/EntitiesMP/CreditsHolder.es"
pixH  = pdpCurr  -> GetHeight  ();
#line 202 "D:/SE1_GPL/Sources/EntitiesMP/CreditsHolder.es"
FLOAT fResFactor  = pixH  / 480.0f;
#line 204 "D:/SE1_GPL/Sources/EntitiesMP/CreditsHolder.es"
pdpCurr  -> SetFont  (_pfdDisplayFont );
#line 207 "D:/SE1_GPL/Sources/EntitiesMP/CreditsHolder.es"
BOOL bOver  = FALSE ;
#line 209 "D:/SE1_GPL/Sources/EntitiesMP/CreditsHolder.es"
FLOAT fPassed  = 0.0f;
#line 210 "D:/SE1_GPL/Sources/EntitiesMP/CreditsHolder.es"
FLOAT fStart  = 0.0f;
#line 211 "D:/SE1_GPL/Sources/EntitiesMP/CreditsHolder.es"
INDEX iNextItem  = 0;
#line 213 "D:/SE1_GPL/Sources/EntitiesMP/CreditsHolder.es"
for(INDEX i  = 0;i  < _acceEntries  . Count  ();i  ++){
#line 214 "D:/SE1_GPL/Sources/EntitiesMP/CreditsHolder.es"
if(_acceEntries  [ i  ] . fWait  != 0.0f){
#line 215 "D:/SE1_GPL/Sources/EntitiesMP/CreditsHolder.es"
fPassed  += _acceEntries  [ i  ] . fWait ;
#line 216 "D:/SE1_GPL/Sources/EntitiesMP/CreditsHolder.es"
if(fPassed  > fTime ){
#line 217 "D:/SE1_GPL/Sources/EntitiesMP/CreditsHolder.es"
break ;
#line 218 "D:/SE1_GPL/Sources/EntitiesMP/CreditsHolder.es"
}else {
#line 219 "D:/SE1_GPL/Sources/EntitiesMP/CreditsHolder.es"
iNextItem  = i  + 1;
#line 220 "D:/SE1_GPL/Sources/EntitiesMP/CreditsHolder.es"
fStart  = fPassed ;
#line 221 "D:/SE1_GPL/Sources/EntitiesMP/CreditsHolder.es"
if(iNextItem  >= _acceEntries  . Count  ())
#line 222 "D:/SE1_GPL/Sources/EntitiesMP/CreditsHolder.es"
{
#line 223 "D:/SE1_GPL/Sources/EntitiesMP/CreditsHolder.es"
bOver  = TRUE ;
#line 224 "D:/SE1_GPL/Sources/EntitiesMP/CreditsHolder.es"
}
#line 225 "D:/SE1_GPL/Sources/EntitiesMP/CreditsHolder.es"
}
#line 226 "D:/SE1_GPL/Sources/EntitiesMP/CreditsHolder.es"
}
#line 227 "D:/SE1_GPL/Sources/EntitiesMP/CreditsHolder.es"
}
#line 229 "D:/SE1_GPL/Sources/EntitiesMP/CreditsHolder.es"
if(! bOver ){
#line 230 "D:/SE1_GPL/Sources/EntitiesMP/CreditsHolder.es"
while(TRUE ){
#line 231 "D:/SE1_GPL/Sources/EntitiesMP/CreditsHolder.es"
BOOL bLast  = FALSE ;
#line 232 "D:/SE1_GPL/Sources/EntitiesMP/CreditsHolder.es"
if(_acceEntries  [ iNextItem  ] . fWait  != 0.0f){bLast  = TRUE ;};
#line 233 "D:/SE1_GPL/Sources/EntitiesMP/CreditsHolder.es"
FLOAT fFade  = CalculateRatio  (fTime  , fStart  , fPassed  - BLANK_TIME  , 0.2f , 0.2f);
#line 234 "D:/SE1_GPL/Sources/EntitiesMP/CreditsHolder.es"
pdp  -> SetFont  (_pfdDisplayFont );
#line 235 "D:/SE1_GPL/Sources/EntitiesMP/CreditsHolder.es"
pdp  -> SetTextAspect  (1.0f);
#line 237 "D:/SE1_GPL/Sources/EntitiesMP/CreditsHolder.es"
FLOAT fTextSize01  = 1.2f * _acceEntries  [ iNextItem  ] . fRelSize ;
#line 238 "D:/SE1_GPL/Sources/EntitiesMP/CreditsHolder.es"
FLOAT fTextSize02  = 2.0f * _acceEntries  [ iNextItem  ] . fRelSize ;
#line 239 "D:/SE1_GPL/Sources/EntitiesMP/CreditsHolder.es"
FLOAT fTextSize03  = 0.75f * _acceEntries  [ iNextItem  ] . fRelSize ;
#line 240 "D:/SE1_GPL/Sources/EntitiesMP/CreditsHolder.es"
FLOAT fTextHeight  = 15.0f;
#line 241 "D:/SE1_GPL/Sources/EntitiesMP/CreditsHolder.es"
FLOAT fSpacing01  = 1.2f;
#line 242 "D:/SE1_GPL/Sources/EntitiesMP/CreditsHolder.es"
FLOAT fSpacing02  = 1.1f;
#line 244 "D:/SE1_GPL/Sources/EntitiesMP/CreditsHolder.es"
if(_acceEntries  [ iNextItem  ] . iAlign  == CTA_CENTER ){
#line 245 "D:/SE1_GPL/Sources/EntitiesMP/CreditsHolder.es"
FLOAT fYY  = _acceEntries  [ iNextItem  ] . iY  * fResFactor ;
#line 247 "D:/SE1_GPL/Sources/EntitiesMP/CreditsHolder.es"
pdp  -> SetTextScaling  (fTextSize01  * fResFactor );
#line 248 "D:/SE1_GPL/Sources/EntitiesMP/CreditsHolder.es"
pdp  -> PutTextC  (_acceEntries  [ iNextItem  ] . strTitle  , 
#line 249 "D:/SE1_GPL/Sources/EntitiesMP/CreditsHolder.es"
_acceEntries  [ iNextItem  ] . iX  * fResFactor  , fYY  , 
#line 250 "D:/SE1_GPL/Sources/EntitiesMP/CreditsHolder.es"
C_WHITE  | (INDEX) (fFade  * 255));
#line 251 "D:/SE1_GPL/Sources/EntitiesMP/CreditsHolder.es"
fYY  += fTextSize01  * fResFactor  * fTextHeight  * fSpacing01 ;
#line 253 "D:/SE1_GPL/Sources/EntitiesMP/CreditsHolder.es"
pdp  -> SetFont  (& _fdMedium );
#line 254 "D:/SE1_GPL/Sources/EntitiesMP/CreditsHolder.es"
pdp  -> SetTextScaling  (fTextSize02  * fResFactor );
#line 255 "D:/SE1_GPL/Sources/EntitiesMP/CreditsHolder.es"
pdp  -> PutTextC  (_acceEntries  [ iNextItem  ] . strName  , 
#line 256 "D:/SE1_GPL/Sources/EntitiesMP/CreditsHolder.es"
_acceEntries  [ iNextItem  ] . iX  * fResFactor  , fYY  , 
#line 257 "D:/SE1_GPL/Sources/EntitiesMP/CreditsHolder.es"
C_WHITE  | (INDEX) (fFade  * 255));
#line 258 "D:/SE1_GPL/Sources/EntitiesMP/CreditsHolder.es"
fYY  += fTextSize02  * fResFactor  * fTextHeight  * fSpacing02 ;
#line 260 "D:/SE1_GPL/Sources/EntitiesMP/CreditsHolder.es"
pdp  -> SetTextScaling  (fTextSize03  * fResFactor );
#line 261 "D:/SE1_GPL/Sources/EntitiesMP/CreditsHolder.es"
pdp  -> PutTextC  (_acceEntries  [ iNextItem  ] . strQuote  , 
#line 262 "D:/SE1_GPL/Sources/EntitiesMP/CreditsHolder.es"
_acceEntries  [ iNextItem  ] . iX  * fResFactor  , fYY  , 
#line 263 "D:/SE1_GPL/Sources/EntitiesMP/CreditsHolder.es"
C_WHITE  | (INDEX) (fFade  * 255));
#line 265 "D:/SE1_GPL/Sources/EntitiesMP/CreditsHolder.es"
}else if(_acceEntries  [ iNextItem  ] . iAlign  == CTA_RIGHT ){
#line 266 "D:/SE1_GPL/Sources/EntitiesMP/CreditsHolder.es"
FLOAT fYY  = _acceEntries  [ iNextItem  ] . iY  * fResFactor ;
#line 268 "D:/SE1_GPL/Sources/EntitiesMP/CreditsHolder.es"
pdp  -> SetTextScaling  (fTextSize01  * fResFactor );
#line 269 "D:/SE1_GPL/Sources/EntitiesMP/CreditsHolder.es"
pdp  -> PutTextR  (_acceEntries  [ iNextItem  ] . strTitle  , 
#line 270 "D:/SE1_GPL/Sources/EntitiesMP/CreditsHolder.es"
_acceEntries  [ iNextItem  ] . iX  * fResFactor  , fYY  , 
#line 271 "D:/SE1_GPL/Sources/EntitiesMP/CreditsHolder.es"
C_WHITE  | (INDEX) (fFade  * 255));
#line 272 "D:/SE1_GPL/Sources/EntitiesMP/CreditsHolder.es"
fYY  += fTextSize01  * fResFactor  * fTextHeight  * fSpacing01 ;
#line 274 "D:/SE1_GPL/Sources/EntitiesMP/CreditsHolder.es"
pdp  -> SetTextScaling  (fTextSize02  * fResFactor );
#line 275 "D:/SE1_GPL/Sources/EntitiesMP/CreditsHolder.es"
pdp  -> PutTextR  (_acceEntries  [ iNextItem  ] . strName  , 
#line 276 "D:/SE1_GPL/Sources/EntitiesMP/CreditsHolder.es"
_acceEntries  [ iNextItem  ] . iX  * fResFactor  , fYY  , 
#line 277 "D:/SE1_GPL/Sources/EntitiesMP/CreditsHolder.es"
C_WHITE  | (INDEX) (fFade  * 255));
#line 278 "D:/SE1_GPL/Sources/EntitiesMP/CreditsHolder.es"
fYY  += fTextSize02  * fResFactor  * fTextHeight  * fSpacing02 ;
#line 280 "D:/SE1_GPL/Sources/EntitiesMP/CreditsHolder.es"
pdp  -> SetTextScaling  (fTextSize03  * fResFactor );
#line 281 "D:/SE1_GPL/Sources/EntitiesMP/CreditsHolder.es"
pdp  -> PutTextR  (_acceEntries  [ iNextItem  ] . strQuote  , 
#line 282 "D:/SE1_GPL/Sources/EntitiesMP/CreditsHolder.es"
_acceEntries  [ iNextItem  ] . iX  * fResFactor  , fYY  , 
#line 283 "D:/SE1_GPL/Sources/EntitiesMP/CreditsHolder.es"
C_WHITE  | (INDEX) (fFade  * 255));
#line 285 "D:/SE1_GPL/Sources/EntitiesMP/CreditsHolder.es"
}else if(TRUE ){
#line 286 "D:/SE1_GPL/Sources/EntitiesMP/CreditsHolder.es"
FLOAT fYY  = _acceEntries  [ iNextItem  ] . iY  * fResFactor ;
#line 288 "D:/SE1_GPL/Sources/EntitiesMP/CreditsHolder.es"
pdp  -> SetTextScaling  (fTextSize01  * fResFactor );
#line 289 "D:/SE1_GPL/Sources/EntitiesMP/CreditsHolder.es"
pdp  -> PutText  (_acceEntries  [ iNextItem  ] . strTitle  , 
#line 290 "D:/SE1_GPL/Sources/EntitiesMP/CreditsHolder.es"
_acceEntries  [ iNextItem  ] . iX  * fResFactor  , fYY  , 
#line 291 "D:/SE1_GPL/Sources/EntitiesMP/CreditsHolder.es"
C_WHITE  | (INDEX) (fFade  * 255));
#line 292 "D:/SE1_GPL/Sources/EntitiesMP/CreditsHolder.es"
fYY  += fTextSize01  * fResFactor  * fTextHeight  * fSpacing01 ;
#line 294 "D:/SE1_GPL/Sources/EntitiesMP/CreditsHolder.es"
pdp  -> SetTextScaling  (fTextSize02  * fResFactor );
#line 295 "D:/SE1_GPL/Sources/EntitiesMP/CreditsHolder.es"
pdp  -> PutText  (_acceEntries  [ iNextItem  ] . strName  , 
#line 296 "D:/SE1_GPL/Sources/EntitiesMP/CreditsHolder.es"
_acceEntries  [ iNextItem  ] . iX  * fResFactor  , fYY  , 
#line 297 "D:/SE1_GPL/Sources/EntitiesMP/CreditsHolder.es"
C_WHITE  | (INDEX) (fFade  * 255));
#line 298 "D:/SE1_GPL/Sources/EntitiesMP/CreditsHolder.es"
fYY  += fTextSize02  * fResFactor  * fTextHeight  * fSpacing02 ;
#line 300 "D:/SE1_GPL/Sources/EntitiesMP/CreditsHolder.es"
pdp  -> SetTextScaling  (fTextSize03  * fResFactor );
#line 301 "D:/SE1_GPL/Sources/EntitiesMP/CreditsHolder.es"
pdp  -> PutText  (_acceEntries  [ iNextItem  ] . strQuote  , 
#line 302 "D:/SE1_GPL/Sources/EntitiesMP/CreditsHolder.es"
_acceEntries  [ iNextItem  ] . iX  * fResFactor  , fYY  , 
#line 303 "D:/SE1_GPL/Sources/EntitiesMP/CreditsHolder.es"
C_WHITE  | (INDEX) (fFade  * 255));
#line 305 "D:/SE1_GPL/Sources/EntitiesMP/CreditsHolder.es"
}
#line 307 "D:/SE1_GPL/Sources/EntitiesMP/CreditsHolder.es"
iNextItem  ++;
#line 308 "D:/SE1_GPL/Sources/EntitiesMP/CreditsHolder.es"
if(iNextItem  >= _acceEntries  . Count  () || bLast ){
#line 309 "D:/SE1_GPL/Sources/EntitiesMP/CreditsHolder.es"
bOver  = TRUE ;
#line 310 "D:/SE1_GPL/Sources/EntitiesMP/CreditsHolder.es"
break ;
#line 311 "D:/SE1_GPL/Sources/EntitiesMP/CreditsHolder.es"
}
#line 312 "D:/SE1_GPL/Sources/EntitiesMP/CreditsHolder.es"
}
#line 313 "D:/SE1_GPL/Sources/EntitiesMP/CreditsHolder.es"
}
#line 315 "D:/SE1_GPL/Sources/EntitiesMP/CreditsHolder.es"
pdpCurr  -> Unlock  ();
#line 316 "D:/SE1_GPL/Sources/EntitiesMP/CreditsHolder.es"
pdp  -> Lock  ();
#line 318 "D:/SE1_GPL/Sources/EntitiesMP/CreditsHolder.es"
if(bOver ){
#line 319 "D:/SE1_GPL/Sources/EntitiesMP/CreditsHolder.es"
return 0;
#line 320 "D:/SE1_GPL/Sources/EntitiesMP/CreditsHolder.es"
}else {
#line 321 "D:/SE1_GPL/Sources/EntitiesMP/CreditsHolder.es"
return 1;
#line 322 "D:/SE1_GPL/Sources/EntitiesMP/CreditsHolder.es"
}
#line 323 "D:/SE1_GPL/Sources/EntitiesMP/CreditsHolder.es"
}
BOOL CCreditsHolder::
#line 327 "D:/SE1_GPL/Sources/EntitiesMP/CreditsHolder.es"
WaitScrollingToEnd(const CEntityEvent &__eeInput) {
#undef STATE_CURRENT
#define STATE_CURRENT STATE_CCreditsHolder_WaitScrollingToEnd
  ASSERTMSG(__eeInput.ee_slEvent==EVENTCODE_EVoid, "CCreditsHolder::WaitScrollingToEnd expects 'EVoid' as input!");  const EVoid &e = (const EVoid &)__eeInput;
#line 329 "D:/SE1_GPL/Sources/EntitiesMP/CreditsHolder.es"
Jump(STATE_CURRENT,0x00f00003, FALSE, EInternal());return TRUE;}BOOL CCreditsHolder::H0x00f00003_WaitScrollingToEnd_03(const CEntityEvent &__eeInput)
#line 330 "D:/SE1_GPL/Sources/EntitiesMP/CreditsHolder.es"
{
ASSERT(__eeInput.ee_slEvent==EVENTCODE_EInternal);
#undef STATE_CURRENT
#define STATE_CURRENT 0x00f00003
if(!(! m_bEnd )){ Jump(STATE_CURRENT,0x00f00004, FALSE, EInternal());return TRUE;}
#line 331 "D:/SE1_GPL/Sources/EntitiesMP/CreditsHolder.es"
SetTimerAfter(_pTimer  -> TickQuantum );
Jump(STATE_CURRENT, 0x00f00001, FALSE, EBegin());return TRUE;}BOOL CCreditsHolder::H0x00f00001_WaitScrollingToEnd_01(const CEntityEvent &__eeInput) {
#undef STATE_CURRENT
#define STATE_CURRENT 0x00f00001
switch(__eeInput.ee_slEvent) {case EVENTCODE_EBegin: return TRUE;case EVENTCODE_ETimer: Jump(STATE_CURRENT,0x00f00002, FALSE, EInternal()); return TRUE;default: return FALSE; }}BOOL CCreditsHolder::H0x00f00002_WaitScrollingToEnd_02(const CEntityEvent &__eeInput){
ASSERT(__eeInput.ee_slEvent==EVENTCODE_EInternal);
#undef STATE_CURRENT
#define STATE_CURRENT 0x00f00002
;
#line 332 "D:/SE1_GPL/Sources/EntitiesMP/CreditsHolder.es"
m_fMyTimerLast  = m_fMyTimer ;
#line 333 "D:/SE1_GPL/Sources/EntitiesMP/CreditsHolder.es"
m_fMyTimer  += _pTimer  -> TickQuantum  / _pNetwork  -> GetRealTimeFactor  ();Jump(STATE_CURRENT,0x00f00003, FALSE, EInternal());return TRUE;
#line 334 "D:/SE1_GPL/Sources/EntitiesMP/CreditsHolder.es"
}BOOL CCreditsHolder::H0x00f00004_WaitScrollingToEnd_04(const CEntityEvent &__eeInput) {
ASSERT(__eeInput.ee_slEvent==EVENTCODE_EInternal);
#undef STATE_CURRENT
#define STATE_CURRENT 0x00f00004

#line 335 "D:/SE1_GPL/Sources/EntitiesMP/CreditsHolder.es"
Return(STATE_CURRENT,EStop  ());
#line 335 "D:/SE1_GPL/Sources/EntitiesMP/CreditsHolder.es"
return TRUE; ASSERT(FALSE); return TRUE;};BOOL CCreditsHolder::
#line 338 "D:/SE1_GPL/Sources/EntitiesMP/CreditsHolder.es"
Main(const CEntityEvent &__eeInput) {
#undef STATE_CURRENT
#define STATE_CURRENT STATE_CCreditsHolder_Main
  ASSERTMSG(__eeInput.ee_slEvent==EVENTCODE_EVoid, "CCreditsHolder::Main expects 'EVoid' as input!");  const EVoid &e = (const EVoid &)__eeInput;
#line 340 "D:/SE1_GPL/Sources/EntitiesMP/CreditsHolder.es"
InitAsEditorModel  ();
#line 341 "D:/SE1_GPL/Sources/EntitiesMP/CreditsHolder.es"
SetPhysicsFlags  (EPF_MODEL_IMMATERIAL );
#line 342 "D:/SE1_GPL/Sources/EntitiesMP/CreditsHolder.es"
SetCollisionFlags  (ECF_IMMATERIAL );
#line 345 "D:/SE1_GPL/Sources/EntitiesMP/CreditsHolder.es"
SetModel  (MODEL_HOLDER );
#line 346 "D:/SE1_GPL/Sources/EntitiesMP/CreditsHolder.es"
SetModelMainTexture  (TEXTURE_HOLDER );
#line 348 "D:/SE1_GPL/Sources/EntitiesMP/CreditsHolder.es"
SetTimerAfter(0.05f);
Jump(STATE_CURRENT, 0x00f00005, FALSE, EBegin());return TRUE;}BOOL CCreditsHolder::H0x00f00005_Main_01(const CEntityEvent &__eeInput) {
#undef STATE_CURRENT
#define STATE_CURRENT 0x00f00005
switch(__eeInput.ee_slEvent) {case EVENTCODE_EBegin: return TRUE;case EVENTCODE_ETimer: Jump(STATE_CURRENT,0x00f00006, FALSE, EInternal()); return TRUE;default: return FALSE; }}BOOL CCreditsHolder::H0x00f00006_Main_02(const CEntityEvent &__eeInput){
ASSERT(__eeInput.ee_slEvent==EVENTCODE_EInternal);
#undef STATE_CURRENT
#define STATE_CURRENT 0x00f00006
;
#line 350 "D:/SE1_GPL/Sources/EntitiesMP/CreditsHolder.es"
if(! Credits_On  (m_fnmMessage ))
#line 351 "D:/SE1_GPL/Sources/EntitiesMP/CreditsHolder.es"
{
#line 352 "D:/SE1_GPL/Sources/EntitiesMP/CreditsHolder.es"
CPrintF  ("Error loading credits file '%s'!\n" , m_fnmMessage );
#line 353 "D:/SE1_GPL/Sources/EntitiesMP/CreditsHolder.es"
Credits_Off  ();
#line 354 "D:/SE1_GPL/Sources/EntitiesMP/CreditsHolder.es"
Return(STATE_CURRENT,EVoid());
#line 354 "D:/SE1_GPL/Sources/EntitiesMP/CreditsHolder.es"
return TRUE;
#line 355 "D:/SE1_GPL/Sources/EntitiesMP/CreditsHolder.es"
}
#line 356 "D:/SE1_GPL/Sources/EntitiesMP/CreditsHolder.es"
m_bDataError  = FALSE ;
#line 358 "D:/SE1_GPL/Sources/EntitiesMP/CreditsHolder.es"
SetTimerAt(THINKTIME_NEVER);
Jump(STATE_CURRENT, 0x00f00007, FALSE, EBegin());return TRUE;}BOOL CCreditsHolder::H0x00f00007_Main_03(const CEntityEvent &__eeInput) {
#undef STATE_CURRENT
#define STATE_CURRENT 0x00f00007
switch(__eeInput.ee_slEvent){case(EVENTCODE_EStart):
#line 360 "D:/SE1_GPL/Sources/EntitiesMP/CreditsHolder.es"
{const EStart&eStart= (EStart&)__eeInput;

#line 361 "D:/SE1_GPL/Sources/EntitiesMP/CreditsHolder.es"
CWorldSettingsController  * pwsc  = GetWSC  (this );
#line 362 "D:/SE1_GPL/Sources/EntitiesMP/CreditsHolder.es"
if(pwsc  != NULL )
#line 363 "D:/SE1_GPL/Sources/EntitiesMP/CreditsHolder.es"
{
#line 364 "D:/SE1_GPL/Sources/EntitiesMP/CreditsHolder.es"
m_fMyTimer  = 0;
#line 365 "D:/SE1_GPL/Sources/EntitiesMP/CreditsHolder.es"
m_fMyTimerLast  = 0;
#line 366 "D:/SE1_GPL/Sources/EntitiesMP/CreditsHolder.es"
ECredits  ecr ;
#line 367 "D:/SE1_GPL/Sources/EntitiesMP/CreditsHolder.es"
ecr  . bStart  = TRUE ;
#line 368 "D:/SE1_GPL/Sources/EntitiesMP/CreditsHolder.es"
ecr  . penSender  = this ;
#line 369 "D:/SE1_GPL/Sources/EntitiesMP/CreditsHolder.es"
pwsc  -> SendEvent  (ecr );
#line 370 "D:/SE1_GPL/Sources/EntitiesMP/CreditsHolder.es"
}
#line 371 "D:/SE1_GPL/Sources/EntitiesMP/CreditsHolder.es"
Call(STATE_CURRENT, STATE_CCreditsHolder_WaitScrollingToEnd, TRUE, EVoid());return TRUE;
#line 372 "D:/SE1_GPL/Sources/EntitiesMP/CreditsHolder.es"
}ASSERT(FALSE);break;case(EVENTCODE_EStop):
#line 374 "D:/SE1_GPL/Sources/EntitiesMP/CreditsHolder.es"
{const EStop&eStop= (EStop&)__eeInput;

#line 375 "D:/SE1_GPL/Sources/EntitiesMP/CreditsHolder.es"
CWorldSettingsController  * pwsc  = GetWSC  (this );
#line 376 "D:/SE1_GPL/Sources/EntitiesMP/CreditsHolder.es"
if(pwsc  != NULL )
#line 377 "D:/SE1_GPL/Sources/EntitiesMP/CreditsHolder.es"
{
#line 378 "D:/SE1_GPL/Sources/EntitiesMP/CreditsHolder.es"
ECredits  ecr ;
#line 379 "D:/SE1_GPL/Sources/EntitiesMP/CreditsHolder.es"
ecr  . bStart  = FALSE ;
#line 380 "D:/SE1_GPL/Sources/EntitiesMP/CreditsHolder.es"
ecr  . penSender  = this ;
#line 381 "D:/SE1_GPL/Sources/EntitiesMP/CreditsHolder.es"
pwsc  -> SendEvent  (ecr );
#line 382 "D:/SE1_GPL/Sources/EntitiesMP/CreditsHolder.es"
}
#line 383 "D:/SE1_GPL/Sources/EntitiesMP/CreditsHolder.es"
UnsetTimer();Jump(STATE_CURRENT,0x00f00008, FALSE, EInternal());return TRUE;
#line 384 "D:/SE1_GPL/Sources/EntitiesMP/CreditsHolder.es"
}ASSERT(FALSE);break;default: return FALSE; break;
#line 385 "D:/SE1_GPL/Sources/EntitiesMP/CreditsHolder.es"
}return TRUE;}BOOL CCreditsHolder::H0x00f00008_Main_04(const CEntityEvent &__eeInput){
ASSERT(__eeInput.ee_slEvent==EVENTCODE_EInternal);
#undef STATE_CURRENT
#define STATE_CURRENT 0x00f00008

#line 386 "D:/SE1_GPL/Sources/EntitiesMP/CreditsHolder.es"
Credits_Off  ();
#line 387 "D:/SE1_GPL/Sources/EntitiesMP/CreditsHolder.es"
if(m_penEndCreditsTrigger ){
#line 388 "D:/SE1_GPL/Sources/EntitiesMP/CreditsHolder.es"
SendToTarget  (m_penEndCreditsTrigger  , EET_TRIGGER  , FixupCausedToPlayer  (this  , NULL  , FALSE ));
#line 389 "D:/SE1_GPL/Sources/EntitiesMP/CreditsHolder.es"
}
#line 390 "D:/SE1_GPL/Sources/EntitiesMP/CreditsHolder.es"
Return(STATE_CURRENT,EVoid());
#line 390 "D:/SE1_GPL/Sources/EntitiesMP/CreditsHolder.es"
return TRUE; ASSERT(FALSE); return TRUE;};